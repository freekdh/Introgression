(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1312593,      26878]
NotebookOptionsPosition[   1296675,      26379]
NotebookOutlinePosition[   1297110,      26396]
CellTagsIndexPosition[   1297067,      26393]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Introgressive hybridization: balancing genetic and demographic swamping\
\>", "Title",
 CellChangeTimes->{{3.669404681895485*^9, 3.669404687979115*^9}, {
  3.669664219340251*^9, 3.66966422136833*^9}, {3.678461838357969*^9, 
  3.678461846698141*^9}, {3.6817494609545116`*^9, 3.6817494768524313`*^9}}],

Cell["Freek J.H. de Haas & Sarah P. Otto ", "Subtitle",
 CellChangeTimes->{{3.681715677352151*^9, 3.681715688340458*^9}, {
  3.681749601295126*^9, 3.6817496184110537`*^9}}],

Cell["University of British Columbia", "Subsubtitle",
 CellChangeTimes->{{3.681749513342204*^9, 3.6817495296439233`*^9}}],

Cell["Contact: freekdh@gmail.com", "Subsubtitle",
 CellChangeTimes->{{3.681749538692093*^9, 3.6817495669621553`*^9}}],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.663620917921233*^9, 3.6636209194647903`*^9}, {
  3.6651772207276707`*^9, 3.665177222532505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"for", " ", "uniformity", " ", "among", " ", "figures"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LabelSize", "=", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FigureSize", "=", "650"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TickSize", "=", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LetterSize", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pad", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"70", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"70", ",", "10"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"letpos", "=", 
     RowBox[{"{", 
      RowBox[{".05", ",", ".93"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ylabpos", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1"}], ",", "0.5"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"directory", " ", "to", " ", "save", " ", "figures", " ", "in"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imagedir", "=", "\"\<../Figures/\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "for", " ", "plotting", " ", "means", " ", "with", " ", "error", " ", 
     "bars"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.663620890061428*^9, 3.663620934355365*^9}, {
  3.664119991974739*^9, 3.664120035416559*^9}, {3.6706795919925833`*^9, 
  3.670679597672941*^9}, {3.670679663430634*^9, 3.670679664979227*^9}, {
  3.6706917981699944`*^9, 3.670691803088605*^9}, {3.670692006853404*^9, 
  3.6706920073503113`*^9}, {3.6706920441800947`*^9, 3.6706920770965014`*^9}, {
  3.6805043329397564`*^9, 3.68050433397792*^9}, {3.681735474371804*^9, 
  3.681735480217762*^9}, {3.6817495866562333`*^9, 3.681749587581029*^9}, {
  3.7435133450767593`*^9, 3.743513353554083*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical solution haploids", "Section",
 CellChangeTimes->{{3.6694047034874983`*^9, 3.669404722707395*^9}, {
  3.675730214301454*^9, 3.675730215357461*^9}}],

Cell["\<\
Assuming exponential growth of the invader and resident assumes that the \
populations remain small. When populations are larger, density dependence \
should be taken into account.\
\>", "Text",
 CellChangeTimes->{{3.6817153893403387`*^9, 3.6817154550858445`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rRes", "\[Rule]", 
      RowBox[{"Log", "[", "0.1", "]"}]}], ",", 
     RowBox[{"rInv", "\[Rule]", 
      RowBox[{"Log", "[", "1.01", "]"}]}], ",", 
     RowBox[{"kRes", "\[Rule]", "10"}], ",", 
     RowBox[{"kInv", "\[Rule]", "1"}], ",", 
     RowBox[{"\[CapitalTheta]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.669475762416655*^9, 3.669475762704966*^9}, {
   3.669656043478197*^9, 3.669656049530087*^9}, {3.6696570999114532`*^9, 
   3.669657100122428*^9}, {3.6696572639980707`*^9, 3.6696572641186447`*^9}, 
   3.669659336843598*^9, {3.669659638871489*^9, 3.6696596392904453`*^9}, {
   3.670086330561297*^9, 3.670086331648316*^9}, {3.6709648730013447`*^9, 
   3.670964907403871*^9}, {3.671198801814736*^9, 3.671198818172246*^9}, {
   3.671200267333375*^9, 3.671200272374786*^9}, {3.67198046285066*^9, 
   3.6719804851780877`*^9}, {3.671981975556274*^9, 3.671981975672176*^9}, {
   3.671992394275082*^9, 3.6719924148814716`*^9}, {3.673623698161332*^9, 
   3.67362373999714*^9}, {3.6736237718878155`*^9, 3.673623772059938*^9}, {
   3.6738733813885393`*^9, 3.673873388077634*^9}, {3.67387389982911*^9, 
   3.6738739844474545`*^9}, {3.673909972228497*^9, 3.673910008917719*^9}, {
   3.6739101308042464`*^9, 3.673910213283836*^9}, {3.67391043642178*^9, 
   3.6739104368381124`*^9}, {3.67391058300487*^9, 3.673910583150025*^9}, 
   3.673911440890007*^9, 3.673912226551566*^9, {3.673912256833956*^9, 
   3.6739122572133217`*^9}, {3.6739698914478188`*^9, 3.673969945548135*^9}, {
   3.6813027430075617`*^9, 3.68130276089065*^9}, {3.681715469404931*^9, 
   3.681715469494042*^9}, {3.6817506142117124`*^9, 3.681750614432621*^9}, {
   3.6850011546957006`*^9, 3.6850011668513284`*^9}, {3.685001361852757*^9, 
   3.6850013619688396`*^9}, {3.6850014647367506`*^9, 3.6850014651860695`*^9}, 
   3.6850018484691296`*^9, {3.6850018976540384`*^9, 3.685001898070334*^9}, {
   3.6850019399910593`*^9, 3.685001940275261*^9}, 3.743513404428171*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nRes", "[", "t_", "]"}], ":=", 
   RowBox[{"kRes", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", "t", ")"}], "*", "rRes"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nInv", "[", "t_", "]"}], ":=", 
   RowBox[{"kInv", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", "t", ")"}], "*", "rInv"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6739122623162456`*^9, 3.673912267374289*^9}, {
  3.6739128516234655`*^9, 3.673912854366818*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "simulatefrac", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatefrac", "[", 
   RowBox[{
   "t_", ",", "rRes_", ",", "rInv_", ",", "kRes_", ",", "kInv_", ",", 
    "\[CapitalTheta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"simulatefrac", "[", 
    RowBox[{
    "t", ",", "rRes", ",", "rInv", ",", "kRes", ",", "kInv", ",", 
     "\[CapitalTheta]"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fracRes", "=", 
        RowBox[{
         RowBox[{"simulatefrac", "[", 
          RowBox[{
           RowBox[{"t", "-", "1"}], ",", "rRes", ",", "rInv", ",", "kRes", 
           ",", "kInv", ",", "\[CapitalTheta]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"fracInv", "=", 
        RowBox[{
         RowBox[{"simulatefrac", "[", 
          RowBox[{
           RowBox[{"t", "-", "1"}], ",", "rRes", ",", "rInv", ",", "kRes", 
           ",", "kInv", ",", "\[CapitalTheta]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"nRes", "[", 
        RowBox[{"t", "-", "1"}], "]"}], "=", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}], "*", "rRes"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nInv", "[", 
        RowBox[{"t", "-", "1"}], "]"}], "=", 
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}], "*", "rInv"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newfracRes", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", "fracRes"}], "+", 
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", "fracInv"}]}], ")"}], "*", 
         FractionBox[
          RowBox[{"nInv", "[", 
           RowBox[{"t", "-", "1"}], "]"}], 
          RowBox[{
           RowBox[{"nInv", "[", 
            RowBox[{"t", "-", "1"}], "]"}], "+", 
           RowBox[{
            RowBox[{"nRes", "[", 
             RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}]}]]}], "+", 
        RowBox[{
         RowBox[{"(", "fracRes", ")"}], "*", 
         FractionBox[
          RowBox[{
           RowBox[{"nRes", "[", 
            RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}], 
          RowBox[{
           RowBox[{"nInv", "[", 
            RowBox[{"t", "-", "1"}], "]"}], "+", 
           RowBox[{
            RowBox[{"nRes", "[", 
             RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}]}]]}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "This", " ", "is", " ", "the", " ", "equation", " ", "describing", 
         " ", "how", " ", "the", " ", "genomic", " ", "background", " ", 
         "changes", " ", "for", " ", "an", " ", "individual", " ", "carrying",
          " ", "A"}], ",", " ", 
        RowBox[{
        "depending", " ", "on", " ", "who", " ", "it", " ", "mates", " ", 
         RowBox[{"with", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"newfracInv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", "fracRes"}], "+", 
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", "fracInv"}]}], ")"}], "*", 
         FractionBox[
          RowBox[{"nRes", "[", 
           RowBox[{"t", "-", "1"}], "]"}], 
          RowBox[{
           RowBox[{
            RowBox[{"nInv", "[", 
             RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}], "+", 
           RowBox[{"nRes", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}]]}], "+", 
        RowBox[{
         RowBox[{"(", "fracInv", ")"}], "*", 
         FractionBox[
          RowBox[{
           RowBox[{"nInv", "[", 
            RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}], 
          RowBox[{
           RowBox[{
            RowBox[{"nInv", "[", 
             RowBox[{"t", "-", "1"}], "]"}], "\[CapitalTheta]"}], "+", 
           RowBox[{"nRes", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}]]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "This", " ", "is", " ", "the", " ", "equation", " ", "describing", 
         " ", "how", " ", "the", " ", "genomic", " ", "background", " ", 
         "changes", " ", "for", " ", "an", " ", "individual", " ", "carrying",
          " ", "a"}], ",", " ", 
        RowBox[{
        "depending", " ", "on", " ", "who", " ", "it", " ", "mates", " ", 
         RowBox[{"with", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"newfracRes", ",", "newfracInv"}], "}"}]}]}], " ", 
    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulatefrac", "[", 
    RowBox[{"0", ",", 
     RowBox[{"rRes", "/.", "param"}], ",", 
     RowBox[{"rInv", "/.", "param"}], ",", 
     RowBox[{"kRes", "/.", "param"}], ",", 
     RowBox[{"kInv", "/.", "param"}], ",", 
     RowBox[{"\[CapitalTheta]", "/.", "param"}]}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.669484908475884*^9, 3.669484908777437*^9}, {
   3.669484953897912*^9, 3.66948495538684*^9}, {3.6696411914468927`*^9, 
   3.669641224096984*^9}, {3.669641952173627*^9, 3.669641979831509*^9}, {
   3.669642049309876*^9, 3.669642050754668*^9}, {3.6696421417650433`*^9, 
   3.669642152358448*^9}, {3.669642616199952*^9, 3.669642617312356*^9}, {
   3.669652880931847*^9, 3.6696528866547318`*^9}, {3.6696529234347563`*^9, 
   3.669652927555522*^9}, {3.669653477184184*^9, 3.6696535020055857`*^9}, {
   3.6696535641858807`*^9, 3.669653584587854*^9}, {3.669655556021801*^9, 
   3.669655569195314*^9}, {3.669655678877632*^9, 3.669655682310369*^9}, {
   3.669655729028675*^9, 3.669655747166358*^9}, {3.669657343777143*^9, 
   3.669657350051628*^9}, 3.6696573827523518`*^9, {3.6719773150417366`*^9, 
   3.671977354938433*^9}, {3.6719805381474504`*^9, 3.67198066254386*^9}, {
   3.6719808131145678`*^9, 3.671980835076079*^9}, {3.671980892182684*^9, 
   3.671980896323992*^9}, {3.6719812577993975`*^9, 3.6719813049139953`*^9}, {
   3.6719813526479206`*^9, 3.6719813613330116`*^9}, {3.6719818087030287`*^9, 
   3.6719818125487967`*^9}, {3.671981864194917*^9, 3.6719818682472796`*^9}, {
   3.671981907812398*^9, 3.671981909416748*^9}, {3.6719923991364346`*^9, 
   3.6719924254632893`*^9}, {3.6721453974129505`*^9, 
   3.6721453991387873`*^9}, {3.6739104440278273`*^9, 
   3.6739104693640623`*^9}, {3.6739114438438993`*^9, 3.673911444329602*^9}, {
   3.673911635101306*^9, 3.673911724419719*^9}, {3.6739117846508274`*^9, 
   3.6739118151360917`*^9}, {3.673911952308709*^9, 3.673912017245824*^9}, {
   3.6739122865741386`*^9, 3.6739123614541883`*^9}, 3.6739124974614353`*^9, {
   3.673912564499179*^9, 3.6739125664025574`*^9}, {3.673912802560397*^9, 
   3.673912858750444*^9}, {3.6756317229345627`*^9, 3.675631726874359*^9}, 
   3.6813024347389793`*^9, {3.685001001688201*^9, 3.685001038520915*^9}, {
   3.6850010971048365`*^9, 3.685001143301614*^9}, {3.6850012891621375`*^9, 
   3.6850012898366165`*^9}, {3.685001914034664*^9, 3.6850019576515937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"simulatefrac", "[", 
              RowBox[{"t", ",", 
               RowBox[{"rRes", "/.", "param"}], ",", 
               RowBox[{"rInv", "/.", "param"}], ",", 
               RowBox[{"kRes", "/.", "param"}], ",", 
               RowBox[{"kInv", "/.", "param"}], ",", 
               RowBox[{"\[CapitalTheta]", "/.", "param"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "15"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Red"}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"simulatefrac", "[", 
              RowBox[{"t", ",", 
               RowBox[{"rRes", "/.", "param"}], ",", 
               RowBox[{"rInv", "/.", "param"}], ",", 
               RowBox[{"kRes", "/.", "param"}], ",", 
               RowBox[{"kInv", "/.", "param"}], ",", 
               RowBox[{"\[CapitalTheta]", "/.", "param"}]}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "15"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Blue"}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Generation\>\"", ",", "LabelSize"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Proportion resident alleles (F)\>\"", ",", "LabelSize"}], 
          "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Red"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Blue"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Resident\>\"", ",", "LabelSize"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Invader\>\"", ",", "LabelSize"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   " ", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6805219984856544`*^9, 3.680522017134122*^9}, {
  3.6805220846131945`*^9, 3.6805220895426292`*^9}, {3.680522175840897*^9, 
  3.680522200885594*^9}, {3.6805222886221895`*^9, 3.680522321962515*^9}, {
  3.680522378032796*^9, 3.680522401279133*^9}, {3.6805225794893165`*^9, 
  3.6805226987180777`*^9}, {3.6805235172493534`*^9, 3.6805235286597853`*^9}, {
  3.6805236336229625`*^9, 3.680523633999872*^9}, {3.6812942868522696`*^9, 
  3.6812943492389092`*^9}, {3.681376909220874*^9, 3.681376915274719*^9}, {
  3.681791922620347*^9, 3.6817919285223985`*^9}, {3.685001215034526*^9, 
  3.6850012391746593`*^9}, {3.743513230846943*^9, 3.7435132674485817`*^9}, {
  3.743513420009774*^9, 3.743513423143182*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        PointBox[{{0., 1.}, {1., 0.9545454545454546}, {2., 
         0.8289235639981909}, {3., 0.7150832818805228}, {4., 
         0.6531840695371722}, {5., 0.6219640713417928}, {6., 
         0.606340557865492}, {7., 0.5985281314620827}, {8., 
         0.5946218851055093}, {9., 0.592668760285877}, {10., 
         0.5916921977948062}, {11., 0.5912039165452482}, {12., 
         0.5909597759202703}, {13., 0.5908377056077714}, {14., 
         0.5907766704515214}, {15., 
         0.5907461528733964}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.4545454545454546}, {2., 
         0.5789235639981909}, {3., 0.5900832818805228}, {4., 
         0.5906840695371722}, {5., 0.5907140713417928}, {6., 
         0.5907155578654921}, {7., 0.5907156314620828}, {8., 
         0.5907156351055093}, {9., 0.5907156352858771}, {10., 
         0.5907156352948063}, {11., 0.5907156352952483}, {12., 
         0.5907156352952702}, {13., 0.5907156352952713}, {14., 
         0.5907156352952713}, {15., 
         0.5907156352952713}}]}, {}}, {}, {}, {{}, {}}}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Resident\"", 25, StripOnInput -> False],StyleBox[
       "\"Invader\"", 25, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"Generation\"", 25, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox[
      "\"Proportion resident alleles (F)\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 15}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.02], 
           RGBColor[1, 0, 0]], 
          
          Point[{{0., 1.}, {1., 0.9545454545454546}, {2., 
           0.8289235639981909}, {3., 0.7150832818805228}, {4., 
           0.6531840695371722}, {5., 0.6219640713417928}, {6., 
           0.606340557865492}, {7., 0.5985281314620827}, {8., 
           0.5946218851055093}, {9., 0.592668760285877}, {10., 
           0.5916921977948062}, {11., 0.5912039165452482}, {12., 
           0.5909597759202703}, {13., 0.5908377056077714}, {14., 
           0.5907766704515214}, {15., 
           0.5907461528733964}}]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           PointSize[0.02], 
           RGBColor[0, 0, 1]], 
          
          Point[{{0., 0.}, {1., 0.4545454545454546}, {2., 
           0.5789235639981909}, {3., 0.5900832818805228}, {4., 
           0.5906840695371722}, {5., 0.5907140713417928}, {6., 
           0.5907155578654921}, {7., 0.5907156314620828}, {8., 
           0.5907156351055093}, {9., 0.5907156352858771}, {10., 
           0.5907156352948063}, {11., 0.5907156352952483}, {12., 
           0.5907156352952702}, {13., 0.5907156352952713}, {14., 
           0.5907156352952713}, {15., 
           0.5907156352952713}}]}, {}}}, {}, {}, {{}, {}}}}, {
     Frame -> True, FrameLabel -> {
        Style["Generation", 25], 
        Style["Proportion resident alleles (F)", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 15}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 15}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.1], 
         RGBColor[1, 0, 0]], 
        Directive[
         Thickness[0.1], 
         RGBColor[0, 0, 1]]}, {
        Style["Resident", 25], 
        Style["Invader", 25]}, LegendFunction -> "Frame", LegendLayout -> 
       "Column"]], {0.8, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.681376950652286*^9, 3.6817154819068007`*^9, {3.681735658654894*^9, 
   3.6817356671747293`*^9}, {3.681735825595439*^9, 3.6817358444840155`*^9}, 
   3.6817506215360737`*^9, {3.6817919295745516`*^9, 3.681791946936902*^9}, 
   3.6817968063160877`*^9, {3.685000933870079*^9, 3.6850009479530745`*^9}, {
   3.6850010462387395`*^9, 3.685001071743843*^9}, {3.6850012444564247`*^9, 
   3.685001254860791*^9}, {3.6850013023494987`*^9, 3.6850013080695734`*^9}, {
   3.6850013693830905`*^9, 3.685001467626817*^9}, {3.685001840674569*^9, 
   3.685001850928846*^9}, {3.685001901862015*^9, 3.685001942544876*^9}, 
   3.685001975000906*^9, {3.743513221261528*^9, 3.743513268102295*^9}, 
   3.7435133579492893`*^9, {3.7435134083111477`*^9, 3.7435134241297197`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"imagedir", "<>", "\"\<NumericalSolution.eps\>\""}], ",", 
     "plot"}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.681735616455961*^9, 3.681735630204251*^9}, {
  3.681735818539029*^9, 3.681735841421861*^9}, {3.743513276565473*^9, 
  3.74351327721307*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytical solution", "Section",
 CellChangeTimes->{{3.6694135210994797`*^9, 3.669413523206723*^9}}],

Cell[CellGroupData[{

Cell["Continuous time solution", "Subsection",
 CellChangeTimes->{{3.678462328684248*^9, 3.678462340775803*^9}, {
   3.678462724517347*^9, 3.6784627267464747`*^9}, 3.6817975491896105`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rRes", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"0.1", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"rInv", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"1.0", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"kRes", "\[Rule]", "10"}], ",", 
     RowBox[{"kInv", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input"],

Cell["\<\
Set up differential equations by substracting \[CapitalDelta]fracRes = \
fracRes[t+1] - fracRes[t] & \[CapitalDelta]fracInv = fracInv[t+1] - fracInv[t]\
\>", "Text",
 CellChangeTimes->{{3.6817975574473934`*^9, 3.681797619967373*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DfracRes", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{"kInv", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rInv"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"fracRes", "[", "t", "]"}], ")"}], "*", 
     FractionBox[
      RowBox[{"kRes", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rRes"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "-", 
    RowBox[{"fracRes", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DfracInv", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{"kRes", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rRes"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"fracInv", "[", "t", "]"}], ")"}], "*", 
     FractionBox[
      RowBox[{"kInv", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rInv"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "-", 
    RowBox[{"fracInv", "[", "t", "]"}]}]}], ";"}]}], "Input"],

Cell["\<\
To solve these differential equations, use avg[t] and dif[t] as substitutions\
\
\>", "Text",
 CellChangeTimes->{{3.6817976288469396`*^9, 3.6817976515337515`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subme", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"sum", "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"fracInv", "[", "t", "]"}], "+", 
          RowBox[{"fracRes", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"dif", "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"fracRes", "[", "t", "]"}], "-", 
          RowBox[{"fracInv", "[", "t", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fracInv", "[", "t", "]"}], ",", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6817977605726004`*^9, 3.6817977608754473`*^9}, {
   3.6817978488418427`*^9, 3.6817978638440905`*^9}, 3.681797902528635*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ddif", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DfracRes", "-", "DfracInv"}], "/.", "subme"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dsum", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DfracRes", "+", "DfracInv"}], "/.", "subme"}], "//", 
    "Simplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.681715883739493*^9, 3.6817158841166344`*^9}, {
  3.6817977162485313`*^9, 3.6817977186837125`*^9}, {3.6817978267659225`*^9, 
  3.6817978424266553`*^9}, {3.6817978744749985`*^9, 3.68179792144587*^9}, {
  3.6817979639045253`*^9, 3.68179797254294*^9}}],

Cell["Plot numerical solution of dif[t] and sum[t]", "Text",
 CellChangeTimes->{{3.6817977241616735`*^9, 3.681797772093669*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solvemeN2", "[", 
    RowBox[{"kRes_", ",", "rRes_", ",", "kInv_", ",", "rInv_"}], "]"}], ":=", 
   
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"dif", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"dif", "[", "t", "]"}], "2"]}]}], ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"sum", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"rInv", " ", "t"}]]}], " ", "kInv"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"rRes", " ", "t"}]], " ", "kRes"}]}], ")"}], " ", 
          RowBox[{"dif", "[", "t", "]"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"rInv", " ", "t"}]], " ", "kInv"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"rRes", " ", "t"}]], " ", "kRes"}]}], ")"}]}]]}], ",", 
       RowBox[{
        RowBox[{"dif", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"sum", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dif", "[", "t", "]"}], ",", 
       RowBox[{"sum", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.681715901046934*^9, 3.681797785085752*^9, 
  3.6817979313336987`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"dif", "[", "t", "]"}], "/.", 
       RowBox[{"solvemeN2", "[", 
        RowBox[{
         RowBox[{"kRes", "/.", "param"}], ",", 
         RowBox[{"rRes", "/.", "param"}], ",", 
         RowBox[{"kInv", "/.", "param"}], ",", 
         RowBox[{"rInv", "/.", "param"}]}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"sum", "[", "t", "]"}], "/.", 
       RowBox[{"solvemeN2", "[", 
        RowBox[{
         RowBox[{"kRes", "/.", "param"}], ",", 
         RowBox[{"rRes", "/.", "param"}], ",", 
         RowBox[{"kInv", "/.", "param"}], ",", 
         RowBox[{"rInv", "/.", "param"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6784630534706783`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwl13k8VF8bAHCE7CFbSPZ9X8d6HhLSJkl2kpAtSVGyRCktSETIWoSy/ghF
kihJaBWyVGYQMUMiy3tu7z8zn+899zz3ued5zty5Ep7HbY8y0NHRGeEP4lsy
abUwR6zK5KQqVzAd3SyyPFHMGuibhFYtL5ac3zKL9o8qJ8n75qK+0GahfM1Z
ZH/7135m3wpUzbR8pOHILHJYsNFa8HmK7u+rTLJ8Notac2lfwkufIaODYwrV
n2bRpzYT0cW858h8oTa5fnoWMWz6kEO73oGuhTuGpwvNIcdC+rs/fd4i0q+a
gtRjc0jPqyhEp6IHPXLJu/n+3Bxq/b3rZmhpLypbGGt6mDSHPoukv6fmvUPO
WW+iFP+bQxu8VQ79uv4JMSfZp+z4M4cS//SFqSZ8RtrCbZstWahI6Gp4RuCF
fkSKO3Z7WJCKVCuf90+dHUA2J150vtehIqdlRxeKzzD6cEBktTOAikLao5tv
aowgF4agG9FnqKg+qW+vVsUIkjV0Z+68SEVmkuHHQ0pHEf+mRF/xO1R0eapz
nUd+DJ1RaHJTvk9Fb/7bmlx1bwyNjbfv7K6mIgfL55Wzed9Qc82Uy/t2Ksrh
FjBNFvuOMpOu9ZF6qOhbv2+vWvZ31Jv/aUSrn4qCArioQek/0NFu0baZCSr6
T+dwLBf/OPpTeUK5Yo6KltZqeMtTxlGYicrpjUtUdOGGo9b0dTLqq/C+cp6Z
hjqdHjy/xk5BYc1K2+9y0NAm6fUDygkUNLfXo92Dl4bspvd/f808gcannzx7
JEhDmXV3Q/0vTKC4xLjJElEaGo5eZGRnmERPnWkLehI0JL3TOq00ehJlF6Tf
9pShIT/eOzLWq5NoaKo8V1GBhioGftVOnJ1CTFk9tGRlGpq/a2aR8GcKPe5K
vnBLjYYMgtI+yp/+iUruxIGRJg1F61G8X9J+ok+pdVvitGmojc5w0efENLKh
U5MK0KUhts7rlzb+mkbrH+bO/9GjoX03RwSLA2bQG0t1ZwV9Gkp10bpvMTmD
1uil3q9jf5GJJ437/EI2yelikQY0tCp9YVhg9hfaEXv4cT42N6/pcymjWVQ/
l/rSAzufp0XAKGYW+VrdWX6M52vyID+7tllEF7ibvZaE8+FubgpgmUPPD5h+
3IOvf5DbmOfi7jl0vVDO/LIODY1veuJ1J3kOiclUG3tr0VD4JsP62vdz6ESE
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 50}, {0., 1.201814395863168}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6784630560223093`*^9, 3.6784630847068624`*^9}, 
   3.681715927793462*^9, 3.6817159918826294`*^9, 3.681796830464939*^9, 
   3.681797781746464*^9, 3.681797980318632*^9}]
}, Open  ]],

Cell["Solution for dif[t] is easy to find:", "Text",
 CellChangeTimes->{{3.6817979948524933`*^9, 3.681798002711052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"dif", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"dif", "[", "t", "]"}], "2"]}]}], ",", 
      RowBox[{
       RowBox[{"dif", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"dif", "[", "t", "]"}], "}"}], ",", "t"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dif", "[", "t", "]"}], "\[Rule]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "t"}], "/", "2"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6784628672645836`*^9, 3.6817159346536264`*^9, 
  3.681797987376001*^9}]
}, Open  ]],

Cell["Solution for sum[t] is a bit harder:", "Text",
 CellChangeTimes->{{3.6817980077303705`*^9, 3.6817980156653395`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"rInv", " ", "t"}]]}], " ", "kInv"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"rRes", " ", "t"}]], " ", "kRes"}]}], ")"}], " ", 
        RowBox[{"dif", "[", "t", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"rInv", " ", "t"}]], " ", "kInv"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"rRes", " ", "t"}]], " ", "kRes"}]}], ")"}]}]], "/.", 
      RowBox[{
       RowBox[{"dif", "[", "t", "]"}], "->", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], "/", "2"}]]}]}], "/.", 
     RowBox[{"kInv", "\[Rule]", 
      RowBox[{"kRat", "*", "kRes"}]}]}], "/.", 
    RowBox[{"rRes", "\[Rule]", 
     RowBox[{"rRat", "+", "rInv"}]}]}], "/.", 
   RowBox[{"rRat", "\[Rule]", 
    RowBox[{"Log", "[", "RRat", "]"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{
  3.678463204268586*^9, {3.681715779973572*^9, 3.681715794265595*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "t"}], "/", "2"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "kRat"}], "+", 
     SuperscriptBox["RRat", "t"]}], ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"kRat", "+", 
     SuperscriptBox["RRat", "t"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.681715794699723*^9, 3.6817159367438545`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], "-", 
         "kRat"}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], "+", 
         "kRat"}], ")"}]}]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kRat", ">", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678463309496461*^9, 3.6784633229691887`*^9}, 
   3.681716053226983*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "t"}], "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{"1", ",", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], 
         "kRat"]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.678462907371564*^9, 3.678463330602177*^9, 
  3.681716061163516*^9}]
}, Open  ]],

Cell["Find the constant of integration (coi)", "Text",
 CellChangeTimes->{{3.681798047174399*^9, 3.6817980603749385`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"1", "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{"1", ",", 
              RowBox[{"-", 
               FractionBox["1", 
                RowBox[{"2", " ", 
                 RowBox[{"Log", "[", 
                  SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
              
              RowBox[{"1", "-", 
               FractionBox["1", 
                RowBox[{"2", " ", 
                 RowBox[{"Log", "[", 
                  SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
              
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], 
                "kRat"]}]}], "]"}]}]}], ")"}]}], "/.", 
        RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "+", "coi"}]}], ",", "coi"}], 
   "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"coi", "\[Rule]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "kRat"]}]}], "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6784629193034625`*^9}]
}, Open  ]],

Cell["Adding the coi we get the full solution:", "Text",
 CellChangeTimes->{{3.681798134691156*^9, 3.6817981532069807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSolution", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], 
            "kRat"]}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{"1", ",", 
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
         RowBox[{"-", 
          FractionBox["1", "kRat"]}]}], "]"}]}], ")"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.681798161854685*^9, 3.6817981764549084`*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"2", " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "kRat"]}]}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "t"}], "/", "2"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["\[ExponentialE]", "rRat"], ")"}], "t"], 
          "kRat"]}]}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6817981768071165`*^9}]
}, Open  ]],

Cell["\<\
The third component of this formula goes to 0 in the limit of t->Infinity, so \
we are left with:\
\>", "Text",
 CellChangeTimes->{{3.6817981904499893`*^9, 3.681798253558611*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"2", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{"1", ",", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           SuperscriptBox["\[ExponentialE]", "rRat"], "]"}]}]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "kRat"]}]}], "]"}]}]}], ",", 
   RowBox[{"rRat", ">", "0"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"2", "-", 
  RowBox[{"2", " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", "rRat"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"2", " ", "rRat"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "kRat"]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.678462950525976*^9}]
}, Open  ]],

Cell[TextData[{
 "This is the sum[Inf] solution; as dif[Inf] goes to 0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      SubscriptBox["F", "I"], "[", "Inf", "]"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["F", "R"], "[", "Inf", "]"}]}], "=", 
     RowBox[{"Sum", "[", "Inf", "]"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6818063267125793`*^9, 3.6818063843185763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", "rRat"}]]}], ",", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          RowBox[{"2", " ", "rRat"}]]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "kRat"]}]}], "]"}]}]}], ")"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6818064008638983`*^9, 3.681806417224783*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"Hypergeometric2F1", "[", 
   RowBox[{"1", ",", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", "rRat"}]]}], ",", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "rRat"}]]}], ",", 
    RowBox[{"-", 
     FractionBox["1", "kRat"]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.681806414080933*^9, 3.6818064175420933`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Approximating hypergeometric ",
 Cell[BoxData[
  RowBox[{"1", "-", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", "rRat"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"2", " ", "rRat"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "kRat"]}]}], "]"}]}]],
  CellChangeTimes->{3.678462950525976*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.681798403423156*^9, 3.6817984420714445`*^9}, {
  3.681806395035084*^9, 3.6818064231794157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"1", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"2", " ", "rRat"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"2", " ", "rRat"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "kRat"]}]}], "]"}]}]}], "/.", 
      RowBox[{"rRat", "\[Rule]", 
       RowBox[{"Log", "[", "RRat", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"kRat", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "//", 
  "FullSimplify"}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"Floor", "[", 
        FractionBox[
         RowBox[{"\[Pi]", "+", 
          RowBox[{"Arg", "[", "kRat", "]"}]}], 
         RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], 
      RowBox[{"Log", "[", "RRat", "]"}]]], " ", 
    SuperscriptBox["kRat", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "RRat", "]"}]}]]}]], " ", "\[Pi]", " ", 
    RowBox[{"Csc", "[", 
     FractionBox["\[Pi]", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "RRat", "]"}]}]], "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "RRat", "]"}]}]], "-", 
  FractionBox["kRat", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", "RRat", "]"}]}]}]]}]], "Output",
 CellChangeTimes->{3.6784629638254056`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"Floor", "[", 
           FractionBox[
            RowBox[{"\[Pi]", "+", 
             RowBox[{"Arg", "[", "kRat", "]"}]}], 
            RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], 
         RowBox[{"Log", "[", "RRat", "]"}]]], " ", 
       SuperscriptBox["kRat", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "RRat", "]"}]}]]}]], " ", "\[Pi]", " ", 
       RowBox[{"Csc", "[", 
        FractionBox["\[Pi]", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "RRat", "]"}]}]], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "RRat", "]"}]}]], "-", 
     FractionBox["kRat", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "RRat", "]"}]}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"RRat", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowFunc", "[", "kRat_", "]"}], ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"RRat", ",", 
          RowBox[{"1", "-", " ", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "RRat", "]"}]}]]}], ",", 
             RowBox[{"1", "-", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "RRat", "]"}]}]]}], ",", 
             RowBox[{"-", 
              FractionBox["1", "kRat"]}]}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"RRat", ",", "0.01", ",", "0.99", ",", "0.001"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["kRat", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{" ", 
           RowBox[{"2", 
            RowBox[{"Log", "[", "RRat", "]"}]}]}]]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", "kRat", ")"}], "^", "RRat"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["kRat", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "RRat", "]"}]}]]}]]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "RRat"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", "kRat", ")"}], "^", 
           RowBox[{"(", "RRat", ")"}]}]}], ")"}], "*", "RRat"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["kRat", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "RRat", "]"}]}]]}]]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "RRat"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", "kRat", ")"}], "^", 
       RowBox[{"(", "RRat", ")"}]}]}], ")"}], "*", "RRat"}]}], "//", 
  "Simplify"}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   SuperscriptBox["kRat", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "RRat", "]"}]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "RRat"}], ")"}]}], "-", 
  RowBox[{
   SuperscriptBox["kRat", "RRat"], " ", "RRat"}]}]], "Output",
 CellChangeTimes->{3.678462987084388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["kRat", 
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "RRat", "]"}]}]]}]]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "RRat"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", "kRat", ")"}], "^", 
        RowBox[{"(", "RRat", ")"}]}]}], ")"}], "*", "RRat"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kRat", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RRat", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
cLmD8y2V7vahzsBv7u7bXCXfgzrjcV5xdYZKdaHOwL1Ufx5l2dCBOgM3/nr8
4BL5NtQZuLAaz4ua+mbUGfgfEmcIOgN/dvtwUWRgDeoM/HVT/EiXSCXqDFz/
+YKqmzGlqDPwVbrXt+S9yEedgX+ZU+lp3ZSBOgO/zPdpfp1OAuoMXPf011OL
9wahzvA8ZMT5Zf/CYqoz8JVjV+akX+pHnTF+T0xh39XDvagz8LAeEUfmaDfq
jPF7zuej5C92os7AX2i3uobfb0edgRusZvX89c99FnQGfpPEGYLOwEs+Vekp
9dehzsCHqwtNVWSqUWeMN1RZmPLoUTnqDHy622ThvMgi1Bl4m6Rx3syD2agz
8BNF35znFLxHnYHzpY1ef1obgjrD8yX1lASRExuGUGfgB3SvLV/ENoA6A/8i
17f6M2cf6gx81UnFAC/hHtQZeOtQ+MNdSl2oM3Bb3hkRnRYdqDPwM4bNK9O9
21Bn4AIkzhB0Bt6TeGpmb3UD6gxc7tY2VnauWtQZeEAC6/166UrUGfjajjLB
QJVS1Bm4xuv9BzliclFn5DW/rA28U1Fn4NtS/B7E5YehzpiPcmaZ6u8bVGfg
mS3tfMvOUp2Bj8o+fuBnRnUGnmPBoZDjRnUGznXfPrwqm+oMfCizvUNslOoM
POna6FZriXbUGfhTEmcIOmP8lM5unqvzmlBn4Ga7Ta+EqtWhzhhneNj8/IGr
Vagz8Op1CWYtNmWoM/DalcZNMwvzUWfgdRl9gj3b01Fn4Gf5Y9+b+UegzuBn
OlZWeepTGtUZuMwG1kWGkVRn4NPXuEsaJVCdgRuZCAmEF1GdgecFBHYG9lGd
gYdMKbQS5+xEnYGX9/UX3F9HdQauTeIMQWfgRz9Hrf0+h+qMeXgCxruOn6Y6
A+/zDt8dHFSFugF3UZyT5i6VgfqAv3OP7/76f3UEfYBnDck0//v3oA9wDwXl
jn/7CfQBHn5Puu/ffgV9gM+yS/rwr32gD3Av86T/Ox/QB/gzRYG//54/6IO/
S+IDQR/gIos/Lf3370Ef4OWvfMX+/T3QB3hcTOG2f+2DcYj5BPN0D/57PjAO
gQeyJKX/e/6gJ/APUy/2/KsX6Amf9Rxv9vQwtWi/NvELqUzwd7GQ9uuedMla
icbh3197YhzvJJjGqG2YeypcuZk+VyafG2ur5J631GC/bIvaf6Qx5j2jHZF+
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
H2ovkK0om4z6/TPbuOrny6ntzX3gV+AllKNSz61bkEtTz92Zuft4em6btDb8
amofogn8ZWo/oKn2oNTftDX8Q2r7RXGNy2UjUn809T+m9mmawV+n9icaw19I
t+f2369Hbs69169knGfk9ulPk32W26+frjXHb6cn9pvkC94D98zsI66Az8ps
090Nn5nZRq4h/cr/j2RMz0i819xXen9dCW+Jfpm+5wWp4w+KZbyUe031ky+b
Wzd0yK1PGlKuhodrfVK+4rcLU8dDNGfORf6TeB1+r/mMXEuf7y29l99f2A+T
7/NJaltF6/2r3DbVQfB30hmF9cPX8DaF+6n+nhzXqeJBlag/UDohty1XB/4W
Hlw49jJENlrhWMk5yKm5+3tc7phKw6j3ZuX+/r2RfQvHUPoh7y49F+Vff5r7
uXq+bNS9tWcVtsc0rz7L7YvIBpMtdntpXSab6s7S+k72mPxU9XlTah9UvuHH
qX1H2V2yv2Rvyo/bnNoX13u9ndpP1Xi+m9o20/z8nOcWlKvhppltY9l8H+b2
ZeVPvZfalpVN+1Fqn17j/E5qn0lzT/am4iSKz/TKPI56rnxAxQKHwjUzx1Cf
g0dnjms+C4/KHFN8Br4gc1zwaXhk5rjjU/AI+HvKSHhf3Z8yHN4nc8xyHTwk
c4zocXho5jioYkQKzisGuQYelDkGuRY+H57COMyGr0ZOoNyoPUq+pOY0vF/m
fV9+Si2Na7C9IXvqs8y+/B7ILyiD4T2Rn1POh2tk9mPkT+2MXMVz60p/544f
P6+5T337YHtgs+Ih9GEg3Lhw7G1aajvvS9oNoX6vzH5SP3iXzL6U4sa7ZvaT
+sJVkT9RRkufZ443b4Avgb+jjIBrZ45tb4InZvZNF8GdMs9FzUn53V/knpOr
g+eK5sxDwX7t7XC3zOtHc1K+v3zim+DOmf3OZXDXzHHr1XD/zLHqh6Qf4OXw
AdLvuePHD1LfN/Ma1hxbExxjXgWfk9m3vkP6Te8IX5naj/gy9/zXXqM43mLp
+8wx+DfhCfCS4DFXfF4x+zfgSzPH+9+GL8+cB3gLvgw+j3vvQqma2p++jfpT
M8fsZZOPkZ4Mnku1Cud52sA/pfbj50rvZY7TPyzdljkmqTjhuMwxSs1bxb0V
x9RcVezurNJ2sHI9O5feD15SHqb0vqs80XmF7aj2UUfJVjqmcBy4W2rf46zC
NsjDpf0s2U1tpNsK2z/tCvt/Z6b/p7u0P7dFLoy2iswbxTyH8Put3Kdz9JcU
W56c258ahrwx6nnpe+n1dlG3a18W36UYWup9VvaxvntP6ZXc++858IO5fdyu
qePhZxber1sh58V9TfvbgrjPar/tJjuA9vdx/4HwvZpDpe2yntE22y36aPLV
5LOepf7k9iXPTm3/653UB/mBssf6Uj5OvGbVZmVu+6qP9mHZHdEOkT2yLrfN
/TiysmyQ1PNjQeo5VD+1j6PYuPbRv1LnLtTX1oXtnLvp/8i4JxbxnfXuGjfl
Pv7XX+O6cnCOQr7nlGiPNef6/dT5Bb2XfF2NscZTfv/mxHtuj9I5SOUiq2XW
M3qvrYXf6Ul+/yb1/e/hekpum/kCZI3gPlenbdfSsQzFNIbR/nDNd35rUdjO
UpyhbxzHBql9BO2V3CZpWdhmWy5dkVofqh+6gfov31m+m+bKNdrPg/28GoV1
otoqvvRX4liHbJT5qe2G/VPHs6VPtL9+X5gbRR9Q31Z+/5rcdura3LkdrQv5
vsrt6P82Su/yjJWJc17KNQym7RzlgoJ1kfJWyklor9GaHhQc2/8TOTFYRyk3
NzBYF0knzQte+2o/PlifKF+mfMfy1LHQSdTflThf1ql0HkU5YuWKH6V+IH2c
EKxXle+7LFgPKyd4Dbw+cey3WbCeVwy/SfBeqZh/x2Cf9DNkw+A9RTH5w4L3
LMXzZwXvlcpLKh+j/Vf5zepxvxtEX5oH78WK1belXAh/gmwdbD8rj9AoxveU
mzki2AZQzL9l8N6qnEKb4H1KMeRjg/3fLcgOwX76p8gpwXaF9vbJwfaqcpRX
BduxynWOCc4VavHIxqqZ2ObqHuek5qbmYJc4DwcH503+Dm4ve1A+7xCub4H/
QZ4R56rmrHycDrS7J9hnaZ96zY6T35U4Ti77t320gccG5zEVb5dt2yHat1cE
58QVb78kvpfsJvnNXeJaHRWcO1N8fl5qX1p+kXJkF9J2PvNiMrwydfxqUbDt
pPz1lcE2vHKsc+P/6t0ezLx+/4prUmtT/ubU4FybcgoDYr303gXBubl/g2N1
LaTXuJ6TeZ1K35wfnMP6C3l1XAv6Rssy6xDpkhuC563y3RvjupTOV+5GvkmF
xOuRV0rWpx4r+QPbcD0itV+h8RwV6zWGkqNim8dy32N97vFXe93rYa6HpPY7
9E56t93injYw7mvyQYZGfbt/1CHyO26KvAO8OOrw1xLrcXHVeB/laLdQ3zH6
BVPj3jc83lMxrdtTx7U28dsK5Nu5v927sndLx5MVS1Z8Svl52aLtMsfo9L/j
C/dR99Qz5PuviPdTzPhu+M3c7z0ivnun3GOm3HKnwvuccrit4z6k/ii3qxjq
wcH+juIWn9B+HLwsdTxTen1I1O0Nox7XHq/Y0iWp40vKv42N31E+6Tj4qdzf
VvXKzSmfLB9ee/aT/LZt4jbNqLs8dXxH9xkX249HXpq6XZPIW+N9JlAqSvfl
Zvm5z+eODzwX5cT/10b3eia3P6fv9Uni9nqu/HSdKdD+qr1VcWlNDMV75Dvr
HTWvtL9rrj2ROtY1OOoQzTFdr9Z8LpznHVZ4r9Y9ZXMoPjApdY5BcYMrUse8
RhR+pr6v9nDt5bInpsZvJDtB30L9Gx7vrTba6xV3kt0rHaf8xYPw+7nvsyy2
UY5Ae+OYwrGKJfG5mrey7XaPfVG94hgan0VxPmuOL4hzXutA60E+ueIy0kPy
i9VGa0P28SzKnDi2sqUUU9XcOrxw3Ee+sM5EKY70Qu59eEbqeLv0nuJcWeL3
UP5FeRidYdDv7YL9Zuky6THFFqQTFR9rG+3Ve4PnSJM4Z46J9rByIkcXjsVJ
b3cpnXNVjrV9tJ8VG9Q76f5aA+2ibSx78iS4bWpbReMwP+oE6dR5sT967/7x
3QdFvSBW3HgAfexdej42jXNS+R297+a438hO1f6jOKPijYozKLYne0BnPnSG
TDHAF3PH42ZF1ljeF5+lfNH98Z7KqcoGGJ7ZfpIdpVhNo8zx8I+iz6Q5pLmu
eXtb6njapDhfFctYGlnztnlsr/mmfUDttRfovMrSOPdmxz6or+/k/p761pui
v/N67vjnzNhnxZEVF9ZZlEMKx+l0RkWxacWoexWO5yquq9yQYouKMfYsfI8b
4hzuF1n31PkWxS0Vv3w9Pve13GcyxOqLxrp5fBfpzntSx2E1tvrfNXFcZ8V7
jonrSHHpWtH3V+xf8026RXpJ5/6UH1GuXzEE6XOds/ond6xP5x8UZ1AOTTlu
7cXKJy3JfXZOa2Rh3DcVY10M/507ZqhzFIrJL8p9/kh2/OZoK5wdnOdSvlgx
+jzWXxjsy+u8h3JMGtvZue2ZU1Pn0IcG7zXKCw8LjnsoX7xzcO5D/uaxpc/B
6JzexdGOla1yUbCPr7MlOscne7VH5pyXfBn5NKNpszBxjlix9Pm0W1nafugk
nRJ9N733Wuq7BZ97+R7ZNTge9V3w+2rvkR/TJPpXssWV+1NOUH6pzrwoVyg/
VHlynU0anTu+rb1aNpPi8PrW2n8Vl1R8UmOq2KVyAIqN64yk+nxC5vMs29J+
YG6fV3pNsUfpBI3lo8q3547H6tyI8iPqo3Ktw4Pzxcr7y289LvX7K0/bUboG
3pLZ/5EtrXMTyncoj6MYtHxk2QeKh2seam7qfJxyf/LFRgTHFnTG4KbgGJrO
KCr/pzzgebnzLPKRlGNWvkNnN5WrnhbtJPk+yr9orSt+qU1eZ+CUz5U/KJ9L
vlel4Jyszq5sTzku8Rkbne9QPF9nPqfH/X5O7nyN9hOdU1N8XvlO5ZurBecd
dN5mYu5naZ4rl6r+riidPz1X3wmuHpy/0DkcxcTrxPWiHI1y2stL+3eaR3eV
ju0rb6p8s86MKOavvKri403imCsfofz2Mp3dCM7zbohxg976FvIVgvMsis0r
fnJa1EWPp7avHs1t78nvfSS3rTUy1v8cdax07brUdpvaLA6OeepMqXJwx6Y+
T6izEortKV+jPKxymtozlLeVjaa8s84IyiZWbCEPzhcoFqucu3Lsd5TOcyjf
obFbGBw71blTxT16pT4X8R+/HZX4bFIRHKfSWaYQnGvQWSbFhXqkPnvzb+68
g8416byJzv6NkL3Esz9IvL6ugT9MbH8eUjpG+bnGr/TZX5251dnbF6Sb+e3I
0vlXrfHjgvObal+3dPxUPunNwe11ZvXg0rFU+YMHlY63yh/srflHm1+RjUvn
WX+UDUC5NfF51DODz/j9hOwXfB7vd+Qxpc/8yWc5GvkO9ZP0rYPPB27V2JQ+
IyhfvlfwecVfNH+Dz+n9gGxX+iyj/MRGpXO3qj+sdGz6C7h+6Zj1V1pbwTlc
nWc7rfSZUZ0vWhocm9UZnjNKn1vVmZ/rgmOhOmfbvfS5Up1B6lb6nKvOIPUp
nVPXOfCepXPDOjdePzgWrTN11wfHXXVuuVXp84UaB+UNpdsGUte+9JlC+Xr1
SseIv4SPKJ2rlh6eERzD1Jnnw0vHl7+lrkHpWPnXcB3KeYnPB04PjvHq3HKd
0vpO8e2GpXNs38Cnlz6/qzM8fYPPNP6G7Bl8JvNn7UXBZwnU/vhoW2udHl36
fKTOtJ8UfPZAfegffG7zD2TL0rkN3bNT8NkAfZdmpc8x6P4nBOf0FePvHHy2
Qe/eovQ5Bs2x5nKqcs+BkylXJn73E4PPJOj7nhecx9d5sB7BuX7l/JuWPpeg
eVgnc5z/fK3F0mcaNN9alz4Dqj6fG3wuXefEBsT7KHbUtvQZVsUrpmQ+96L1
2D34jKjm//8AvDsZ2w==
          "]], Polygon3DBox[CompressedData["
1:eJwtmnf8V9Mfx++955wvZZcQoYXIyMoIDS1FFFHRNjJDWZWIyiYkhBQlSrLK
LLPsvcePyKyUmc3v9fQ6f5zHPa/7Pvd+7ufec97v9+v1Po0GDe1xSlUURYdQ
FFHH3jr+omPjsigWq9XTycOEn9CgvjVF8ZvsuwtPFe4h3FP2S4V/Fr5f+NRU
FBfruh117keNnS3cX/11ZT9F9g00/hDhR4WPFL5T9iOE1xA+Qfhy4cd0/SU6
11D9I3WPX9VvonPPqX0vvLnwDRpfafwfwnsI3yZ8mPBcXXO08IbCw4TvER4s
XFf4dOFOGv+18Ga610K1x/U82wq/r/4/GvuQ2vnCLTT+HI3fUXhz2W7nOdS/
QG228MUas6X6fXR+tfoX6NyL6h+g9q1wA+En1O7WmAHC6+l+Q3W/jfR7PYWf
FO4nfImOH2Mv/Q3+p/YQv6f2hvqPqw1XX7cpntLxLnX6qr+2rjtJ1x8h+0/C
jWRbpDZL9n7C68h+suyXCd8gXGncIuEzhSdo3Jpq3dT/Xedbyj5N4w+V/Rfh
JsK3CEfhszXmGo2trXaw+n/L3lz2O2SvLfsUnesovFr2/sK9ZP9Z+Dzh59X/
S2074RkaX0v2d4XvkW2Jzl2uc+N0/RzhN4W3VX+12uvqj5Ztpsb/Gfx9pguv
Kby23l8r4fnCdYRnavzhwjXCxwuv1vimwlOEU54fzYRvF15D+FaN7yT8q35z
gPBaut/ewvNk30C4lvCewg8Iryf8j67fXnim8FrCdWXfX3iB8IbCM5LXRxQ+
TvgDjb9X995I7T31j02eu/U15hjmts6dVnqtPcl7VWcv9R/U9evr+sein/c9
2f7W+O903E848O0rz4/p6q+jcx/zWxpzjPr1ZBuu68fzTtXaytZO7Y7k+ZZ0
bojs/XX/cQU3LIp9hYPwLoJ3y7628G3J6/Nf/cbRwuvLfrDwI7L3ER4p+/Wy
LdW57dVfqPucJbxS+Cr1n1IbwToVnoBP0fW7qj9H16+j6+/TNccKbyR8hvAc
4UHCdYRPE16laxoIXy9cCm+o6w8VXih8lPDPsjcWvlk4CO+WvP5u0fmFwp11
/Eb4ZD3Do+rPi/YXLwn/rrHTkv/PP8KDNX568v2D7nes8FEaf4Hw38J7C/cT
Hsv7EN5HeKrGd8Ou6wcJ95X9Qu4neyvhc4K//cZqI9RfO9l/TarsXz5Se074
TOFbmX/J/va6yt+7p675Ad+n659V21znaun4ruybafwL+r12sn9f+nu9ItxF
+PfS8/dl4QOEfys9n17M8/WH0u//VeGuwn+UXj9JeDfhe3T/dYW3Ee4l/JZw
feFmwr2F3xbeVPjZvD6+Lr2ens7f97PS/mKU8O3CW+h/dBV+Ks+vJaW/17nC
0/Gdsh8o/KuOWwnfqvvXCD+Tn+fz0uv3JeHOeb2yHo8VvoJ4oeva5nhzkWwF
/5dvK/twwVW6386yL9W4dYWP1vFu4e6yn8n7kH1X4SeFd2AtlY4nvZLvdYHG
z8Ff6HiQ8Bc6faz6h2j8Gbx/Xb9Ljn8jhX8R3l24h/BZxD7h3YT74B9Kz8kd
1K+Tv9/jstdlvXFP3p3aWPWnqR3Ms6hdqP4m+f8/o/H1mC+sA/4/8VD9Rdl/
fFPaP26a58Mi2TYWrp/nw7PCGwmPFZ4tvBX/S/h54X2El5f2b89l/7qstH9/
Rc98j3A/XX+F8ELWv3BH4dHCrwnfKzxA+CrhJ3K86SR8Ht9feLLwAcJjhF8X
nsf3EJ7AfBSeK9xf+Erh94QfFz5J+Hrh94UXsJ6Fb2B+Ey+E+wpfLrxE+GXh
UcIzhD8Wfl74LOGpwh8KLxY+Q3iK8P+EXxA+W3ia8Gl6D+vrv+5EzqH+G7LP
x1fLfjX+XHiR8HDhW4Q/EX5R+Bzh24S76X0NE14p3EL4LeZZ6Zj2NvFb46+S
vbXso2R/kxyDuSR8DetJ+Fbhg4XHMv+Fpwh3E75QeJHwVOFD8OvkR/q9B4R3
ZN4IL87x69vS8fU14R749zy/3tL1DwseJ3yt8Bm6ro7GtlC7VP23ZX9E9iGy
T2Q9CN8o3Fn4fPyH8Czh3sKXMj+EZwofLnwRvy98h3BP4fHMJ+E7hY8Qvlh4
AfmGcBvhc/FfwncJ9xK+RPgd4UeFjxe+Tvh+4eOENxY+U/hw/Z9RwquFWwrf
SI6V48vV6i9T21r9a2W/K6+nbWU/SOce0rnlwtuoP1H92bK30/2GCC8V3kb4
Zv1ee+GfS+e3NdF4ruyHC38q+0vCI4WnC98i3IH1Xjp/Y702yzH6To35Ufat
hMfo/NOy752cy/4k23PCw3X/m4jXsncS3kv2EcJfyH6f8L7J34YcaGv114zO
r+6TvVfOT8hf7hfuLbxG9PPcK3yE8DjyrdI+YrHOdZL9JPW/Un872bfQPdeS
/Uvhbbk+OV+9RvgP9Sfp+n2ILazp4PjeUlhDiwXqX6fWCl8hfBRcQNc0JTdR
/zf1N47Ox56qnA/iv8jvn66cb5Ef7EHs0LknyQ/zt0o6Pqwx+3MP4SvVX6Dx
la5vIzxLuKdwF+GhzHfhHYRnC9cpnMs/UOP8tp36J7Dm1e8s+8nEK41vLvsp
wtcJr6/f7ljj/HZ/jT8Hn6H+AbKfgj/V+O1l3yfZN7ymc03VP0P2m9XfSNd3
lv0nHVsIT9b4e4QnC3fR+B95p+ofo/GXq1+jfhvZJyaP/7T0/7kvOjeEa80T
viZ5Pr9bOh8/SfZrhdfV9e3JT8gRZOua+Ugpe+vCueFcnid5PhI7nhG+V/ZN
CnODB4W/JT8RPkzHWcQ72UeTL+j6PYWPED6XeCu8h/A3GldPuIeOdwo/msz3
9pJ9hPC1yeuLfBX+dZCuP134O9l3Eh4c7U+Crn+e+BCdT39UOr87SdcPZH6p
Haj+CfAl9edq/HzZR2r8bRq/Oe+VfAy+mPPNFuqfLPtE9deTvYPsg3Sud37/
u6g/RO0o1naen+TjR5bOGckdj4bDleYsu6p/ou53jfrraPz+ut8AneuV/c3O
jJf9Muar7K3xR8nvf2Xp/Hi96PyQuXyv8Mnkt5lvHcT6SubPX5Zerzck81fy
Kdbz5OT5vqo0Px6g+40nJdHv7Sd8fTJf+6q0P7hM9vvJLcgbWN/R/O/5yvnp
gmj+9YHG/6trLyYnJbdnvcE1g/usgWa6pi98Sv3pOv+krp+n4+DSa6o+Pj+Y
C3Juvvrjg/8b//HB4P/bltxBY5+tcT4+VHg3tct5xuD77652JT6S6/V8ewo/
k58Hf7hDfr4/dWxTOkfCny/SuVrMP+HF6p9Hnqf+hmqt4M/4YrVuajfK9qqO
+5bO4SYIt0v2P3dq7KP5/52o+22f/8/TOp5ZmtPg7/CnzE3m6P3BeSH5YT+1
u1lj+I7SnAd/NjvYxm/y2w2i/THXPkS+o+MGusU/aq+pP4E1LPtxwf5jYvav
B5bmNI8Ec0XeIXymrsb3V/+evL6PF+4rPCvHG9YN66e12oo875n/3BPfPSf4
et4R7wqOxtzuld8J62tL9UfD5XS/gcH3JyYQG+B4rD3W4B3gZP0BHYL4eq7e
8Y6yrau2V7D/3ED909V/WPYmyfnWqcKTha+Ljq8thSfx/6Pzq92C84FJ0fnd
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
jdanNwiuT1xMDim8bXD94qLoekKz4PoB75R3u2FwfQKfi+9tHlzPOD1az64T
XM8YFq1f1w3Wx/kGfIvNgvV5NJoOlTVGtJsVlfcSnF84n0UT21l4TGGtrEv2
z3ByuD2a4KfZn+K/0NTey/ESf4hmhHaEBoT2iwYOfyfGoZ9Q00FL55uNzf5w
Sfb3+Ec09L0ra1ho62hIX2V/i9aMpo223bHwXgU0qFXZv+L/uibzRTSGjZM1
q6+zP66V/eX32b/iH9GAV2f/izaMxo7W3qHw3pIB2T93zv4QzbFVZc0ULZKa
GlojmiN8iZpay8qaGLW2/aM1fXIm8h9qcrtVrtlSq/svn6pck2MsGnDzyjUF
tGFqNrtUrvlSy0Hz3b6yBooWjMa8Q2WNFO0ZDX27yvwNbR0NfdvKmhXaOjXH
XSvXhKlFoqnuU7lmidZKDXn/ypoutWVqxu0qa47Ukv+qXCuBY8O1qUG3Fb66
cG16utpH/JfgegQ1zN0r1/SpbVLTb19ZE6XWT/xAF2kZ7a/hR9Sl5uR8+EbZ
TgnWaxolc1i4LDVp8h1ySHLJ5uR00ZwX7ovmUzuZY6A5Uf+AezwYnevAYVqi
tSVzCzSuDTJfuy9Y80cbWxGsf1MjJx+EP8Mz4Bu1hB+Izq3Qnzol59zk3pup
rSQXjeYeaNrwbfg6PIRzaybnyOTK8G/4O5wf7k/NY418f+4FJyJ/4/nJhdlj
MSo5pye331Dt62DODfemhsL3RrOhjkbNBi1nz+R3xTsjHm6TrE3WYw0nc2i4
H3soRqg/N/rZ4VCHoT1FPysc6lDhOdG/DWfqgR4h/GlhzWjrzM8X5Pz4nOQa
CLUQ9jcdksxZ4C58E/LVxsl7jdC00LZujK5toMmhzaHRUQel5oF2R/0KLRaO
yn4srkdfQ/NqlfkxtQv2i61M5njUGtiPBPdjTjG3uAZtjhyWXBYNDC1spvAn
hTVC6iubZb3qKrXhyfoFWjr1ofrJcxmtb1DhOY1Gg1aDDyXXhWPANSbl93GY
xlxbWvNmv1ZHfGbpPU3Uez4nrpTmKKcka2To3OjdaGdwTLgmewjQh07XuX3V
v1PnRsMtk/v4xK75+Y8srLGh91Ofak9+xjMKt0/Wrqk5DFa/QzKXoSbB/iA0
B7QHahgDs94xM3iOoF3fHa39oXG1Tl4TrA00WrTg89QOLKyZn8//TeZSaMDH
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
HVVZA0Sbo17LvhXm+BGy/x9xBB3Y
          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[{{1238, 726, 875, 1510, 1068, 1069}, {1422, 659, 469, 
          468, 854, 1289}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssXmEcwOGXti5tXRYhaUIsTUVImNsNC1NrqonEQNMqbQSRUupOpGlS
g/vAYJMgMdGStBqTS9WllNC99obnxPA/z+89+b7znnO+L7uq7umrmBDCqJkQ
Ub9wuOAkz26FkKqvzLnOYo/zlzpf198Joc/6iW7QA7pMv9FDukK/1cM693YI
tdYfdYlu1p90ue7VVRyJrslZtnORw1znI9dJ8/lps209zgLTFhvCTvR57vI9
f7KDe+zkL37gPrvYbQ6iZ+Ehe3nEPv5mP485wBMO8g9bPHe6PWvNqXU1C82c
e9yyHuMah7jAd5xhHT+zkj18xiYWs8jU6Bw+5wOWMomPo3dvzzz+YyaTvYf/
nLJvSrQnH5pNk2y9xB8mSXdzw9yPnpvfzT294Vod+q7+ptt0ol7XrTpBr+hm
vWbirRv51cRFvy+/GLcSXnPVuN2w7DsvNUKJw196deFAzzufEXPzP7sG/7lQ
iA==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0Lkyg1EYBuAPoZN70NrFUtqXltiGSBB7k9SWW3AlkhBbYTC4FHqDGYPO
8xfPvOd87/nXtmI5W2qIiByvTRGl5ogyHRxy2hjRLo84ppNZrloizlIRw9Yr
rNLFvfmcrOhGZI41fugmS1U3KvM8Of8he5inphuTnzzrCrKXBc514/LOfF1u
0Mdi8p48mE/ITYpkWOLa/MK1k9ZbbNPPOze6um7KeoddBng0X5aXumm5xz6/
DCbfbz4jD3hx9ksOJc8yP5Hf/CX3t3/zXyvOtNrf2qflPy+IL4U=
       "]], 
      Line3DBox[{996, 339, 1352, 333, 1727, 1295, 1286, 657, 997, 1287, 1530, 
       1207, 998, 1505, 1531, 1208, 999, 1506, 1532, 1209, 1000, 1704, 1288, 
       1210, 1001, 1706, 1289, 1422, 1705, 1002, 1290, 1423, 1707, 1003, 1291,
        1533, 1211, 1004, 1292, 1534, 1212, 1005, 1507, 1535, 1213, 1006, 
       1508, 1536, 1214, 1007, 1537, 1215, 1008, 1538, 1216, 1009}], 
      Line3DBox[{1010, 1392, 1296, 1353, 1368, 1709, 1519, 1335, 1297, 1424, 
       1710, 1011, 667, 1012, 1539, 1217, 1013, 1540, 1218, 1014, 1541, 1219, 
       1015, 1542, 1425, 1618, 1016, 1426, 1619, 1017, 1427, 1620, 1018, 1543,
        1220, 1019, 1544, 1221, 1020, 1545, 1222, 1021, 1546, 1223, 1022, 
       1547, 1224, 1023}], 
      Line3DBox[{1037, 1230, 1554, 1036, 1229, 1553, 1035, 1228, 1552, 1034, 
       1227, 1551, 1033, 1625, 1432, 1032, 1624, 1431, 1031, 1623, 1430, 1030,
        1622, 1429, 1550, 1029, 1226, 1549, 1028, 1225, 1548, 1027, 683, 1026,
        1621, 1428, 1025, 1711, 1301, 1300, 1024, 1523, 1731, 1299, 1354, 
       1298, 1405, 1393}], 
      Line3DBox[{1051, 1234, 1559, 1050, 1233, 1558, 1049, 1232, 1557, 1048, 
       1632, 1439, 1047, 1631, 1438, 1046, 1630, 1437, 1045, 1629, 1436, 1044,
        1628, 1435, 1556, 1043, 1231, 1555, 1042, 699, 1041, 1627, 1434, 1040,
        1626, 1433, 1039, 1712, 1305, 1304, 1038, 1718, 1386, 1303, 1355, 
       1302, 1406, 1394}], 
      Line3DBox[{1065, 1236, 1562, 1064, 1235, 1561, 1063, 1642, 1448, 1062, 
       1641, 1447, 1061, 1640, 1446, 1060, 1639, 1445, 1059, 1638, 1444, 1058,
        1637, 1443, 1560, 1057, 715, 1056, 1636, 1442, 1055, 1635, 1441, 1054,
        1634, 1440, 1053, 1509, 1633, 1306, 1052, 1719, 1387, 1388, 1356, 
       1408, 1407, 1395}], 
      Line3DBox[{1067, 1397, 1398, 1358, 1723, 1237, 1336, 1309, 1563, 1238, 
       1069, 1564, 1239, 1071, 1565, 1240, 1073, 1566, 1241, 1075, 1567, 1242,
        1077, 1568, 732, 1079, 1569, 1243, 1081, 1570, 1244, 1083, 1571, 1245,
        1085, 1572, 1246, 1087, 1573, 1247, 1089, 1574, 1248, 1091, 1576, 
       1250, 1093}], 
      Line3DBox[{1092, 1249, 1575, 1090, 1654, 1458, 1088, 1653, 1457, 1086, 
       1652, 1456, 1084, 1651, 1455, 1082, 1650, 1454, 1080, 1649, 1453, 1078,
        1648, 731, 1076, 1647, 1452, 1074, 1646, 1451, 1072, 1645, 1450, 1070,
        1644, 1449, 1068, 1510, 1643, 1308, 1066, 1524, 1732, 1389, 1357, 
       1307, 1396}], 
      Line3DBox[{1094, 1399, 1400, 1359, 1459, 1713, 1337, 1310, 1577, 1251, 
       1095, 1578, 1252, 1096, 1579, 1253, 1097, 1580, 1254, 1098, 1581, 1255,
        1099, 1582, 1460, 1655, 1100, 748, 1101, 1583, 1256, 1102, 1584, 1257,
        1103, 1585, 1258, 1104, 1586, 1259, 1105, 1587, 1260, 1106, 1588, 
       1261, 1107}], 
      Line3DBox[{1108, 1311, 1410, 1416, 1417, 1735, 1338, 1312, 1420, 1461, 
       1714, 1109, 1589, 1262, 1110, 1590, 1263, 1111, 1591, 1264, 1112, 1592,
        1265, 1113, 1593, 1462, 1656, 1114, 1463, 1657, 1115, 764, 1116, 1594,
        1266, 1117, 1595, 1267, 1118, 1596, 1268, 1119, 1597, 1269, 1120, 
       1598, 1270, 1121}], 
      Line3DBox[{1122, 1409, 1464, 1733, 1419, 1418, 1465, 1736, 1123, 1466, 
       1658, 1124, 1599, 1271, 1125, 1600, 1272, 1126, 1601, 1273, 1127, 1602,
        1467, 1659, 1128, 1468, 1660, 1129, 1469, 1661, 1130, 780, 1131, 1603,
        1274, 1132, 1604, 1275, 1133, 1605, 1276, 1134, 1606, 1277, 1135}], 
      Line3DBox[{1137, 1470, 1662, 1136, 1471, 1663, 1138, 1472, 1664, 1139, 
       1473, 1665, 1140, 1607, 1278, 1141, 1608, 1279, 1142, 1609, 1474, 1666,
        1143, 1475, 1667, 1144, 1476, 1668, 1145, 1477, 1669, 1146, 796, 1147,
        1610, 1280, 1148, 1611, 1281, 1149, 1612, 1282, 1150}], 
      Line3DBox[{1152, 1478, 1670, 1151, 1479, 1671, 1153, 1480, 1672, 1154, 
       1481, 1673, 1155, 1482, 1674, 1156, 1613, 1283, 1157, 1614, 1483, 1675,
        1158, 1484, 1676, 1159, 1485, 1677, 1160, 1486, 1678, 1161, 1487, 
       1679, 1162, 812, 1163, 1615, 1284, 1164, 1616, 1285, 1165}], 
      Line3DBox[{1167, 1488, 1680, 1166, 1489, 1681, 1168, 1490, 1682, 1169, 
       1491, 1683, 1170, 1492, 1684, 1171, 1493, 1685, 1172, 1617, 1494, 1686,
        1173, 1495, 1687, 1174, 1496, 1688, 1175, 1313, 1689, 1511, 1176, 
       1513, 1690, 1315, 1177, 1515, 1691, 1317, 1178, 826, 1179, 1734, 1411, 
       1412, 1180}], 
      Line3DBox[{1194, 1321, 1413, 1415, 984, 1193, 1414, 1703, 1526, 1192, 
       1318, 1341, 1721, 1516, 1191, 1316, 1340, 1720, 1514, 1190, 1512, 1702,
        1339, 1314, 1189, 1701, 1504, 1188, 1700, 1503, 1187, 1699, 1698, 
       1502, 1186, 1697, 1501, 1185, 1696, 1500, 1184, 1695, 1499, 1183, 1694,
        1498, 1182, 1693, 1497, 1181, 1517, 1692, 1319, 1320}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{448, 955, 842, 909, 843, 1527, 931, 892, 844, 845, 1531, 465,
        668, 1539, 480, 683, 495, 1627, 698, 510, 1635, 713, 525, 1645, 728, 
       1565, 540, 743, 1579, 555, 758, 1590, 570, 773, 1599, 585, 1665, 788, 
       600, 1673, 803, 615, 1683, 818, 630, 1695, 830, 642}], 
      Line3DBox[{449, 956, 846, 910, 847, 932, 1728, 893, 848, 849, 1532, 466,
        669, 1540, 481, 684, 1548, 496, 699, 511, 1636, 714, 526, 1646, 729, 
       1566, 541, 744, 1580, 556, 759, 1591, 571, 774, 1600, 586, 789, 1607, 
       601, 1674, 804, 616, 1684, 819, 631, 1696, 831, 643}], 
      Line3DBox[{450, 957, 958, 911, 934, 933, 1729, 894, 850, 1704, 851, 467,
        670, 1541, 482, 685, 1549, 497, 700, 1555, 512, 715, 527, 1647, 730, 
       1567, 542, 745, 1581, 557, 760, 1592, 572, 775, 1601, 587, 790, 1608, 
       602, 805, 1613, 617, 1685, 820, 632, 1697, 832, 644}], 
      Line3DBox[{451, 960, 961, 912, 936, 1722, 935, 895, 852, 1706, 854, 468,
        671, 1542, 483, 686, 1550, 498, 701, 1556, 513, 716, 1560, 528, 731, 
       1568, 543, 746, 1582, 558, 761, 1593, 573, 776, 1602, 588, 791, 1609, 
       603, 806, 1614, 618, 821, 1617, 633, 1698, 833, 645}], 
      Line3DBox[{456, 860, 917, 861, 1528, 937, 896, 862, 863, 1535, 473, 676,
        1544, 488, 691, 1551, 503, 1632, 706, 518, 1641, 721, 533, 1652, 736, 
       1572, 548, 751, 1585, 563, 766, 1595, 578, 781, 1603, 593, 796, 608, 
       1679, 811, 623, 1690, 880, 881, 905, 1720, 882, 883, 650}], 
      Line3DBox[{457, 864, 918, 865, 938, 1730, 897, 866, 867, 1536, 474, 677,
        1545, 489, 692, 1552, 504, 707, 1557, 519, 1642, 722, 534, 1653, 737, 
       1573, 549, 752, 1586, 564, 767, 1596, 579, 782, 1604, 594, 797, 1610, 
       609, 812, 624, 1691, 884, 885, 906, 1721, 886, 887, 651}], 
      Line3DBox[{458, 988, 989, 977, 976, 1529, 459, 663, 1537, 475, 678, 
       1546, 490, 693, 1553, 505, 708, 1558, 520, 723, 1561, 535, 1654, 738, 
       1574, 550, 753, 1587, 565, 768, 1597, 580, 783, 1605, 595, 798, 1611, 
       610, 813, 1615, 625, 826, 638, 1703, 981, 982, 652}], 
      Line3DBox[{460, 868, 1708, 869, 461, 664, 1538, 476, 679, 1547, 491, 
       694, 1554, 506, 709, 1559, 521, 724, 1562, 536, 739, 1575, 1576, 551, 
       754, 1588, 566, 769, 1598, 581, 784, 1606, 596, 799, 1612, 611, 814, 
       1616, 626, 978, 1734, 979, 980, 984, 985, 983, 889, 890}], 
      Line3DBox[CompressedData["
1:eJwVzr1LwmEYheEnhQa3xjbb2hod3Jsj6B+IaKyhJQgKNK0lcA2CPqagT0sz
kHDoa6h0alEiBcc2R5eu33Dz3OcceHlnltcX1yYiYgE7qYh8OmITR5MRG/Ic
r/AVnuVlvsSn+Daf5yn+yn/dAfrI6Ud41/fkfTyigVn9EFXbnvyAOqZ1Td23
W5ZruMeLLqN7Q0m+S97RVd2xzzf0Z3wXt8l7thv3z3ZuO+VFPOuv3Sv82A5t
J0nWF9xLXKBtq9ha+mN5FZ2kx5PtwPbFt/CJD3TxD8HsM/k=
       "]], 
      Line3DBox[{640, 828, 1693, 628, 816, 1681, 613, 801, 1671, 598, 786, 
       1663, 583, 771, 1736, 990, 568, 756, 1714, 877, 553, 1577, 741, 876, 
       538, 1563, 726, 875, 1643, 523, 711, 874, 1633, 508, 696, 1712, 873, 
       493, 681, 1711, 872, 478, 666, 1710, 871, 463, 657, 839, 446, 1715, 
       324, 907, 338, 838}], 
      Line3DBox[{641, 829, 1694, 629, 817, 1682, 614, 802, 1672, 599, 787, 
       1664, 584, 772, 1658, 569, 1589, 757, 554, 1578, 742, 539, 1564, 727, 
       1644, 524, 712, 1634, 509, 697, 1626, 494, 682, 1621, 479, 667, 464, 
       1530, 658, 841, 447, 920, 1724, 919, 908, 840, 954, 953}], 
      Line3DBox[{646, 834, 1699, 634, 822, 1686, 619, 807, 1675, 604, 792, 
       1666, 589, 777, 1659, 574, 762, 1656, 559, 747, 1655, 544, 732, 1648, 
       529, 717, 1637, 514, 702, 1628, 499, 687, 1622, 484, 672, 1618, 469, 
       659, 1705, 853, 452, 654, 1725, 921, 913, 963, 962, 959}], 
      Line3DBox[{647, 835, 1700, 635, 823, 1687, 620, 808, 1676, 605, 793, 
       1667, 590, 778, 1660, 575, 763, 1657, 560, 748, 545, 1569, 733, 1649, 
       530, 718, 1638, 515, 703, 1629, 500, 688, 1623, 485, 673, 1619, 470, 
       660, 1707, 855, 453, 1716, 655, 922, 914, 966, 965, 964}], 
      Line3DBox[{648, 836, 1701, 636, 824, 1688, 621, 809, 1677, 606, 794, 
       1668, 591, 779, 1661, 576, 764, 561, 1583, 749, 546, 1570, 734, 1650, 
       531, 719, 1639, 516, 704, 1630, 501, 689, 1624, 486, 674, 1620, 471, 
       1533, 661, 857, 454, 1717, 924, 923, 915, 856, 968, 967}], 
      Line3DBox[{649, 837, 879, 1702, 637, 825, 878, 1689, 622, 810, 1678, 
       607, 795, 1669, 592, 780, 577, 1594, 765, 562, 1584, 750, 547, 1571, 
       735, 1651, 532, 720, 1640, 517, 705, 1631, 502, 690, 1625, 487, 1543, 
       675, 472, 1534, 662, 859, 455, 926, 1726, 925, 916, 858, 970, 
       969}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
PTUMPKoWRexvVKB20jUu548Y3E+/a23zAgPNOo39P9xS0BENR/Z32RhUdme+
L6PX+eQDMdcNcupQZcLIlaunyDD9IFqjazsZ1u55gsSjCjT4zuygJb0eLjjw
MLf/LRl2M/8cWC+diQKd/wzYBJGAcOEX11MlDLZVvFRXM8IhdhFOyQvmYyAg
OsGGi8DBgUdXz8U14BH1q2L3cXYCCP7V94gYfY9fFFva323vg8T8ys6qlRE0
v/VLmashDRZPP+xOi+gBgQHhI31Bg4hoINN17sEk7OMvOdRyphtW8td/iZzq
RVakAqab96cAgmNYQ+W7QHGzEp5TvAvdfnGf6dPpacAY/XsjjP69dEb/3nU2
M6mcklowJYrhr887VWwdthsWfT4LadaKL/ElZNhU9Hadt/0ESo3gccpPG4bt
B6T13lVPA9/5TtyTEDruFkxP3nCqHZoac9k5FzCo8Gzl3rk6jh57xjsUbB+H
rYz5C0cZ8xd4GPMXeBl2VYZdiGGfYcxliGDMZTjFmMswxbBHMuxGDLvyJY1r
cswzwPywX1hEoRVpd/IIPq3vgLXarO6mi1Owe90WS/8NPUhza+S639O9sCHG
1SzUggIBVa9rT6qNINLvsJDWy2PAJOrJ0aNLhnN187sdikfRzvenC4cPTICo
Wxz7nAYVrEdFP66mDyIbeULvJzQK2ofOhKS1zEIt2Q1/3+MD6tcPio99Vgxj
fnkOW4apcIK/satxug/92PHZJ392FOYY+esBI38ZMPLXxmPB4YdsqZCpYGYR
9bgLiW0yyngthAOZQaSb1zEDm6S/L8RwFKCGfIuJobsd8Lj71519URS4wibj
9NK+A7FcebCkj/CQFve+Cc+JwXSyeCONrQDl9Xxb0thEhnS7Y1cln5Dg9cMp
bKSmFp6ZmNta8tDjTKvoORa6fwhfUnPgP1yCjBo4thfS8Tm/jZGOjz4GAbN3
OyO0K8E6TkPd/i0Gvj/OsWqpkKHi+QD5MncJKly2Oa1TR4JdzwyKg/jodcG6
mNPrA/IgNV/4Mp6LjpuSp/nrBqfgElkjdXXxFRKJyxI4lDUM1DPRqWah0zBW
sI8v+HBuBVFnZNbywQDsuOVg5feICjiu85eDlq7DQEtNQ84lAti/T7wIKkRg
XksZSRgjIr/ZOJ3hiiE4+i3ETa6GCruH5AcKr06g3unRTdcVu4E4fT1pz/IE
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
DajfxSZVMZ8J/wM0i978
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{329.94389087798066`, 201.34913437705256`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 0.9999999285713497}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.9597591904201209, -3.0531913972359908`, 1.0985829910608838`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.68180683915888*^9, 3.681806848799591*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["kRat", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "RRat", "]"}]}]]}]]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"kRat", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RRat", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817969883720875`*^9, 3.6817969899493656`*^9}, {
  3.68179706580984*^9, 3.6817971156116962`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
wn8P9W47Qlq1dSh/36Peu/uIL8y5wN/rqLeG7d127z35vgjGg0rVuR8THvL1
Jng36dHYzlP4ehNcS3lp3ajjdaQDnucoZd/js35LBH319ntFonDB0Ga6NNDs
iRA0fsraTOV04XWbOR6OKvHEw1fqRvh2fSu47Qjf6aiSStxnwtZDOxPjhbUZ
687miDOJF6wZ4qV6LUboPeWXm4ruB+KtpSfz9DpGCukPbrw0y8nj+XT54TVF
GirMa3vLNEdcSDylZKPtcedAwSPY9O86vpi4pkKLY4fCfYXW5pqnVHTLiE9r
Y73ol7cXfUf9SlLWbBw4soA46jfU5+3Zu41FxFG/I9FrT947UErlV7p0f7ij
Sq0wU2Sz995LCZUf/IfcyiFj10iEQ9P3isVmEuLmR1K0jp0MoO/4++TC/RaP
Xfj3uvFTiqXSaqEibJrBW18fYUF5e3MV3Tr6f3qeXXyClqQIBza29DHLKaK/
d/ZJUgsLkZA+4C2eGyVOvSQRMnqm6jiqlBIvn/XIoGa6hHQDV++mkr39TR2V
A+XSPnZ8/SUN3k4+pFwfN1zXUegXM2mV3OA39B1/3zD3nrk0u1hQuP3QVtcx
mnSV2xLRqmlEqnByV3FYjvgN8Xe2/rpLZiYJTQPsf4rN0ok3nL8wqO5arPDy
/KjuItE74hV1A2etCYsS9n+OH6Xr+JF4hxp510NW4YLiswmDdR35cw6Uszri
rBlMutHvTvzad3N/MekDvnjy5Q3Xjj8Xxie4xYvNyom7xwwqD7N7LDgc22WQ
I64kbv0suuXV13fpO+odc137T7Y7b8eot3GiylOLaSXEUe+QRzmPrrnxdox6
L3i5ecCmNxX0PPC8fIbH9+64NIq+4+8j/0w5uapTJXHZ8RnPC5+YF+E7fj8k
YrPzoPR8yhd/FxVIFSwXb6J+it8ZPHbsycL3vN3jE/njO5W/QUFbY3ER5Y/3
y7TVesu/LAyl38PfZec/yOfv/Cc0JerBVKTDp+y5Mrz/EwTXP1skfF6N8X6u
S3B+19fcToh5wSqDYbs9K/n+AuYFaxVCxwYbcjsextsP89aKNv1dX0Mf1Pvd
Eb0rP+5z+4Psc8HvyXL8nizH/AP5HbAvb/9byp8Tfl+nd62DjYTPVzA/eqlc
8UHaLD3Gjyr97AE5dvw8GXQrGfj0//YLMA+Ebl/CFEZczebnylCPmvzWMXZP
ub0I78/2gvXIqD58fSFbL/Q7PEfVp8eXXf67HkG/A9+QUW8jX8vLiXp4ZUzp
UP2hmuqF53zEwPPQ5Na5VB46T/hQrkvL/o+p3+L/nb4ZlH1ClEDvCXAfy0tF
VmaxNJ+jc4MOZ+4GKD2gfk79pWGZiZpODL1XwKN/dJNv9bf/Yv6HfAaO05Vs
WnuHxgWkb3fx3tJerhH0ngWf9evy9589uN2DytPf/3jUIxcaR5BecePWiCHr
Qum9Bq56bl/L9Pggmh/S+UOj9QFtnK/TeIv0096Oel63NZDeg5TP+Km9zdW4
nYTOT7adNKBB5wqNz0hvNGhZSmRvP2qvlM/571+3DOL2E5pvF3de45lqR+M5
pc+Mb3g4x4faMem/ZHryj3bPqP/TOczeDXs2N52j8R/pHbJeznT2eUTvRypn
tOLoD8c9qH1TvQand52QfoL6Kelmv1tfwdSS/v/Q6zkvduWIhV4Kya0qevHz
o2iPEdOG9q4O4v0R7U5OTf/DWX9+fhTtLn/0we7Lqnh6tK8Xkw1Oru/Ez5WS
3eP1qppRjTw92pGN28uT89vycwmYH5rsM3Hd9rdfQmeMY0Ne+wbp/FNHHOO2
/4YWa8oU+TwG43MXJ02304fL6Lmg/zq3u7fv3/2XTSptu+g68vfbFoNM5TuN
PB+UZ+Ua37H2pXwc5O8Fv8TD7uE0/iP94rvPJk7olUTf8XfDmWar3q/g71/o
sUnXIePBiXQaL8Bfxeg5933O57X4xPsFz5XmycMczpnezySOfHQu3JY/fp3b
Q5G+20VpumdsDn3H/5v3p5u5Q/dcKje1/8BvmgGS6dSv8Vx86ppcQzIk1E/B
K+8+aK/kKKF+R+/la9mT23fkHM8r6lB/q/HV/P2KT9l5wv+aV6CcqxxfVC+0
CqXvNB/vujx2eXc+L6F+KhI1uHWcSee08NyCk469qP2bDuMVynMm+Hffg02c
ox3qSbcuianm83OkX7t2esbAb5wj/bOyBeKl0RIaf+icSB+tJ7tM+H4c3u8H
1D9KA/dUU3uGnoeLh5vIm9QSp/21r+oGcx7yeTy4a5Lc9ewvfJyVnefgu6zO
tI5i45OKivmE8+b8vYxx6LStv8H3Ys7x/nWeckthuA9/L6Ner5UKZpT/4hz2
qgnrtDMMCiX0nkL+51Rv7DHWqKP3IPJRXaM6tqaW758i/cdPx/Xin/L0yD/H
7OZSr/s8f7KvuAoe/9YbHLqdX3lUa9Bv/rygU6RCWXbz/XhwzYKP3zO/8XFG
Vs/wd5kuZjlVlF6vOFTsGs7bJcY5HeVq/SRdzvHeiHPKHDjvb3r0W8xfzta6
nSpYweeT0OGlZ6pJWIyE5huY1yw6/XLK/ZN8XwzvmedN1buSB9QSR/3UXyY6
HRxXR/MN5PNkrGiESW4d6Ub77fu0Nj0ax58Lntf6xDcB2/MlNN/AuLt7yUSR
xx2+v4byH/juN7OsTS1x5C9fb1W7ZV8djUvIR/zG6uj7MdzuhHzazGqqC7Wo
Jo58Vhks9i5aWUvjGPLZc1Pba7A5nz8jn3c93uhc2ltJHPmYbPVwUn1dTeMb
8um/7XHU5zm19Fzx3N8/fN5P2ux9ROPS1OUvUs+6k14YvweWrV7fe9Zl+j3i
Nm2715hep3ZF+bgIlfrtnai/o72Mcyj+3PtTHaVDu7BoPyLIby2fl+A5V6yu
7DhPUk4cz+1ucKsP6T2rSAeMexOHlti9KOb2AfQvZ2eNDer1fB9Ttl+gfUOf
2oPmkVVSbk9APu0qpgWfK+H2BKQf/bnqwH0p50g/98L6vmtiJTSOQQ/VZQMz
AuL8iUNPB80xLjphWdS/wKvC+lTX7Ofva/zdx2Gr6tjifLKb4XfdzktO/Plb
HlpXM30CPzd9Kf7D35vgaqstjG40co7xJ+WN5aljH/l7E9z2dusJa9z4exN8
ldrMJfE56WQfQfsyudchuKMRt6ug/w7aOtVi10sJzf/QjkbM6Wui81xC8zyk
b1V+tahuZx1xpF+wWjl30HSeHu1/f9n28/V/33eY/+G9FPxY/OFRGeeoh+Ha
2ecvSXl98XyT0178lDbjtA/yO0dZvtl+DPqpkerlw/db8/cEnTsOO3DP3zud
yoFyppUaPAqq4O8P/L/bbg1vHjjw80ngHxuT6vdezaf/j/yeNS7a0Xp5AbVz
lD9k4e9D6VK+X4986pY/+fGkRTlxPEeHVl77K7dV0/gOfRJy3TaO6V9HzxU8
Ovb6+JretVR+5JNz9siYBafK6fkhvcFRhw+3b1XTuApunNfTXf8PP6eEchbN
7R+Q/Z23E9Rb7ku1y6larj/NG5uG7zg1fCelo3WNer3GkHcO9L5AvVsUFB+6
bFtNHO+d23OHpo39VkPjDurhYZU91ricvxdkxxP0O+gfm/Cf84fgaD91vaN7
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
AK6lYlcyf1Ex6QBuF7bn5Lsh+VQv2G3aD1n04187A+oFPm/i7tx/z12gXuDD
bDXnZv3l6HfgA+3X9RZJeX1l/cJQX/BRMcV6yw0kVC9w1a/6wXt31FI5Ze0t
KKcsRzllOcopyzE+yHK0Z1mOesly1EuW4znKctRXlqO++MS+JH53Pc77yNhV
RCz9uLIPKsPVXtL/P2pn8dJRJUI40/OQt0JtPumGT+QP3ab4zV39URwqhA4J
2VLhlEG/68HW48tk7AaWLP+ycTk2EW253WAey7/3P3tyq2YGU33Hsfw7HVQ5
4jLTn/pjN2bfbnXvUcQwyU3qj35FHYbqOfoJ5xZlqTa3t3zb8KxG5e+6brO7
wvUBL4qoPrAX3l78z+d6IY/qhU/UF+1hK9sPzNq5zctvaCa1B40fndNzxDHC
sPzQZWHpqTTuybH9C1eTxS0utkymdpI1Y/qcALMooW3X30r+yvGkm5JMnBzo
9omVf93HgefvaXA7QDgrv/fnKQpX+0WQbg6s/D8axJozc4Kovxux8t+dt2Kt
yhQ/6u9jWflnmb4oa7rxlHQWsfKvOv9NwfQrt7eksvJ3tbSIb25vESt+tc8R
pwrOtRMX+wzldgDY3fU+5iQUHS0kfc+9stXVdUwRgq2Hf8++lUs64xP6Q2ev
OD25XTnJwjOLxivOezNJ52NsP8jqwM3AvpPTSGf9HkesdB2TBPEp9b1Zidze
kigTJwc6+7HyB4/dGbb9fjzp7MLKP7HJ5kZRZjTpfJqVf22c8u1lB8NJ552s
/GGvpuupNAWSzg9Z+UP0b/pufv2cdLZk5f/V+lLwVUsP0lmXlf9X/yn1ze0t
FicuP1LRzRJWTC9pcfkYtwNgv2LPohPLXyUVk84zh43Y7KiSKaxYMCnpXStu
BxjJ7Nlhm9btyJ6bSzrjE/pD51/Mzj3u6OiPGx0zSedii7VZZjlpwtcRyd8D
13B7yzmZODnQ2ZyV/53bNaWI08mk8ypW/v7lkZNOfo4jnaex8veecM4kLzWK
dFZl5W+lFHJ/iPYr0rkLK/9Ih++tdG7xcaOBlf9F8P2IHuZPSOcCVv6OR/WW
Nre3jK4aHWWW80HwsptxfbIztwPAHj/mUGTbDT25HUBqH3skR/xe0FPrUNl6
bjHpXM7s9Ffq24vD4wtI37cTjTR0Hd8Jm05HL3NQzSWd8Qn9obNbToNEbJYt
VFW11De4wu0tM2Xi5EDnUaz8i4Yu8pktz+0APVj5RROPGuQ8eEM6/2blL/Cu
rGv3LJZ0LmHlP/9r9MqhgyNJ5yRW/rDDumE32gaRzn6s/A9j/OYOceL2FhdW
/oHe78qb21uqliZ9FJvlC/3b3bnx6SS3A+B8SuPdU85jDLgdILjB2ElFN09o
iGn7bLFLKel8j+2ft386Z69lt2LS2ca1aZGjSq5wWvvj4iehBaTvXrafaap0
fYjeqFzSGZ+y71N81sjYASpY+YPnvcpS1OV2gBRW/iPj2mQ7OaeSzoGs/FeP
WkWHT08ind1Z+ZWmj3109VUM6XyelV87wk7n3rIw0tmclf/LzcZ0Lzk/0nkV
K/+oRzGbm9tb0ll5vVucORQxitsB5rLzI6pxKz4FnKriOo9t8U5sVihskfpv
3yXidgDsq/ut75K9/mQp6Xz/1Bs/s5wCwehWzpKn/YtJZ+yLmmpUTatL5/YW
2yznyyq6BUJB74g/axfm8nmLTJwc6IxP6E92LVb+2k6V8ksaMkjnIFZ+ZZHW
DCdJCuk8mpU/fGrvi4/GJ5DOd1n55e5129SnPpJ07oX93ojbi/X1A7n9kJXf
f/X57Ob2lnGOrc6r6JYI3wwOn5t/gtsBHrDyxh698CrPidsB+pS+Nc4RFwsn
fnY7usC4inSm88mnaqu29awgnVtqukx3VCkWbA4r99cKKiWdcY7DVnXnxFnr
i0nnqosmSrqORUKj9SbbgwqFpHOITJwc6DuWlb+Lx+Ojhj9ySWd8Qn/orMjK
30auZt6VYxmksy0r/1Zxe80J5W9JZxEr/8OjRhaZY2NJ532s/PvmdDg99EMo
6VzByr9Lei+oub3FYU5aD13HMkHDeLXLoG18PdKKnbNoMemreZoGtwMcZOX9
Oef0XaMHNXyewfbD99/RmpEgriKdjWq2J4vNSoUhUT4ORnYVpDPOfWgNWird
PrWMdJ4nTHpillMiFMcHFXplcXtLX8ThkbED2LHyvz0Z90TudyHp25KVv3D5
iy/hLnmkMz6hP3SuYuWPVLize3tMOum8npW/9R7xin6SJNI5jZX/2LkPabp+
kdxOy8p/YNLb483tLbWN7nfMcioE0zWdnCrz+foua6HZMRXdCqFN619nV1jy
9T7OBdjoZTor7awkfTzq22g6qpQLbXZq9nDuU076WLJ1dLzMer+G/a7Bg/G5
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
20J8NB3fKv4uydpE2/Gqsg9wYPIrDoy2uYXkLdW2Ut+nJDsIH1X8KPHXiL89
6cxW+Kjin472bfZLPmSsYx9lfGnfqUXyK1aqX7M0PyPT2mCNvKjjTSR/QfQ+
HT8j+e867oxNFF1Dxx8lHn/6eNHjcvvKjLlY5x8tPff4ihyjn+qL/078a3rO
OwrP7YTgPfqJ6AQdvyy6t+gZ7FX1X8Je0vErhdfGa+hlyddnP7JWC89zA8m2
zK3vXtW5+qIP61leKT3Oy6Kfc33htfSZ2quF18Mz6dnQie/o+BHJ1xJ9G98Y
P110rNoT4tcWfU/tWfHrYh/UxohfX/QEjdEmt31CN7dPumWAnuNVyXbFH1Qb
pf7rVZ4v5m0tfNTSfeg7XueeK7zO8efbpXE+4HrNz+TS6xe/+jq+m+S3iO4u
+pbaQ4XX/7DKPsRc7HnwWMzzR+xv3etD9Jz6vCm6T+W4oW2617vMi65dR/TU
zHO+C7qjss/0M759Zd/rF2yy+DPF/yX+SfHdxP8h/gnxp+N/oyf5ruL/JL4R
fatmv+RZyc8R/VvyMeJ7iP9X/ChiFfxnxk/9ue7uYH/gLtF6rIXca/dPdKhk
27GuCscKw4PX8qa59fLLOndtYT32t9r12MvKsQQxxRO611/0Cf5e6EK+52+6
/kmdWy93n4nBMSyxLLE1doH4+sXkl7Nn76jsC/6IT13Zz/5N/L3ijxG/WPz9
lf3Rn8Q/XNkvXFbaT2+oMTcUfbCyL7tE8ocq+7JLxQ+v7F/+UNrmbqX+6+Br
Sn605Isk75LGaYCvia2UfKXkz4vvSbwjfrT47uJXiH+FtVRYFz1S2f9eLvnH
mfcXse5dlf3sBZLfLf4ofMXS9CTd58Hc928r/qHc79qO/Sh+K11/bGZff6No
/3qL0n4/MuzdkBTLfKb+B0peD39b8iY6npc5vroD/Zvs8nC1X1PMdYDa+vje
6r9RsP3tTdyk823VcD0/yIwzrF7z92OOmJ/W6AqeWdfeo2cYJn6W7jlU/NX4
S7ljEnwvYtVXRdupYWbuiraz/YgFM2MUhJn4FPgW+BCtWD98H/U9unQcgy9x
YVpD+JZtCs/J47ruBPGdWJPor9zz8xY6q3TstgExlI6vwafS+evEXyX+c3xh
8S3FDyUeLBwn3ZUbi6ifOcZZwLdUO1FtL53rmxm7uSzFEWA43XPjMwfqvXon
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJxFm3kYVtP3xe907i2Er3mukJBMITRIGgyFipChSTIlmUIiRYaUEKGQkpBM
lbGiQRkqY8ZMKRmLyBh+62Od5/n9cZ53r3vOve997z1nn7XX3m/dHn07npcl
SbIiT5JCn9eWSbIoTZI9ZX+qA+ervSe8VHhLjRmt/rXCi4RPkb1G7TjZ9+si
46sk2UftbuGvhF+Q/bP6jxceLzxBOKgNEl4k/LTsn9TfSXic8P3CN+v71pf9
jI49rO/7Rf2dZU/QsQfUX5MxwkuFn5N9vcb/q/t5RcfW1/iXSp/PdYoaSTJA
n1+rf2+1GrJHqf9H2buoNZP9no7tonNr69wPdb0N1cYJ/6BrvCh7A7V7hb8T
nil7rs5J+W4dmyO7Y0iSu2TfrPPfUf/7ul594TrCHwuP4D40vr6+r77svSvf
63DZf8p+WdfI1f+qjs2TfZOOZ8IfCG+qa9ypY7/q3LeEL5N9l9oK2cdo3Nv8
fuF31b+b2smye+j4LNml2vayP9Cxf2RfK7umnkdXfb4gXKhtJ3svXeNZXe9G
2X/I3kPtTeFceJnsjdQeFF6je3pJ9k263mc69w8d21N2pWM3yn6Pdyb7Vh1b
rf7XdGyk7Fo6dp/s79U/S3YPPa+Hhe/Vb3tX+Fx+h8Z/pGPP69h6OjZS9ica
/7zs29S/UeZzbpX9sc4fKvttHbtY/Z+Vfn8XCo8Q/lZj9hBupGu15950vLnw
1vqO/XVsqfq3F95Zdiv1fyPcQHhf4XbCrwkfp3Me0bFXZa9U20323uo/Uv1f
Ce8qvJfwEcLzhTto/A7MT9lLdD/HyL5G9gL1f63P3TV+H40/qvL76KT+yTp2
n+zZagfF77tAv+2B4Ps7U8eaaPznOn9H4V11fmvhH4UbCR8kfIzwozp/M9aa
jmWy99Wx52XfpXH/yP5NnwcLH6rxnYTv0tj2wtvqebTSsd/V30S4pezj1P+P
cEvhw4WPF/5CeCfh3YTbCNfQd/wrvINwU+Fl6t9ZeHfhtvF51NZ31NKxl2Wv
VttX9oHqP5r1xPrUd9cVPkR4b+EWwgdr3EHCjYXbCrfgvoXfEj5S11uLz5Bd
6vkcKbuDzj9J/YXw4awH4ROEa2tMbZ3fQ/hU4c3Uf6L6uwqfLPy2+o/KPMdL
2e+ovSH7JX1fpfXRWGNepE/jX5N9gNpLwpXw67Jf0Lg2Ov8XHXuw8P0dnvka
b8qepLZx5neQsnb5XbJb6PyOcb03y7zG75f9kD5PUf/2uudOGtNY93ue8EWy
z9P4OTr/aI1ZoGNP6diB6u8r+2LZfbk/4T7Mf+E+wnV1zbq6Vj/hc5jPwofq
/DnMZ9l7a/yZsvuq/6zoz5pk9qHjZAf1H6H+Y9V/ovo3Fz5JuJvwKfF6LTV+
D3yu7P3Vfy5zV/3nqv9+3e9W6v9Rx+rJHqO2ufBq1pzstWoHyj5E4ztofGud
f4XwYOFLhdsKXyl8jfDlwu2Eh+CfhAcKny48lrUjfINwc+GLha8Qvki4qfCF
wpcLXyDcTPgi4QHCFwq3F75GeJjwlcJHCQ8WvkH4CuEWwv2FrxS+RPgQ4UuE
B+b2N62EBwhfLdxf+Gjha4VvEr5KuI3wQOEhwpcJz9TvbZt5jsyS/U7uuTxe
z+9E/IXwr+xvwiexFnX+Bfh6He+Hv9DnP8JP4t/VP02tReZ3Op29DZ+pvrlq
Zwl/K7yB7Plq5wifreuNZ67q+DBd7xkdOyzzGmDOr6fj89W/LvX8OkfjJwhP
kn2Txi/U56rEexR71uV653do7G/4BHxd9MfDNW6Qxp8sfJvw3cJDhe/UOZtm
9lH4pHvVtpC9pdp9hffrxrIf0jnn69ynmB+Z96RU13iROSbcSd95s+xZavsJ
dxQeQV/lveZxnZdr/dZiz1Hfjjq3BXutPr9PvGezx81UfyPZHTRmBteqvPdu
ybOU/Rj+KjM/uEL2qbqn29U/Vte5Xv3rdM7pvA+NeVz4Y43ZTngn9R/Gvejz
B+a6zv87977J/rlS7R7WkK43SvYY2ddp/C06v5bGbJh5f3tFrWPmPYL9p4vG
34o/1/hrK16EeJM+/kzNj45X/3Dh22QPUf8k9hud+4mObYVPV/9N7J2yB6u/
k/Aw4VuErxYeWpgf4LNGyf4wt38/RMdO0bEB+r2jZb+NT4JrsJ5lL9O4D9gf
8CmsP40dKbw7a0rjN9G4NbJ/0Ochiffez4T/wp8l3ns+F16J/2f96Pw7hFcx
p3g+wvdyfunxdwvfw/4u3Jrfw3xiPy59/WHCt7OfC7fi9wnfKbxa+FjeH/NN
+AR9/yO6v0nxfXyn/jY8P/Xfrf7lwgewfoVvE17B/MQf8Xzgqzp/P+GDde6x
ws/peR4mPCLzfvxs8P45PPN+N0u4I9+VeT/9t/D4I3R+Z/hm7D9RuIvwbOEu
rNfM+xv8IMk8h/9R35fMefwl84W9KfrniZn99Sm6/vTUXP5UOGzc/x7IvD++
EP377Zn3o+M08D6NX6hj03LjccI/CXeS3V3fNyi1D9pLdi+1IZE/7iv7bl1v
E/WdrOt9qev11LGr1fdx7v28j/B1qX3SAbJ7q10T+Wkj2WepXQs3V9sPbll4
Pu2i8z+N/PkMrqdjL7CnCz8rrK9NTtN3nqNzhqb2gfvLPkmtv+w1rEHZ38Mn
ZI/S2DG63pBgrjRO10nlL/bV5wUav1Wcs1ezh8u+XmMOY28Qflj4TuFfhAcJ
TxT+UnhH2X3Vrhf+ITdfGacxW6uvp75vhXADXbNP/H21edbq30r9PdS/XP2N
dOyi1PvlLoVxL+HXhafCaXT9LYT/p+OfsL70eW58fjvwrIjRZP+p8b+ypkrH
HxcRA8EFIz/i97Pfzoj86Y7MfHBjfJ7wH3AE2f2IQXS9NrruV/Cnyv4GvzNf
9sU6f4bgI/gJ4UuEZwpPFs70PP+nY4/jn3S9ubI3UXtC+C/heVwrmG9el5lv
X6jvG04sona07C0rcx1iuTfgH3Am4ZrCi2RvUXm/Yt9azH6m6zUVvj4z399U
bbrwv8Ivcy/qb8h+mpnvL2H/EV6u8z8SHqjvHKvvHq1jP2vsG+rfkHdNrKD+
L4XrCTcQPlx4ajB/wR/A/58M5uNXZubH04L53rWZ44XHguORSzPvD8TXC9P4
TmU/EcyPB2bm99OD+frQzPHCU8H+5qrM/Hqm8FHCozPz9cWRn8wR7i28KPKh
2cJnVJ7PD+q7luvYGuaC2lXcn37PAPV/LjxC+MPMfGtJ5F+vZuaf78Xxr2Xm
mwcJny98ic4/X/j9yJ8WZ+YrcyK/nJaZby8Vvk74ncx86sPIv97MzMc+ivzp
rcz87YPI997IzN8WRv72knAv4c/ifvdBZn71adzf3s/MHy/W7x0R4/1DZL8W
+dQs9fdU/xuR380VPlP49cgXXxQ+XfidyEcXZOazc4XPEp6emf/Oj3z7WeHT
hN+NfO+VzPz7k7i/Eg/DD1+JfP154W5wjfj8XhDuzlyPfP854a7CfxLDw2eE
p1TWZSr9lsPUuuvY3/hg9T8l+wn1t9T8vFF9XeF7mTUOfvvNakfJ3kzjh8lu
Hfdj/Ahzj3MOo7/w2mMNHlF43bP+u6vdwJopfH43tcuFP4NHyD5BbVv1nV4a
NyHWq6wpsDewRzQrvF+0lF1L9o+VNQl8F3vAIYWP0x9Sc4qNCsd/G6mtEt5Y
+HDWCj4dvlPan26b239uWPjZ8Iz+W9Ol/SN+8vvKfhn/fCqcEF+p/htkHyr7
J/bz3Pg0tZ10LCu8d1zKfiJ7A7VDZedqn2vsm8Ql6Ed6FhPhAkUcy/vgt8FJ
mK9RD7pZ7/d93m/0Z0nlvWMLjX1TdlZ5bc5S/1uyb9fx/+lam6i9rmN/6fxv
1f+y7CXwh2B+Cc98T3i48BLhZ6J/7ADHTs2hnyz8jnhX7Jmfasw2wp1Tc4SP
hLeO+Ey1XWXfoOezRHafwvrPgfocyPXUahLvEifJbgBnj78fbaphfF4Xqn0q
u6H615N9XuHrfcA74vmo7S+7nfrf1bVC6efNc39f3xe4JnNR/W/n5hHwCe6R
e5+k4zvE/aKj+q4J3i/ZO7+N9/uZrneAjh1ETBCsH7bPze82FT4DbpRbT5yZ
+33U0fin8aHCU/T5mNqjvJ9g/bJdbr6JntAb7iE8sbL+cILw0bn5RS3hbsKd
c/PN9YVPEz4uN3/dvvT98zseFE6D9dOjcvNViA166JHCo4XXFebDrXPz278L
89k2ufky8TT8pnlufvpd7vinjdrp+o5vcustrVNzkuWF+eMeOj4c/1c6Hny6
sL6BvgXf3TM3f1hRmA83zK2vbRLsf07Jref2K/6jp0lTXf8C5m5wfHRybj14
Y+Gewl1y67v4KHwVnGW73D4F39JPrR7PQLgH7xr/JPynrtlOdtvIR/BJ+CY4
237qP4t9GO6Wes/GH9bh+UX/dqTa58KNoz9cv7DelKotJcYvHP/1FO7PWi4c
T54ufBncU60mv0e4t+wR+j3v4f8j/0DTRdsdBX+RvVGw/z5J/ePUvxGcWn37
ML9kv6DnvY/ueXKMN5l/52j8Mal9Qk+1Gjwv3p/sVnDa6Cu/0fgaun776KtX
Cm8g3FXjj88dL9XR+GXC3YW/EH608PedoPYI3EbHG+Af8QGy08I6AnoCes6A
YK0IjWGB8F+l398TrInK+gvaJTHq+6U1drR24tExwk3V2mf+Tn7r9cHaGBrI
QnyvcKvMc+71qL/hC/AJd7C3l+a+xPjE+ofqO1fn3g8eVX9z4S9y++OHhG+B
42Se02t0H+sq+03858M6v1+wdoyG/GBpjQCtAA0ALeDywn4b/43WgOY6oYh6
LrGc8M+5958pws3Y43PPn0nBmi3aLZrxh6U1RHQV9JUDubdgf47GRr5gcWnf
ho+7Pfgd8i7Zfy8oHZOgoTH/iFXg1OMLc3S4NnsoeyYx+K6VY+g/csfAxNZw
8nv0OSUxVw81rBnNFr6coKmGNRhioIuES+EXC+tTi+L9zy78Tng3zI9nC78z
3h0x/O+5YzRie2K034TrJo7d8MH4YuKZvPScZe6y359ROiZqyL6QOlb6Tni3
wnoD8eWqyjHNZsIbC/8gvFdhf0b8CCdfm1sjh6sTE+1T2H8QK7Hns/ezflqX
/n3sIzzzN9BbS88N3gnvpmd8f2gwD5R+JjwbNKvJpTn/oMwcnFiAGJ39oXvi
2P0ttUtlz9Oxs9W3k/COwftIj8rH0FnfjGPRDG7OrAGgJaAB3JtZA0AbuFH4
V/Ye4V5wZeFvhO9hTwm+5ozMHJLvYs8htiPGYy9ij0IbQdNg7/q4NDeCR5Lf
ulrf8UvqHN5g2Vep/Zz62CDZdQtzpb5qe8peqvNryl6ZO59VR8dOSf3+9ih8
nP5WqWPai9gDEr+/i3k/xHSp5whzhT3ngsw5G/YiYojXM8cYxBbEJB9ljkmI
VZ4uHW9uo2PPyO4aHIuvJzy+dI4DXRF9cUrp+U9sisb4uPDfGr8B7xLOKfxb
8LnE9ENK57zQBdEH0b/RINEiOWdC6fwK2vXm8frk7NBB0UPR78khohWiGaIn
riqsZx2QWw/bUsd2jntWe7SK0rnVnXTsudLrm9h5a+FpwtNLay/bxt87tXTf
jLienyi9ttDYnyr9fBgLB4ILjVTbO3OOgXziddxj4nt4vrRPw7dtGNdPcx2r
J7wytZ66ael7Y09uV/qd847RLMht4mNbyW6S2/f+XFiPa5pbjzq+sPY4JbW+
jd6Njb+D26F3P5ba38MFeZ/ocehyv1aOqYmt4SBwEd4JuYnrCr8r+MZS5h7v
sLB+SS4WEnJD4XdCbmVY4XfVGR+V+DvR19HTp0Y+Cff9Jc6NbxLnJM+GIxDP
pdbPz1RbD/6d/r++/kqMJ1grXQprbVwTff7aYD0N7Wytvn8LeE/qHDD61ZeZ
9YY/eN7C3TX+HtnHci+V9Wq0bzh8x8Jzjrl3d+G53kv2q+rbUO17jX2ktK9C
Z/+7sl5Pfhn/RixBjmRt5j2bvRvNBe0FjYHcJxoFWgWaBrnOF4mHZI9JnWNG
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
RO/7P1Vd4PM=
          "]], Polygon3DBox[CompressedData["
1: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

          "]], 
         Polygon3DBox[{{1710, 1180, 758, 759, 1181, 1711}, {1477, 866, 1019, 
          1824, 1306, 1307}, {1755, 799, 626, 625, 998, 1546}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1IVFEchvEzpmNmOpY5jpvClYtSwVpU1iJahS5MHBeGJsFYDqRbg2iZ
QZtWRcvsg4IgghEhCAQl8IMYsiy1GZVWlXuVXPS7uPif53nPPfd83dt4Y7R7
JBZCeKX+kMjfaf7hX/xcGkINbywJoU7OyyfkRV7kLfx+3Dj5Ih/ned7JK8pC
uIYpbFBZ/sKzM/xOtCa/zB/w1/wqf8IHy/b3M4qTeA9n8aS524zbVkvyb+xR
iQMhfJVr8BsewWU8it+xFn/ggv2mnWOFH9NXp1b5M3Mk+Rp/y+v5T95kbIoX
eNq7E57F9RXlXvm5vB6dk5/lG7yTP+Ln1Y7a1LeC59TTqJzli75W/pDP8LuY
w9v4EgfwMXbhOF7CMTyNbWqYJ7EPy7EDd617Ifpm2IwFPI4Jd1Zrra3onuRf
eEUNO0d1tAbeVFV8Xv8QP8zneIZX8qy5PsmH+C0+wyt4hk/zg9E34x/5oHfK
5Q/8Ord8mOID3FZDjvdzw0Of5r3sisOyZg89Cm/0nyLtsf1/8j/ZgE8z
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0LkuhGEUBuAjDJ2plRIJEox9bexLhZmh0TD2bUZl7mG4grFv9+Aq6EWH
QhDcgUfx5D3nPfmTL399rpDOV0TEEg9VEYfVEUVaKVFXGdEijzimjVleaiLK
iYhh8zIrpPjQz8kTtxGZY5UBfbuc59RtVK7xrW+kw5zmzG1MNul+WDd3kuHc
bVy+6zfkJl1keeJTPyG32KabBV71F76dNO+wSw8N+jcu3abse+zTy5d+UV65
Tcs8BQb1ffJaPyMP+NU102++0d//v8s+xK390X99Ntfq7+xJ+QeEGyvT
       "]], 
      Line3DBox[{1232, 383, 1610, 368, 2030, 1552, 1543, 797, 1233, 1544, 
       1852, 1446, 1234, 1819, 1853, 1447, 1235, 1820, 1854, 1448, 1236, 2008,
        1545, 1449, 1237, 2010, 1546, 1755, 2009, 1238, 1547, 1756, 2011, 
       1239, 1548, 1855, 1450, 1240, 1549, 1856, 1451, 1241, 1821, 1857, 1452,
        1242, 1822, 1858, 1453, 1243, 1859, 1454, 1244, 1860, 1455, 1245}], 
      Line3DBox[{1246, 1669, 1553, 1611, 1623, 2013, 1829, 1593, 1554, 1757, 
       2014, 1247, 807, 1248, 1861, 1456, 1249, 1862, 1457, 1250, 1863, 1458, 
       1251, 1864, 1758, 1933, 1252, 1759, 1934, 1253, 1760, 1935, 1254, 1865,
        1459, 1255, 1866, 1460, 1256, 1867, 1461, 1257, 1868, 1462, 1258, 
       1869, 1463, 1259}], 
      Line3DBox[{1273, 1469, 1876, 1272, 1468, 1875, 1271, 1467, 1874, 1270, 
       1466, 1873, 1269, 1940, 1765, 1268, 1939, 1764, 1267, 1938, 1763, 1266,
        1937, 1762, 1872, 1265, 1465, 1871, 1264, 1464, 1870, 1263, 823, 1262,
        1936, 1761, 1261, 2015, 1558, 1557, 1260, 1834, 2034, 1556, 1612, 
       1555, 1721, 1670}], 
      Line3DBox[{1287, 1473, 1881, 1286, 1472, 1880, 1285, 1471, 1879, 1284, 
       1947, 1772, 1283, 1946, 1771, 1282, 1945, 1770, 1281, 1944, 1769, 1280,
        1943, 1768, 1878, 1279, 1470, 1877, 1278, 839, 1277, 1942, 1767, 1276,
        1941, 1766, 1275, 2016, 1562, 1561, 1274, 2022, 1649, 1560, 1613, 
       1559, 1722, 1671}], 
      Line3DBox[{1289, 1563, 1614, 1651, 1650, 2023, 1288, 1564, 1948, 1823, 
       1290, 1773, 1949, 1291, 1774, 1950, 1292, 1775, 1951, 1293, 855, 1294, 
       1882, 1776, 1952, 1295, 1777, 1953, 1296, 1778, 1954, 1297, 1779, 1955,
        1298, 1780, 1956, 1299, 1781, 1957, 1300, 1883, 1474, 1301, 1884, 
       1475, 1302}], 
      Line3DBox[{1305, 1521, 1568, 2017, 1476, 1594, 1567, 1885, 1477, 1307, 
       1886, 1478, 1309, 1887, 1479, 1311, 1888, 1480, 1313, 1889, 1481, 1315,
        1890, 872, 1317, 1891, 1482, 1319, 1892, 1483, 1321, 1893, 1484, 1323,
        1894, 1485, 1325, 1895, 1486, 1327, 1896, 1487, 1329, 1898, 1489, 
       1331}], Line3DBox[{1330, 1488, 1897, 1328, 1970, 1791, 1326, 1969, 
       1790, 1324, 1968, 1789, 1322, 1967, 1788, 1320, 1966, 1787, 1318, 1965,
        1786, 1316, 1964, 871, 1314, 1963, 1785, 1312, 1962, 1784, 1310, 1961,
        1783, 1308, 1960, 1782, 1306, 1824, 1959, 1566, 1303, 1816, 1958, 
       1565, 1520, 1304}], 
      Line3DBox[{1332, 1663, 1664, 1570, 1792, 2000, 1595, 1569, 1899, 1490, 
       1333, 1900, 1491, 1334, 1901, 1492, 1335, 1902, 1493, 1336, 1903, 1494,
        1337, 1904, 1793, 1971, 1338, 888, 1339, 1905, 1495, 1340, 1906, 1496,
        1341, 1907, 1497, 1342, 1908, 1498, 1343, 1909, 1499, 1344, 1910, 
       1500, 1345}], 
      Line3DBox[{1347, 1665, 1522, 1571, 1794, 2001, 1346, 1795, 1972, 1348, 
       1911, 1501, 1349, 1912, 1502, 1350, 1913, 1503, 1351, 1914, 1504, 1352,
        1915, 1796, 1973, 1353, 1797, 1974, 1354, 904, 1355, 1916, 1505, 1356,
        1917, 1506, 1357, 1918, 1507, 1358, 1919, 1508, 1359, 1920, 1509, 
       1360}], Line3DBox[{1361, 1523, 1661, 1689, 2002, 1837, 1660, 1524, 
       1666, 1798, 2003, 1362, 1799, 1975, 1363, 1921, 1510, 1364, 1922, 1511,
        1365, 1923, 1512, 1366, 1924, 1800, 1976, 1367, 1801, 1977, 1368, 
       1802, 1978, 1369, 920, 1370, 1925, 1513, 1371, 1926, 1514, 1372, 1927, 
       1515, 1373, 1928, 1516, 1374}], 
      Line3DBox[{1376, 1525, 1662, 1526, 2038, 1375, 1698, 1527, 1667, 1528, 
       2036, 1377, 1529, 1530, 2004, 1378, 1841, 1979, 1700, 1379, 2056, 1750,
        1751, 1380, 1929, 1517, 1381, 1930, 1803, 1980, 1382, 1804, 1981, 
       1383, 1805, 1982, 1384, 1806, 1983, 1385, 933, 1386, 1931, 1518, 1387, 
       1932, 1519, 1388, 2005, 1531, 1532, 1389}], 
      Line3DBox[{1391, 1807, 1984, 1390, 1690, 1692, 1691, 2052, 1728, 1392, 
       1699, 1533, 1668, 1985, 1817, 1393, 1702, 1818, 2043, 1701, 1534, 1729,
        1394, 1753, 1838, 2057, 1752, 1695, 1395, 2045, 1706, 1707, 1396, 
       2048, 1710, 1711, 2047, 1397, 1715, 1716, 2050, 1398, 1808, 1986, 1399,
        1809, 1987, 1400, 1810, 1988, 1401, 943, 1402, 2053, 1734, 1735, 1403,
        2006, 1535, 1536, 1404}], 
      Line3DBox[{1406, 1811, 1989, 1405, 1812, 1990, 1407, 1693, 1694, 1991, 
       1749, 1748, 1408, 1839, 2041, 1696, 1731, 1730, 1409, 1704, 1705, 2044,
        1703, 1537, 1410, 1842, 2046, 1709, 1708, 1538, 1411, 2049, 1713, 
       1714, 1712, 1539, 2026, 1412, 1718, 1719, 1717, 1540, 2037, 1413, 1573,
        1992, 1825, 1414, 1575, 1993, 1826, 1415, 1847, 1994, 1740, 1416, 
       1846, 1995, 1739, 1417, 1025, 1736, 1738, 1737, 1418, 2007, 1541, 1572,
        1625, 1624, 1419}], Line3DBox[CompressedData["
1:eJwVzrsuw2EYB+BX1L9uALNIBDUYCIPDPRjVIXEBurSJww2Q6Elpa3QdTgub
tg53YLIbiMnzDU9+7+n/tZP7pc2DoYgocj0SUc4iTqiwQZ1HjnMRXfsjdTf1
zHLGZz5ino59pn9nRZ8fjfhQt81f5Rs9MvOB7HNltyeXvT8jd9nh0nxbdvj1
1nSiLnLKFi03BfNv2vpD1qnxQJULNz/2rfRb6V3WuOOeYf9lyb7prpHuabLK
LV92izTsn/TP3PBntkDdfCAnqKn7cpyquifHOFdPyRfmfFvgH0npMck=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{605, 1116, 986, 1050, 987, 1849, 1082, 1035, 988, 989, 1853, 
       622, 808, 1861, 637, 823, 652, 1942, 838, 667, 1950, 853, 682, 1961, 
       868, 1887, 697, 883, 1901, 712, 898, 1912, 727, 913, 1921, 742, 1979, 
       1168, 1169, 1170, 1171, 2043, 967, 1106, 968, 1162, 2041, 1159, 1219, 
       1160, 779, 1999, 953, 786}], 
      Line3DBox[{606, 1117, 990, 1051, 991, 1083, 2031, 1036, 992, 993, 1854, 
       623, 809, 1862, 638, 824, 1870, 653, 839, 668, 1951, 854, 683, 1962, 
       869, 1888, 698, 884, 1902, 713, 899, 1913, 728, 914, 1922, 743, 1223, 
       2056, 1224, 1225, 1226, 2057, 1157, 1161, 1158, 1172, 1174, 2044, 971, 
       1173, 972, 1165, 2042, 1163, 1164, 787}], 
      Line3DBox[{607, 1118, 1119, 1052, 1085, 1084, 2032, 1037, 994, 2008, 
       995, 624, 810, 1863, 639, 825, 1871, 654, 840, 1877, 669, 855, 684, 
       1963, 870, 1889, 699, 885, 1903, 714, 900, 1914, 729, 915, 1923, 744, 
       927, 1929, 757, 1175, 2045, 1176, 1177, 2046, 1178, 1179, 1060, 1143, 
       1142, 1047, 2024, 1195, 1196, 1194, 1229, 1228, 1227}], 
      Line3DBox[{608, 1121, 1122, 1053, 1087, 2025, 1086, 1038, 996, 2010, 
       998, 625, 811, 1864, 640, 826, 1872, 655, 841, 1878, 670, 856, 1882, 
       685, 871, 1890, 700, 886, 1904, 715, 901, 1915, 730, 916, 1924, 745, 
       928, 1930, 758, 1180, 2048, 1182, 1183, 1184, 2049, 1185, 1061, 1145, 
       1144, 1199, 2051, 1197, 1198, 1148, 1022, 788}], 
      Line3DBox[{613, 1004, 1058, 1005, 1850, 1088, 1039, 1006, 1007, 1857, 
       630, 816, 1866, 645, 831, 1873, 660, 1947, 846, 675, 1956, 861, 690, 
       1968, 876, 1894, 705, 891, 1907, 720, 906, 1917, 735, 921, 1925, 750, 
       933, 763, 1988, 942, 774, 1994, 1212, 1213, 1214, 1215, 2054, 978, 
       1029, 979, 1112, 1109}], 
      Line3DBox[{614, 1008, 1059, 1009, 1089, 2033, 1040, 1010, 1011, 1858, 
       631, 817, 1867, 646, 832, 1874, 661, 847, 1879, 676, 1957, 862, 691, 
       1969, 877, 1895, 706, 892, 1908, 721, 907, 1918, 736, 922, 1926, 751, 
       934, 1931, 764, 943, 775, 1995, 1206, 1207, 1216, 2055, 1217, 980, 
       1030, 981, 1113, 1110}], 
      Line3DBox[{615, 1221, 1222, 1188, 1187, 1851, 616, 803, 1859, 632, 818, 
       1868, 647, 833, 1875, 662, 848, 1880, 677, 863, 1883, 692, 1970, 878, 
       1896, 707, 893, 1909, 722, 908, 1919, 737, 923, 1927, 752, 935, 1932, 
       765, 1203, 2053, 1204, 1205, 1025, 1208, 1210, 1209, 1027, 2018, 1133, 
       1134, 1031, 1081, 1080, 1033}], 
      Line3DBox[{617, 1012, 2012, 1013, 618, 804, 1860, 633, 819, 1869, 648, 
       834, 1876, 663, 849, 1881, 678, 864, 1884, 693, 879, 1897, 1898, 708, 
       894, 1910, 723, 909, 1920, 738, 924, 1928, 753, 964, 2005, 965, 766, 
       969, 2006, 970, 1021, 975, 2007, 1026, 1077, 1076, 1200, 1146, 1147, 
       1032, 1099, 1098, 1100}], Line3DBox[CompressedData["
1:eJwVz61PQgEYhfFXZcNRnIJubBQDXZl/gQjqxsZGcbNpZfMLLRaDyWK2WEGb
ySSiwWYQRjUwN20GghV/Nzw75zzv3b27y/uHjYOpiKhhbibiEalUxHs6YlZ/
wJs+mY6401/0sX6r73juz37Vv7hreckNuLrs2UP+Qva55+Rd9pH8sJc8002+
yY3sPX2Re5Jtu8M39By3jR9uS97wZT6rb+Kbr8orfo0v6QsY8xW5gXO3otuq
/snPyzLW0XQruP3yK8k/6WfyFLtuebulZ3CCY9zjHzhpKOQ=
       "]], 
      Line3DBox[{784, 951, 1997, 777, 945, 1990, 768, 937, 1167, 2052, 567, 
       755, 566, 1104, 2036, 962, 740, 911, 2003, 960, 725, 896, 1972, 710, 
       1899, 881, 1020, 695, 1885, 866, 1019, 1959, 680, 851, 1018, 1948, 665,
        836, 2016, 1017, 650, 821, 2015, 1016, 635, 806, 2014, 1015, 620, 797,
        983, 603, 2019, 359, 1048, 382, 982}], 
      Line3DBox[{785, 952, 1998, 778, 946, 1218, 1156, 1991, 1220, 769, 1202, 
       1201, 1105, 966, 1985, 756, 926, 2004, 963, 741, 912, 1975, 726, 1911, 
       897, 711, 1900, 882, 696, 1886, 867, 1960, 681, 852, 1949, 666, 837, 
       1941, 651, 822, 1936, 636, 807, 621, 1852, 798, 985, 604, 1065, 2027, 
       1064, 1049, 984, 1115, 1114}], 
      Line3DBox[{789, 954, 1132, 1150, 2039, 1149, 780, 947, 1075, 1062, 2026,
        973, 770, 938, 2047, 1181, 759, 929, 1980, 746, 917, 1976, 731, 902, 
       1973, 716, 887, 1971, 701, 872, 1964, 686, 857, 1952, 671, 842, 1943, 
       656, 827, 1937, 641, 812, 1933, 626, 799, 2009, 997, 609, 794, 2028, 
       1066, 1054, 1124, 1123, 1120}], 
      Line3DBox[{790, 955, 1166, 1063, 1102, 1101, 2035, 781, 948, 1108, 1107,
        2037, 974, 771, 939, 2050, 1186, 760, 930, 1981, 747, 918, 1977, 732, 
       903, 1974, 717, 888, 702, 1891, 873, 1965, 687, 858, 1953, 672, 843, 
       1944, 657, 828, 1938, 642, 813, 1934, 627, 800, 2011, 999, 610, 2020, 
       795, 1067, 1055, 1127, 1126, 1125}], 
      Line3DBox[{791, 1136, 1135, 1189, 976, 1078, 2040, 1154, 1153, 1152, 
       1151, 1023, 1992, 772, 940, 1986, 761, 931, 1982, 748, 919, 1978, 733, 
       904, 718, 1905, 889, 703, 1892, 874, 1966, 688, 859, 1954, 673, 844, 
       1945, 658, 829, 1939, 643, 814, 1935, 628, 1855, 801, 1001, 611, 2021, 
       1069, 1068, 1056, 1000, 1129, 1128}], 
      Line3DBox[{792, 1191, 1211, 1190, 1192, 977, 1079, 782, 949, 1024, 1993,
        773, 941, 1987, 762, 932, 1983, 749, 920, 734, 1916, 905, 719, 1906, 
       890, 704, 1893, 875, 1967, 689, 860, 1955, 674, 845, 1946, 659, 830, 
       1940, 644, 1865, 815, 629, 1856, 802, 1003, 612, 1071, 2029, 1070, 
       1057, 1002, 1131, 1130}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
SvbLalilaEgIWUklMxlJaWhoGKXsUaLMjMrbls1t3ea9Bze3UoSk3/08Xc9z
HJ++v+eP77/fv97HcXJc1fu6rtf7db66zvN00eOLcTJkoNH7FSfl5P9PfRwO
08dxl7HKLw4Toe/0ji27X9ORfSeR59WSYVAYJ1e30Ujgq3M/L+oTDSlZ8nbf
3zcMGjvVca7yFFi4MNKrdZaKHm9jXj49NQzLTFGWcgEV4goM603cyahXsXTx
vkVEKHrZcsrpPB3Sjw2sKd5IQHfMDz4MzuPU/TdN++v2MOHihb3d7nq96GNf
7Y19TiRwdt08TEMj8Pxr96HhnAa0vp8lkUoiAc7pAFVxvgwstms6eOPLUIJq
qOPntAmomKafuhzVCGOzbTE/zXForeV168sT49D66NvmdGMcGIWqqRbvH0av
jQ/s/pI1CuuXby5h1uPh4ZZ1yde/M5CN5L4OkioJOt8vkaiV7Acv3wvnCglM
9NR73+VV6cOw4w+9Wx2md+v/aH+h5eoQ9I+SFqVJjSD5Xv/d79z7YV2Q7OVh
FgFWDaT73UpioqTD1okC1/sgq2BWJvkaCZ4J+lwUTGSgJXeORebq9cGeoN6m
R1cocFuHeFiYTUN9/aZeuEd94BdYGiszRgO+jRdYBM5zflCr0X/EuR+QqInP
3WImfKDNFmZPDCEl/7aII6EDoF+SbvPOngV2p+ihXnodyOCZ+Y7H5oPQtsEv
hL4zFAQ9poT9dSOQ2fGS6/s5PH3veJuhJDEJnAw7Tnyzz0MkPbxqBnMClCvC
bqxSLoDiHaq9QK5D51D8gSdnJmAVpkcTw/Row5ge7WVhom2QcQ+cTTXRqDRk
oWrf1bqmi/rAZ/nH2NRqPHAbkRxKHFjI7/Vjab2FbijRDNTp/TIAjcl7zEcX
RtHqDYfDhLi6YP6HAlFpMxFkNg9Hf5geQc6+bfjbX3Bgo9ZxavlGClzJbfao
ojBQiecjlbelOGgiqZobZJbqvtnkEXL+YUe5VspvHdmF8NO6qVEi0KOVPKX+
ThnhtGr/4s1QselkMZVpBHdLoq+4D7ih3buUWFMcXE/54JxXjBukPuwZy3n0
ADU2y1n+XJiAu5gu7D6mCxvGdGE5Uj+tbe1rwKtcTvHRBOf9Ktk36ZFAhZQl
pknpnm1g2cg7anJ8HG05tfEQn1TXn/MWrv/4/6P/Z/Bd3wSfeC9QQen3ip6O
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
gg0ZVuA9pCLeQ9biPeT/A0IR3No=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{732.2099339675749, 317.77777777777777`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.41299555586175524`, -3.1507829883948415`, 1.162755877594308},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.681796982552594*^9, 3.6817970481327467`*^9, {3.6817971013923407`*^9, 
   3.681797120535454*^9}, {3.681806837457351*^9, 3.681806844706895*^9}, 
   3.6822567781786394`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"1", "-", " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "RRat", "]"}]}]]}], ",", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "RRat", "]"}]}]]}], ",", 
      RowBox[{"-", 
       FractionBox["1", "kRat"]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kRat", ",", "0", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6784634101067038`*^9, 3.6784634149742603`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
/X/FvttZ
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmnnAV0Mfxe+9M/O0SJRspaSyVSiyU0qbkhZLod0uspMlS2TPTtbsRJKd
CFmyE6HIFtmLqLwS8Z5PZ/6Y5zdn5t773GXm+z3nzGwy8rgBo6uiKBbpT9Tv
x/qzVlkUnwk/kIriXv3+T3gP9b0fimJ9tQ0V/k14oY7dUHiY8FLhb4UnCa8Q
7iI8R8c3ER4uvFz4O/XfLvyX8J7CH6r/NuE/hTsLfyC8rvAQ4V+Fv9HxL6v8
pPpVuo8r1HejyiL1d1Dbazp+scpQ1Weq/1v1XaPfr9S/udpe17k3qO0n4W2F
X9WxE4V/Ft5OeJbwVyr9VH9c532pvo+Fuwk/IPyp8JfCfYUfE/5C+BHh13X+
/WqLql+ttgXCWwi/of/3o8qmwhepb4L65uq3u/oe1PnzhUerTBMeKlxTUxTj
1H+Ajq+tcpTqx6r/YfUPUX9S/3H8T+FhwrWEb9Pvrzp2R7W9qePPVxkoXFfl
aNVv0vFLVN9J/W8JbyJ8iPDe+X6+1v01E75A+HLhm1V+E95Zx7+ttluEfxfe
Rfgd4Z2F3xS+UfgTnfuJ2nqq/pDu43P1bawyUv0r1PaD+psKjxD+n/D3wvN0
fA/Vp+j4z9S3rZ7hYbW14xurfx21DWZ85fu5VWWp8K465121/aIyTPWXdP53
6rtSZb76W6jtFZ1/lfBnwi2Fxyef01b1Oytfa7n6OgrX0u/dartf/deoXk9t
H5Ue04zte9T3SfI3/FP42srf9lv17y/8jPAC4fXUf1aeL08lv1fe724qp6l+
l0od9e/M/1P9IMaw8Faqf5T8TtsI31H5Xa+l3z1Lf8MXKs8JxvbkynMl6PxT
hecxD5PnFGP3/spzbaHwfsJPM+6T5xBj/b7Kcyvq/NP4dsJ/Cq8rfKbwz8JP
CjfM/T8IPyH8HeNReLrw18L/qH8P3dstKu8yn9T+g+rtdMzLOvZaHfONcGvh
C1W/XuVH4fZ8H/Vfxz2WfuaLVP9BbXupPkPXuZexrdJB9XFqq6/rX8MY1fFb
Mr6FjxGeqvpg4pPGzr06fw3hCTrmvuBxw/jZXuUE1b9nPqj/WR3/De9X1ziZ
2CT8qPBJwbGLGHZh8P0MEn5O/QvVP0/tnVT2VblCbfeorZZ+B+iYr3Vsg/w9
vlfb4+pbW/gUYpvwY8K765gfhU/V+bepPk3ltdJzqKeOaaBjDlb9Zx2zQOe2
VLlJ9T/Vt6meb6r626l+ttrqqu8h4W2ExwrXif4fOwhfUPh/7yq8TPUe+j8b
1/iedlT/+ML3ypziHS0uPPenCG9deQzXjn4n2wufX/hdfa36tirnCtcTbqX+
w3W//zJmhA8Rvkr1zjrmb9Uv0bUPy/2nq940+lpL1f+c+luqHKr+f9T2U/QY
20l9FxYee0uC3+2rzE31bRQ9Fn4XfpbYrd9dVC5R21z1Haa2Sarvo7ZVyd+E
XPJU/lYLgnPPk8J3C5+hMkv4ROGGej9bEvN0PzGP57XVPlj9awi/qPpMnkG4
v36b6/hhfGP1HSvcSvgK/W6j/tZquzI4Buym8y4rHBvmqN5S5XjhVepvr7bJ
qifmLbFPx7dX/zn8T/UdLny76n3V9q/qp+q4XXXtvipjVT9CbXeov5/6/1O9
mX5HCa/J/ec5vKt+Ly08t4lBxCJiXG/VD00eX3vpmH9U/5/aDiTWC08Wfkal
o+oT1LYBuUt4FPFR5T/hkcRc9e2hY1aqPkblReFjhdfW83TRMQ/y7Lruu+p7
NDhXkCMfC+YQbXXsGZlbnCb8gurHqG0tnX+88JPChwjXFj5B+CnhQ4XrCJ8u
PFMYktKgxvn3RV37jXz93dSfVN+PXKf+rswZnkV4NvlG+AHhmuDnPyo5dx+g
65U6/kjh+4T3hwQJX0ke0PWak3N07tHJ32+g2iv1ryV8UOk5/pX6RyVff5D6
g/r3ZI4Jr6//914yZ/lUx29SmMucKvy86qN0fH0dP1zHvaz+Byiqb67+41V/
WOULHT9NeDsdex7fXPiS6PEOxyL+9xZ+XHhjnfuB8BRilHCp/oeCvwfvaqZK
j8ocgJy1sjBX6UVMUb2Z2t5X3ykqM4SP1rFr6v72Vfu3wtPy9U5W/3ThI9Rf
r8bX5NqzyPmqN4uOTctUn5Hvh3Mbq7ytcqLanlb/Yeqvq/MnBz/7SypTVX9Q
/VtVzlG14FNq66X682q7j/jNmBU+XHgNnT9U/evp3PVVhpFbgrnHZTk/wGnI
TbdX5jqto+fTvzl+jYKDwDXgjLreHOag+t5U2wC+v0pD1d9R/2bqrx/MxeBk
O6tvReW5xRwjlr+l84eTa4R3gSvo+D6ZH5+s+pbR831Vnk8fqpym+ltq21d9
Wwt30/GnwxlUP0FtjVX/kJzIfIFzC8+Bcwo3DZ4bzJG9or/hccIvFf62dwkX
ld/h/DxGjq/MSRg75wTnOr4x3/pF9ffiXQm3grsI94FLCG8ufKfwf6Vz+KfB
MX5P9V9TOPa/xPiCewlvJvw7/Ej1WfCGZH7YsvQzbJScD5uW/gZrJ8f8LnCv
wrngdeEDK8eY7YTfYP5VnmMdhN8WHlF5DO8azUdblX5nzVT/rXKuImc1Uf9M
5gzcS3hTxoLwv6U5Ldz2BeHu6r9euLn6n+d7CF/HHIvWJxvr+JHkgRrrmxbC
G6i/cbIe2oTxSAxKngNddf61hefGO8IjK8/Z3YTbCz+k4xcKfxkdM44k9xWO
JTwj77JO8LPzDrj32sHvhjhGPINjkGOWEvPBav9R/X+QQ4TfFF6UzCmOI3ZV
5hpwitH878pco9JvH/6frvdo5Tl4jPDnlefm9tFjoa6u+2byGL8L7hA89ttG
P2sp/CpcI/pdBnhQ8je6m28d/O0QnSfp5yNdf5nw5cGxd0v9/wmqL4NfkE/U
/1NynCZekwPQX8tVDhd+Q+0/J9/TwZVzAPcKxzlW9S8qcx9y3kaqH1k4F/4T
/D7eV9tvyTnjKLhL4Vxyh/p31P+qRQxR/Y/obz1Bx7Stcc4jFhITyYXThTsJ
XyG8ofDfwe93ttqWqG9l8P28J/xrMgdeszIHhYs+Lby78OXkEJ3/n9pOZP6r
bWnyHEYbTas8t5mDaLWHK89Nnolne0t4cXLMrF855xNL4VjrCo8ozL3gbx31
fPWFLw7mLHCXD3TM7zr2Ff02Uhmutl+D5wTc7Y/Kc4V8RWxfm/me/I33g4sV
/vbw4THodZXjc3yGu8Nx4DpwIP7fgsrciBhJrLwo6ydyHs//TeVceGuwTzEm
8+v39TtO5fzS3+c8lf1Vr1E5MliPca3xKncGc8IaXat/Ya7YJjp2Faq/or4b
+T6lY3AbHTdauKHqo9FAqt8cXO+OZlb/VtGxoVL7rOQ5zbM3CJ7r6Ps2pefU
I5X1etvSnBO9V2Z98rHqyxlLwdz0iDz+4d9bqH44XJJ4r+O6Zn72juq7qf0H
YlvpHIUOQA8Qgz5QWabSufQ7uUvHT1L/WGIFY1C/VdYvc9X3R7JngPaaVNlL
KPXbpbRHwf2PiM5VHXTcx3Av4THkAvWtSB7zcNtfK88F5g/fBs2F9kIjoBXQ
FJcFc060zi+VueguyfmSvMn8IicyFzcLzpX1c7xYWFk7MkfQRosrzx1yNrFz
0+BcfpV+j8rvgHcBfz+ytKb9rrQn1FLH31jZK8KTgL/CZfAqiGEDKsc4Ytsv
0Vrkx8p6gBwJ9/+rcu4kpzB3V1bONeifzfR/DtP/aafjj9FvfeFjVCYG3wP3
sp/KdTrnDbXtoPNvUX1u8pjsz9wuPFb/q6wF4DBwGfjoRqU5Sv3kHEeuW6Jj
/krOL4wNOGG75Bw2XvXllXPbE/pNlT0wvDDmOHP9ZbV9n6yX0P5bq+2lPMb3
rRzDGfu1grkvHBiuTc5HS/xdmQvcEPysjFnGLhyC2PhPZW4xSv1bldY0jGfm
7Oq5m/XVomi9xbvZWu+vY7AfyDPD2fDwWgnfVNnbI38wd9DwaHk8iBbqn1jZ
m+gV7O/AQeBUeGarvTOVa4M5AF7Y1MrcAD52b+lvxqTBc8N7u1X984SvCT6X
OcJcQSeu1osqNwU/H3MVTXV9sGe5qc6/ubKXuUMyf56otnl61p7kmMKcAo5H
PENr4mExfzsme5t4nPz/M4m5zC31raP382ww9yAGvMbcCc5XXBM/dEYw9+Id
4HU1RbOobYnwq8JnwNkKX4NrNVN/t+C2WdGeJN4kHmaPaA+Yub03MTf5HriX
19U2lLmtsqqwpkZb4+Hg5eBxdlff6dH/ez2V6eo/S/gv4hnxUbiRjj+ZeSE8
DP4lfErm58OjNT3anncwRHi9GvN3YhSxirhJ/CxKa/rT1LZIsJHK08LPB3NF
/id+0xjmuOrrqjyjvqeCuSnn4DeOJacz/uAgvFs0qv7fu8KHRnu6Q7M+6Cnc
NpiPw7fxAs+JvpdAvI7WMIdn/tA/WhOhjdA4/aI9CO6bc96C70ZrO2I++hQ+
gteIxw7/XCq8Q2kPvRF8QHiX0p4sfHu58E6lPXv4KRobrY0m6xvtMQ/L+gU9
gcY7IvNRYisafHTWFwdGa95BmZ/Df9DUcFI08x48a405Gxy1Y7SGHpjjRedo
/TI883f0Cp4A3gAew8BoTwBvAE+gT7TngPcwU3hQtIZGS+MpHBCtWdGuaOz9
hf+M5hp41OiBxuo/U/2zyUFoKeEzhN8TPkx4sMpHcBfd1+DgGM+c3qZ07B8S
rDkX6JgjhR+P5ppoEvj5Y9HaBM0CP39a+InCnB8+MEP4lcIaDC32XPTYYIyg
3fAADw72c9CTkzLfwtPD23s2Wp/DUeGqT0T7o3BeuO9T0doCTQS/nl8552yt
+19MbojmgnBOuOfVwgcV5ohwxUU6dkhhL2yg6rdE+3kdcr69LecPPEi8yCej
vx3fEP7fku+v8zqp7QtiL98/2C+eHeznHRSs7/GrngzOXcR0/JFncv5mzMGt
P4zmTlW+n6nR/l+fnD8ezvqDHEmufED4hsIaDn76UNYre+d8NCVaT/XO+fnB
aD3VK+dvvu/Zqs9R22fqa6L7P4tvwz0JbyQ8lm+Xv/+06FwIR4ArTM98BQ2H
lpscrX+65Xx7u/BFhT1QvNB7ov21TpkvPZL5IzmWXPuo8L2FOTXc+v7MN9GU
aMt7M39FM6Od7875tWPmU3dkfoJHiFd4Z+YneJZ4l3flfL175k/3Res3ND3a
vo2ed3xwfF5Gboj22vHcG2a+xFrOOqXXh1ifYj0MDgmXZP2Q9QDWJFibYI2F
9QPWB1h7geN8WTqnwX3IaeQ21tPItWi6NSp7+mg9/BaehWeCe+GJ9sv8CD9m
cdZTjHG0EOsV+G9wALgAnAh/+7zCXAkOO55jcr5gje6X0jmetTs0dJ3Ka0Bo
azyM2pXXXPA2WGNYVdo/YO2BNQT8BPwR9ByatW7lNRW0LHoK/YHnjf5izTJU
XmNkLZM1rpj5GGtfcDD4GXoFbsaa5OLSHJG1ytVrNKXX2Fi7we/ALxxX2D/B
48L/wE+BL6I5G1ReM0WL/pLsgTPnL07WqA0rr7mhXVlzalzZQ2AtCo6Pfj6q
MPdnvaBVZY2GVuN6g4L96Y+i14TRc3D6Wuo7LporkIPIRWjudSpzTrQ4nhhe
MxwWrwwNiv5Er6JN0SgbVtb8aBc8c7zzO5hT0fyYucCcgC+zRsBaAZ7bjpmv
MteZ83gpeML4d/hd8Fc8iPUreygITdbMmlTW1KylodE2qOxJoN3Q5OtV9rjQ
6vj/6OuRwv8Grxn+XXoNmLVE1kBZv2V9lrVR1lBZr4Vzwj2J1+jObplv4gkt
VLUHWi3Zr+xZWk//Fu1P0redypLoGE+sZw0fv31F5tdwz+uCPUx0YpN8vU91
TCPV11WZr3rrGnNaYu7PcHe17VV6zjP3Pydnlvas0BOsYbGWxTFBuIPKwYXX
NLdPvkfulTUv/L2jhLct7dkSX8mp5NYGpdd3eAaeBY8dPbMiej2DNdbmwn8J
7156TamF8Gjh3qU9GuLTsSq9SnMguBBrXqx90RaT9xSwt4BzUvIYZazyjnhX
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1ne8TgUYB/DXdctscMusuNlKUvaW6xIZ2RLKTMPIylZWJdHQ3mmShkID
DSszWZVRISlUlMpofJ/PPX/8Puf9fc9z3nHeszJ7D24/KC2VSj0jZ8jU9FTq
WbA3Vyp1ib4+dyo13oorLCfzHayXmeX6BV63tWwn081M4c+Y+d62la1bx8ey
h1hLr0uwpZb1zD7A9pgrz1aZGcsut+5Ovo31YONYNXYX2856sgnsSjaFfcVu
YPfIK/rP3q862xLvwx5jO1lZtpJdb9sdrKKMYGlmJssT+u7ku6w2dzd7mf3E
rmRfsvq2ncMOsKpso5lp8hzbxy5lG8w1NvcaO8my2Fa2TEp63dqyjUwz00O+
MldJRlqX23tNl+f1/batEp8Rv509znaxcrGv2MvsGKshU9hFek/v97VeWUax
dPa0/JD83viMQvF95We9ioxjRfQD8qfX4733BLnXez3Mdprppt9qXR79Wzno
9Zj4X+Uec0+x/eYqJPv03PgNcki/TMazonpBs+l+wwDbTZKz9Bf4YTNVZYK5
YnH8xPdJ9kv8jsJxPMqPyW+7g2XoJ5LvtYF1jf/M+z0W31G/WIZYV0B/VPbo
mTKY5dcfkd16aRnE8sU+lu/0MjKUFdTnyC69lNzG8upPyj69vAxn58TxI3v1
cjKMna2/KEf0y2UiK66/JWm+azM2h12mvym5WBZ7mFXR58ovejWZxErEOSTr
9LPlOvaXbV5hv+s1ZSorpb8mx/XaMp1l6vPllN5Q7mcV9Ab215P6Yf9JjeS4
n8dPsgYyk5XXX5U/9FoyjZXWu9t2e/Kfxz7IxV6So3p1mcwu1N+Q03ojmcUq
6u9IXp/Vij3FqutvS26WzR5hVfUF6XFSpFJN2UNeXqq/Hv+7Xl/uY+X0hnEM
6kf8jppsjW0W8nyW1/CnWQ29lrnCZgbxBVJbbyRzzRznjcxt4u+azW/ZOi3n
mlhTn2iuRpy37BvWmxVlpW3Xh0+VInH9k7pezzD3rbkB5obEHBvKVrA2bBgr
w4az1awda88+10tIf/aH9ZlsumXf5PpRWh8uZfUR5tawa207lGWy29nKuM6w
tmyVXlT6sKPWd2Br9ZIygB2PbdjFlsPYqrie27YdW60Xk77smPXXsjV6cenH
fmfLzVaxHMI+Y93j+In/xH6ZEdeR2Be2y5J3zOSWNuZ2x3WQrdSLSG/2G7ua
faAXkM7sB/aB9ytm2Z29wZrp78f+Z9ex+SxLH2Dbs1hP9iarzZZIEdaNzWNN
9WbmFurp0pbtsf4OVjmuaWwj62JuFKvExrANrDO7gf2qN06O5zgvb2Hnm+vP
lrAmbBArGdcntow1Z1exefpp+yabbbf+NlbC8ha+lGWby4jjiN0o58X1T/+Q
XxRmbiFrpX8kpVhv9i67Rm9t9lM9Q3qxI3EOsE/0wtKTHWY3xblg2Ye9xxrZ
dqmUi3XsQ9ZBH2muIhvN1rNObASrEPuMrWMd2WIpxDqyl1gDfbC5C+I3suWs
BRvIMuJ4ZotYQ7ZMyrOB7KPk/W42dx7rxxazxqwV+1gvJD3YobiPsJrx7MF2
sj7mxrCqsY5tZdez/qwg68EWsFrsQVmh55EOyfHXzdzW5Dp+O/sv/kNW3PLm
5PvF8XdfXJ/0o/7Leuwb62fGtZwdY/XZzjg+bbstuVfEfSFlZnOcH3F+m+ts
5kt9RlwrzfzG6lr3Ne9q2y2sbHI/+pd1YZuT+1vcy06zkbadHdd2rzPYonj2
MVcr7ol8F+trZjKrE+ck28P6s0lxf4xrms8tw1ZYP4stYieS55e98Qxi29px
v+e7Wb/4z5Pjs4nlVXENNHNv3C/MHEruKfHsMzuOVfYfa8kOsgfieEuLBzD/
q8VPcRzb/p+4PiTX3bhX3C/v6X/btin73twidm5cy/hcVl9vbtslej7pyPZZ
3zLOG72gdGEH4rhjZ8Z+ZK+yarbtxQ7qdSTb5+TS+0mBeF5MrjlxD/hYqrNR
yXEf94AW5t7X80sntj/OKfZvXFvkWVbJXFM2X//H+zdnO8w1Ya+zU6wZ2xb3
P7aY5U2Oydj3o9Nznvvi+S9LX6HXNTfTzGaWKXn00XKJ9eP4JvNdY9/JOaw9
e5HVi/MjPec5N553s61bqXe27RdpOc9I8Tx0Kq417C+9hXxuto7eUTam5TwP
xbNXPIN1YpvScp6l4hnpJJuYnvP8Gs+x7fW1+v/IV352
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s9Lk3EcwPHvdEszrSCjTsW6CFZWXnP0ByQdOrZD4E0PdQlpIKxfc9NB
IESFiFQ06RJo2/xxlDrGjNpmbvbDQ0F/Qcd6PXj4PK/3dzx7nmfPd8mx29dv
xUIIz01ZRH3H4RcrLHeGcFRv6A5TsT5tPa839ZBe0CkOJkJY1KP6rH6h0/qc
fqUn9GseiIeQ0Uu6Xxf0G31GP9MXucQrrPIaP7DF485bNV+sV3jJZDtCqFvf
Y4P32eQDbvMhv/IRd5hji9NsM89dFviNM/zOWf5gkT950+894X5rZs/6HYfN
uOf6bJ3me46ywhRLvMCnTDLPY7zLBMf513Vv8A+vss0R1nieH53X6T6n9LB3
ua7/6SqPcJkDpmkOWz9hw/TpOdZNr37MQyy5blH3RPuhC/qgfqlzujt6d/xk
unSWW9G+6SnWjMcIGcaj/fe9SY1w2eE3vbLwVm/6/GRs/7/1H8amTU0=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0DdOA1EYReEfJ5JEztmAjBFINpQsgxUgSoJNMIsgrYbtkDM05OSKb4qj
c+68mVdMfrW6XGmIiBWcpCMK2YgZnGUiSnyUijjVZb2Ac53iQi5iTb+gzW7H
hd5Pvne2rl/RYXfiUqd5g9/QpbuT+3FlZ3iT39GjS+7o5Ws7yxX+wJznfXY/
buwcV/kTA3oQt7qRlzDv/S97SA/jTjdx0fMt/Y0RexT3+oBnnW3rH4zZ43jQ
zbzDv5jQeRzj0W7hXf7DpC67Y4qf7FaucR2HyX90Ns3PdpH3eJH/ATHGKzo=

       "]], 
      Line3DBox[{948, 345, 1275, 339, 1581, 1227, 1217, 655, 949, 1218, 1422, 
       1142, 950, 1219, 1423, 1143, 951, 1413, 1424, 1144, 952, 1565, 1220, 
       1145, 953, 1566, 1221, 1146, 954, 1222, 1339, 1567, 955, 1223, 658, 
       956, 1224, 1425, 1147, 957, 1225, 1426, 1148, 958, 1414, 1427, 1149, 
       959, 1415, 1428, 1150, 960, 1568, 1226, 1151, 1228}], 
      Line3DBox[{961, 1321, 1229, 1276, 1292, 1293, 1582, 1259, 1230, 1340, 
       1569, 962, 662, 963, 1429, 1152, 964, 1430, 1153, 965, 1431, 1154, 966,
        1432, 1155, 967, 1341, 1494, 968, 1342, 1495, 969, 669, 970, 1433, 
       1156, 971, 1434, 1157, 972, 1435, 1158, 973, 1436, 1159, 974}], 
      Line3DBox[{412, 262, 872, 298, 263, 1570, 975, 1343, 1496, 976, 677, 
       977, 1437, 1160, 978, 1438, 1161, 979, 1439, 1162, 980, 1344, 1497, 
       981, 1345, 1498, 982, 1346, 1499, 983, 1347, 1500, 984, 1440, 1163, 
       985, 1441, 1164, 986, 1442, 1165, 987}], 
      Line3DBox[{1001, 1169, 1446, 1000, 1168, 1445, 999, 1507, 1354, 998, 
       1506, 1353, 997, 1505, 1352, 996, 1504, 1351, 995, 1503, 1350, 994, 
       1167, 1444, 993, 1166, 1443, 992, 692, 991, 1502, 1349, 990, 1501, 
       1348, 989, 1571, 1234, 1233, 988, 913, 1232, 1277, 1231, 1331, 1322}], 
      Line3DBox[{1015, 1171, 1448, 1014, 1516, 1363, 1013, 1515, 1362, 1012, 
       1514, 1361, 1011, 1513, 1360, 1010, 1512, 1359, 1009, 1511, 1358, 1008,
        1170, 1447, 1007, 707, 1006, 1510, 1357, 1005, 1509, 1356, 1004, 1508,
        1355, 1003, 855, 1235, 1002, 1578, 362, 1278, 445, 1323}], 
      Line3DBox[{106, 324, 541, 107, 542, 108, 543, 109, 544, 110, 545, 111, 
       546, 112, 547, 113, 548, 114, 549, 115, 550, 116, 551, 117, 552, 118, 
       553, 119, 554, 120}], 
      Line3DBox[{1029, 1528, 1374, 1028, 1527, 1373, 1027, 1526, 1372, 1026, 
       1525, 1371, 1025, 1524, 1370, 1024, 1523, 1369, 1023, 1522, 1368, 1022,
        722, 1021, 1521, 1367, 1020, 1520, 1366, 1019, 1519, 1365, 1018, 1518,
        1364, 1017, 1416, 1517, 1236, 1016, 916, 1317, 1279, 1333, 1332, 
       1324}], Line3DBox[{1030, 1325, 1326, 1280, 730, 1260, 1237, 1449, 1172,
        1031, 1450, 1173, 1032, 1451, 1174, 1033, 1452, 1175, 1034, 1453, 
       1176, 1035, 1454, 1177, 1036, 737, 1037, 1455, 1178, 1038, 1456, 1179, 
       1039, 1457, 1180, 1040, 1458, 1181, 1041, 1459, 1182, 1042, 1460, 1183,
        1043}], 
      Line3DBox[{1044, 423, 1281, 1375, 1572, 1261, 1238, 745, 1045, 1461, 
       1184, 1046, 1462, 1185, 1047, 1463, 1186, 1048, 1464, 1187, 1049, 1465,
        1188, 1050, 1376, 1529, 1051, 752, 1052, 1466, 1189, 1053, 1467, 1190,
        1054, 1468, 1191, 1055, 1469, 1192, 1056, 1470, 1193, 1057}], 
      Line3DBox[{1058, 1239, 1334, 1335, 1336, 1586, 1262, 1240, 1337, 1377, 
       1573, 1059, 760, 1060, 1471, 1194, 1061, 1472, 1195, 1062, 1473, 1196, 
       1063, 1474, 1197, 1064, 1378, 1530, 1065, 1379, 1531, 1066, 767, 1067, 
       1475, 1198, 1068, 1476, 1199, 1069, 1477, 1200, 1070, 1478, 1201, 
       1071}], Line3DBox[{1072, 447, 944, 455, 454, 1587, 1073, 1380, 1532, 
       1074, 775, 1075, 1479, 1202, 1076, 1480, 1203, 1077, 1481, 1204, 1078, 
       1381, 1533, 1079, 1382, 1534, 1080, 1383, 1535, 1081, 782, 1082, 1482, 
       1205, 1083, 1483, 1206, 1084, 1484, 1207, 1085}], 
      Line3DBox[{1087, 1384, 1536, 1086, 1385, 1537, 1088, 1386, 1538, 1089, 
       1387, 1539, 1090, 1485, 1208, 1091, 1486, 1209, 1092, 1487, 1210, 1093,
        1388, 1540, 1094, 1389, 1541, 1095, 1390, 1542, 1096, 1391, 1543, 
       1097, 797, 1098, 1488, 1211, 1099, 1489, 1212, 1100}], 
      Line3DBox[{1102, 1392, 1544, 1101, 1393, 1545, 1103, 1394, 1546, 1104, 
       1395, 1547, 1105, 1396, 1548, 1106, 1490, 1213, 1107, 1491, 1214, 1108,
        1397, 1549, 1109, 1398, 1550, 1110, 1399, 1551, 1111, 1400, 1552, 
       1112, 1401, 1553, 1113, 812, 1114, 1492, 1215, 1115}], 
      Line3DBox[{1129, 1243, 861, 1128, 1564, 1412, 1127, 1563, 1411, 1126, 
       1562, 1410, 1125, 1561, 1409, 1124, 1560, 1408, 1123, 1559, 1407, 1122,
        1216, 1493, 1121, 1558, 1406, 1120, 1557, 1405, 1119, 1556, 1404, 
       1118, 1555, 1403, 1117, 1554, 1402, 1116, 860, 1241, 1242}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{377, 234, 1248, 285, 235, 1423, 474, 663, 1429, 488, 677, 
       502, 1502, 691, 516, 1509, 705, 530, 1519, 719, 544, 733, 1451, 558, 
       747, 1462, 572, 761, 1471, 586, 775, 600, 1539, 789, 614, 1547, 803, 
       628, 1556, 817, 642}], 
      Line3DBox[{462, 926, 831, 881, 832, 1420, 900, 865, 833, 834, 1424, 475,
        664, 1430, 489, 678, 1437, 503, 692, 517, 1510, 706, 531, 1520, 720, 
       545, 734, 1452, 559, 748, 1463, 573, 762, 1472, 587, 776, 1479, 601, 
       790, 1485, 615, 1548, 804, 629, 1557, 818, 643}], 
      Line3DBox[{463, 384, 882, 349, 1583, 866, 835, 1565, 836, 476, 665, 
       1431, 490, 679, 1438, 504, 693, 1443, 518, 707, 532, 1521, 721, 546, 
       735, 1453, 560, 749, 1464, 574, 763, 1473, 588, 777, 1480, 602, 791, 
       1486, 616, 805, 1490, 630, 1558, 819, 644}], 
      Line3DBox[{464, 927, 928, 883, 902, 1579, 901, 867, 837, 1566, 838, 477,
        666, 1432, 491, 680, 1439, 505, 694, 1444, 519, 708, 1447, 533, 722, 
       547, 736, 1454, 561, 750, 1465, 575, 764, 1474, 589, 778, 1481, 603, 
       792, 1487, 617, 806, 1491, 631, 820, 1493, 645}], 
      Line3DBox[{8, 312, 1268, 23, 954, 38, 967, 53, 980, 68, 994, 83, 1008, 
       98, 1022, 113, 1036, 128, 1050, 143, 1064, 158, 1078, 173, 1093, 188, 
       1108, 203, 1122, 218}], 
      Line3DBox[{398, 248, 1255, 292, 249, 1426, 481, 670, 1433, 495, 1500, 
       684, 509, 1506, 698, 523, 1514, 712, 537, 1525, 726, 551, 740, 1457, 
       565, 754, 1467, 579, 768, 1475, 593, 782, 607, 1543, 796, 621, 1552, 
       810, 635, 1562, 824, 649}], 
      Line3DBox[{468, 935, 843, 887, 844, 1421, 903, 868, 845, 846, 1427, 482,
        671, 1434, 496, 685, 1440, 510, 1507, 699, 524, 1515, 713, 538, 1526, 
       727, 552, 741, 1458, 566, 755, 1468, 580, 769, 1476, 594, 783, 1482, 
       608, 797, 622, 1553, 811, 636, 1563, 825, 650}], 
      Line3DBox[{469, 405, 888, 356, 1584, 869, 847, 848, 1428, 483, 672, 
       1435, 497, 686, 1441, 511, 700, 1445, 525, 1516, 714, 539, 1527, 728, 
       553, 742, 1459, 567, 756, 1469, 581, 770, 1477, 595, 784, 1483, 609, 
       798, 1488, 623, 812, 637, 1564, 826, 651}], 
      Line3DBox[{470, 904, 905, 889, 907, 906, 1585, 870, 849, 1568, 850, 484,
        673, 1436, 498, 687, 1442, 512, 701, 1446, 526, 715, 1448, 540, 1528, 
       729, 554, 743, 1460, 568, 757, 1470, 582, 771, 1478, 596, 785, 1484, 
       610, 799, 1489, 624, 813, 1492, 638, 861, 862, 863}], 
      Line3DBox[CompressedData["
1:eJwVz7tKAmAYBuDPimgL2gUFp8KGNq/AqUVpcwgdKk/RFVi2euigdtqaKjOs
C+gGbA/ag/bAuafh4X+/7+X/4U+XDwvNRERs01qI2FyMKHEkp5wryxEVeU0O
eUdekqe88Urebs6W/sXc5I5bcvY/ZHQN8w3XbNh9UZevGJE0f1CThwxYNb9z
Kle5ZN1bF86E/ZS2fMA5Z/z60L39ibxPnx7f9oP/P7p/bN6jS4dPXU+X1bXM
RZ4ZM9N1dE/yLo88MOEP2hooRA==
       "]], 
      Line3DBox[{640, 815, 1554, 626, 801, 1545, 612, 787, 1537, 598, 773, 
       1587, 943, 584, 759, 1573, 859, 570, 745, 858, 556, 1449, 731, 857, 
       542, 717, 856, 1517, 528, 703, 855, 514, 689, 1571, 854, 500, 675, 
       1570, 853, 486, 661, 1569, 852, 472, 655, 828, 460, 1574, 327, 879, 
       344, 827}], 
      Line3DBox[{641, 816, 1555, 627, 802, 1546, 613, 788, 1538, 599, 774, 
       1532, 585, 760, 571, 1461, 746, 557, 1450, 732, 543, 718, 1518, 529, 
       704, 1508, 515, 690, 1501, 501, 676, 1496, 487, 662, 473, 1422, 656, 
       830, 461, 1575, 891, 890, 880, 829, 925, 924}], 
      Line3DBox[{646, 821, 1559, 632, 807, 1549, 618, 793, 1540, 604, 779, 
       1533, 590, 765, 1530, 576, 751, 1529, 562, 737, 548, 723, 1522, 534, 
       709, 1511, 520, 695, 1503, 506, 681, 1497, 492, 667, 1494, 478, 657, 
       1567, 839, 465, 653, 1580, 892, 884, 931, 930, 929}], 
      Line3DBox[{647, 822, 1560, 633, 808, 1550, 619, 794, 1541, 605, 780, 
       1534, 591, 766, 1531, 577, 752, 563, 1455, 738, 549, 724, 1523, 535, 
       710, 1512, 521, 696, 1504, 507, 682, 1498, 493, 668, 1495, 479, 658, 
       840, 466, 1576, 334, 885, 394, 932}], 
      Line3DBox[{648, 823, 1561, 634, 809, 1551, 620, 795, 1542, 606, 781, 
       1535, 592, 767, 578, 1466, 753, 564, 1456, 739, 550, 725, 1524, 536, 
       711, 1513, 522, 697, 1505, 508, 683, 1499, 494, 669, 480, 1425, 659, 
       842, 467, 1577, 894, 893, 886, 841, 934, 933}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{656.1243631294451, 356.6666666666667},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 0.99}, {0, 0.99}, {0., 0.999999927835147}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.25459754671045653`, -3.3497055884141385`, 0.4057740259751273},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6784630044516354`*^9, {3.6784634114669313`*^9, 3.6784634156977067`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["kRat", "RRat"]}], ")"}], "/.", 
         RowBox[{"kRat", "\[Rule]", "0.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"RRat", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"1", "-", 
           SuperscriptBox["2", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"100", "+", "1"}], ")"}]}]], "-", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "0"}], 
             RowBox[{"100", "-", "1"}]], 
            FractionBox[
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}], "/.", 
          RowBox[{"eRRat", "\[Rule]", 
           RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
         RowBox[{"kRat", "\[Rule]", "0.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"kRat", ",", "0.01", ",", "0.99"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6822568258992743`*^9, 3.682256848488701*^9}, {
   3.6822569138616133`*^9, 3.682257013123791*^9}, {3.6822570509853964`*^9, 
   3.682257095280753*^9}, 3.682257190659058*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kRat$$ = 0.026000000000000002`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`kRat$$], 0.01, 0.99}}, Typeset`size$$ = {
    324., {105., 110.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`kRat$87513$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`kRat$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`kRat$$, $CellContext`kRat$87513$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[
         ReplaceAll[
         1 - $CellContext`kRat$$^$CellContext`RRat, $CellContext`kRat$$ -> 
          0.1], {$CellContext`RRat, 0, 1}, PlotRange -> {Automatic, {0, 1}}, 
         PlotStyle -> Red], 
        Plot[
         ReplaceAll[
          ReplaceAll[
          1 - 2^(-(100 + 1)) - Sum[
           2^(-1 - $CellContext`j) ($CellContext`kRat$$/(
             E^($CellContext`eRRat $CellContext`j) + $CellContext`kRat$$)), \
{$CellContext`j, 0, 100 - 1}], $CellContext`eRRat -> 
           Log[$CellContext`RRat]], $CellContext`kRat$$ -> 
          0.1], {$CellContext`RRat, 0.01, 0.99}]], 
      "Specifications" :> {{$CellContext`kRat$$, 0.01, 0.99}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{367., {145., 151.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6822569320352592`*^9, 3.6822570138014545`*^9}, {
   3.6822570543983245`*^9, 3.6822570961215305`*^9}, 3.6822571940648313`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Itteration vs Continuous solution", "Subsubsection",
 CellChangeTimes->{{3.67846247167937*^9, 3.6784624789317427`*^9}, {
  3.6817156482133956`*^9, 3.6817156585842285`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "solvemeN", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solvemeN", "[", 
   RowBox[{"kRes_", ",", "rRes_", ",", "kInv_", ",", "rInv_"}], "]"}], ":=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"fracRes", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", 
            RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", 
            RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
         FractionBox[
          RowBox[{"kInv", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"t", "*", "rInv"}], "]"}]}], 
          RowBox[{
           RowBox[{"kInv", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
           RowBox[{"kRes", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"fracRes", "[", "t", "]"}], ")"}], "*", 
         FractionBox[
          RowBox[{"kRes", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"t", "*", "rRes"}], "]"}]}], 
          RowBox[{
           RowBox[{"kInv", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
           RowBox[{"kRes", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "-", 
        RowBox[{"fracRes", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"fracInv", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", 
            RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", "2"}], "*", 
            RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
         FractionBox[
          RowBox[{"kRes", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"t", "*", "rRes"}], "]"}]}], 
          RowBox[{
           RowBox[{"kInv", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
           RowBox[{"kRes", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"fracInv", "[", "t", "]"}], ")"}], "*", 
         FractionBox[
          RowBox[{"kInv", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"t", "*", "rInv"}], "]"}]}], 
          RowBox[{
           RowBox[{"kInv", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
           RowBox[{"kRes", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "-", 
        RowBox[{"fracInv", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fracRes", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fracInv", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fracRes", "[", "t", "]"}], ",", 
      RowBox[{"fracInv", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rRes", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"0.1", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"rInv", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"1.0", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"kRes", "\[Rule]", "10"}], ",", 
     RowBox[{"kInv", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6739108548550086`*^9, {3.673911412974347*^9, 3.6739114133178177`*^9}, 
   3.6739114999313264`*^9, {3.673913237746742*^9, 3.673913238051615*^9}, {
   3.673913364520508*^9, 3.6739133774055033`*^9}, {3.673913615479998*^9, 
   3.6739138262141943`*^9}, {3.6739139076433053`*^9, 3.673913956981781*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"simulatefrac", "[", 
      RowBox[{"0", ",", 
       RowBox[{"rRes", "/.", "param"}], ",", 
       RowBox[{"rInv", "/.", "param"}], ",", 
       RowBox[{"kRes", "/.", "param"}], ",", 
       RowBox[{"kInv", "/.", "param"}]}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"fracRes", "[", "t", "]"}], "/.", 
         RowBox[{
          RowBox[{"solvemeN", "[", 
           RowBox[{
            RowBox[{"kRes", "/.", "param"}], ",", 
            RowBox[{"rRes", "/.", "param"}], ",", 
            RowBox[{"kInv", "/.", "param"}], ",", 
            RowBox[{"rInv", "/.", "param"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "50"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"fracInv", "[", "t", "]"}], "/.", 
         RowBox[{
          RowBox[{"solvemeN", "[", 
           RowBox[{
            RowBox[{"kRes", "/.", "param"}], ",", 
            RowBox[{"rRes", "/.", "param"}], ",", 
            RowBox[{"kInv", "/.", "param"}], ",", 
            RowBox[{"rInv", "/.", "param"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "50"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"simulatefrac", "[", 
             RowBox[{"t", ",", 
              RowBox[{"rRes", "/.", "param"}], ",", 
              RowBox[{"rInv", "/.", "param"}], ",", 
              RowBox[{"kRes", "/.", "param"}], ",", 
              RowBox[{"kInv", "/.", "param"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "50"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"simulatefrac", "[", 
             RowBox[{"t", ",", 
              RowBox[{"rRes", "/.", "param"}], ",", 
              RowBox[{"rInv", "/.", "param"}], ",", 
              RowBox[{"kRes", "/.", "param"}], ",", 
              RowBox[{"kInv", "/.", "param"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", "Green"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "50"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6739109309779005`*^9, 3.6739109347984533`*^9}, {
   3.6739113687567368`*^9, 3.673911378680873*^9}, {3.6739114286004725`*^9, 
   3.6739114339546366`*^9}, 3.673912901707041*^9, {3.6739129359570813`*^9, 
   3.673913006393673*^9}, {3.6739130671257715`*^9, 3.673913147505633*^9}, {
   3.6739133013951797`*^9, 3.67391332356483*^9}, {3.6739138963818865`*^9, 
   3.673913949916321*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
6uamObCF/d//AxJ+Sus=
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
YG0hcMZXAszOOAwSDjPnGH6ULAHftj9+S3jI8EHdt1IJaN73coiwpc6hi8t7
JPD/gYcfCSuvHtgeS5eESq8HI4TZGcakjw6ScFq6aZzwAFd5udkVSRjgmJsk
XDEt41E8JAnHautnCCcOnZEUWS0Fi6a6c4Tde2baQvykYI+p869/96Osfb3e
jBTsVItdINycfDObfHwZsGsfJ8US903x+jdKF2Rg91dFMuH+g/vSbtiugLL9
M/96M3rjqGwlC1XnFDkJ59FdlEos5EDSSeNf1zisX27jJA/t3uv/dX8eL53l
qwCIofWvc4toG7K8FSFd/z/vfyC/V8NzJWib/OdoyWbzdlclqDT/zzkRvuBj
twq/D/5ziImHm7LHakj9bQtxt7jPwcpQ8NuthRnt2YfXQPFvm0MTY4evCpT+
drzBrlS5Y2uXXGf4gvtHkiqU/fbEjEBn9271JauIu2/J2a6xZNk80eEEh3VL
fvx9rsTLVnPJYqXat3y81y/5SQNf0OFQraXnSebSPDwDtZes8iHsdEzMhqX5
H6ZEulOiNy55xnbLeN7RTUtuWNWq231KZ2m9Vv3Zkh+xukve//TqLpS5eclf
pHf+nXBVb8kMtP5AU7b+ktlaD6kp3UFLbk4NoOpZw5JrPhyZ9uj84+TDSuPy
ew2WXP56MupF7x9XxfkorHAyhJLfFhRadHJ9abh0HqkGg2xydkZLHi/0rAl+
YwR3fzt/Voi/3nkLFP3//SJdD+d+/OPJAhZi+W1dMrmm6vqer388ySElg4K2
/Vmvnq0iN/HH17k8bpz0N17ymMjg+sjpP07hCLD1CTKBO78t0z9+q/LBHxeX
Hv6xuGgChb/9Pwl9DqE=
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], Dashing[{0, Small}], PointBox[CompressedData["
1:eJxVyU8og3EYwPE3ZdbKes3yJweWGC0z5u+M9zFsO7EcxMVBXKRXysVF0iht
B/9GragtNw7aSQ6k3JSiZLTD8q819lo7jJLl93t73/f389TT0+f5GiZmh6fy
GIaxosWXORufmY5enDPipLklT2Lyde2d85tPE2GfwEHdfCRz+Ss5yVXpbWML
TypIhn3o8yZZC6Gfg4+r1AvHavaO7HPFYAmWTxUKz5JLYWMxfsjysivAeH1z
x5plV8LXUfKe1T5z6pXBkf0TAyS9+VE29yS5GpZjqiiblV0DxynkjGwj+AXk
tOx62MX+lG2CHeR1QXaDaI/iRtEWZK/DaBqKWURXKW4SXaa4GQLIesVWsesU
t4i9SHEr9ihxG3YZcTv2N6u4AztB3IkdJ7Zhx4i7sB+J7dgPxN3Iq1HiHmQn
ZQ62hVrRjtBWwMgDcgmxgK2lei+yhurYaqo7kAuojsxT5vtg20x3ZC3d+2Er
p6I6cpYyPwCbGbojp+nuhM1PujtBR5t3wa1AdxdEaPNuCP/rbghK/gPRtH/M

       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], Dashing[{0, Small}], PointBox[CompressedData["
1:eJxtyb1LQnEUxvGDoLgEDoEGDhlSIiKmmWUv96m8lWt7i+Dc0hwXadPJl4Km
kLYamv0XhMAhdDAIp7ioOAYtGni99/fggcPhc76hws1V0SUiqdn+3+Uz0QLX
tx3d/6XNH6jEWz/N8mBuL8xmefax7MPz38uwPbK8isTTWnFlbDmA6t33q2/h
ILY+Op+21/H7ZnZtb8C8d/dsh1HqexzexPvI6QgqY6ejeFQcI8fJCfI2OUlO
4UHxDjmNhuJdcoa8R94nZ8kH5EPyEfmYrJGButMGWU6ok+WUOlnOqJMlRz2H
mtJ11YaOqtLPVRtkuaBOlkvqZMkvPAWRQQAD
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{18., 7.}, {17., 6.5}},
  ImageSize->{383.63636363636385`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 50.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.6748591194297605`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rRes", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"0.9", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"rInv", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"1.0", "*", "1.01"}], "]"}]}], ",", 
     RowBox[{"kRes", "\[Rule]", "10"}], ",", 
     RowBox[{"kInv", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673913979751505*^9, 3.673913982100599*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulatefrac", "[", 
    RowBox[{"0", ",", 
     RowBox[{"rRes", "/.", "param"}], ",", 
     RowBox[{"rInv", "/.", "param"}], ",", 
     RowBox[{"kRes", "/.", "param"}], ",", 
     RowBox[{"kInv", "/.", "param"}]}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"fracRes", "[", "t", "]"}], "/.", 
       RowBox[{
        RowBox[{"solvemeN", "[", 
         RowBox[{
          RowBox[{"kRes", "/.", "param"}], ",", 
          RowBox[{"rRes", "/.", "param"}], ",", 
          RowBox[{"kInv", "/.", "param"}], ",", 
          RowBox[{"rInv", "/.", "param"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"fracInv", "[", "t", "]"}], "/.", 
       RowBox[{
        RowBox[{"solvemeN", "[", 
         RowBox[{
          RowBox[{"kRes", "/.", "param"}], ",", 
          RowBox[{"rRes", "/.", "param"}], ",", 
          RowBox[{"kInv", "/.", "param"}], ",", 
          RowBox[{"rInv", "/.", "param"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{"simulatefrac", "[", 
           RowBox[{"t", ",", 
            RowBox[{"rRes", "/.", "param"}], ",", 
            RowBox[{"rInv", "/.", "param"}], ",", 
            RowBox[{"kRes", "/.", "param"}], ",", 
            RowBox[{"kInv", "/.", "param"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dotted", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{"simulatefrac", "[", 
           RowBox[{"t", ",", 
            RowBox[{"rRes", "/.", "param"}], ",", 
            RowBox[{"rInv", "/.", "param"}], ",", 
            RowBox[{"kRes", "/.", "param"}], ",", 
            RowBox[{"kInv", "/.", "param"}]}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dotted", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
NUy2/FfP/wE3PlC5
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
z7mvfP9sbJiD3v/z+x/Y6ag4
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], Dashing[{0, Small}], PointBox[CompressedData["
1:eJxVyU1I03Ecx/EZIQYeNpsQJjHDLZUh1uZD6txn7lGCzC6BIC0hbSgoiqUz
4p960G1KEB3tINvFwdiow3zADj4RbJKGCiEVpeRBN28Ozahgv9/v6xe+fHjx
Lmjtuv/4gkwm0/37/3v+joxsfaWz+1PeRNoyfHh0eHVr4TDtLES/PL/ceJdZ
Due92iqfnFmJ0IntTThxkPYVOP/MHGt2mPOhOhiyXNxgViFlmIkMxpivY+RF
j/fZR+ZCZEQCDz+vMmswqdhWJ1eYi/DqWk9HL3cJlsIRdxm3Fpfmcx5kc5di
1Pn2W2qZuQyuoMeV4L6J2MLX+D73LXQbtGt73Dq0Ns3qd7n1iOmTzT+5y2HJ
bfv1g7sC0qltWrgSeaosj3AVopWKAeHbCLwv6Rauhnx8qEO4BnfcSpdwLb7P
fWoXNmAzVERch8zgepuwEeGonxj4PTEuLAFHgZekm9A5Nki6CXjST3o9Ftee
kl6PzbM+0s1wvSaWzHC00G5B3ES7BTs62q2Ia2m3oqaYdhs6b9Buw7CGdjuy
qSU7NtS0O/COWnLAf643YDLtvyUQBgM=
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], Dashing[{0, Small}], PointBox[CompressedData["
1:eJxtyWkow3Ecx/F/ong2TJarzZWW5Jjb7GO2YQ9cT0Rkji1CGFJIa3mCkUie
yCMekbZSNkQ5ntkiZ3KXJNeekSvU//hNvvXt2+v7FlU3F2vdKIpK+Nnf+/84
ZYKK9l2l/5mMfmCt6jHwcPWGticWT3p8C/LvaPOgKcxIMfHuafMx/6YaNz8x
FqDqy/YSWf5AOwiiB6PCfZSxEK9Sm6V7jnEo+nr1g502xuGgLDOVe2uMIzHp
fRTxvM44CiMh+oa2TcZibJotXbFbjKPhteJTYmIdg37N1IWVdSzqZwfqHazj
sL16bj9mHY8WabTjjHUCqouWJJesJdiWPJddsU6Ewk93yzkJhneV+Jp1MgKE
nmrOKbAme5dyTsX0gljDOQ28IWMN53Sou/hazhm4WN4hLMX+fJSOcyY8ZosI
y2C21hIGPoabOBsA50wr0bPQ2N9G9Cygrp3ocmw4CBvkOPgkezbqfDuIno3c
YMKUAnYR2RU4DSO7EvZwsiuRFkF2FRpJG1QwuvQcDLn0HIy59FyMu/Q/pvIw
QfsbXOn/PA==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{310.7272727272729, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 50}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.673913983866742*^9}]
}, Open  ]],

Cell["\<\
Conclusions: when viability resident (VRES) is low, analytical deviates a lot \
from numerical prediction. When VRES is high (0.9), analytical is similar to \
numerical prediction.\
\>", "Text",
 CellChangeTimes->{{3.6739135407396083`*^9, 3.673913607557417*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discrete time solution", "Subsection",
 CellChangeTimes->{{3.678462387502345*^9, 3.6784624040700893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subme", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ave", "[", "t", "]"}], "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"fracInv", "[", "t", "]"}], "+", 
           RowBox[{"fracRes", "[", "t", "]"}]}], "2"]}], ",", 
        RowBox[{
         RowBox[{"dif", "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"fracRes", "[", "t", "]"}], "-", 
          RowBox[{"fracInv", "[", "t", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fracInv", "[", "t", "]"}], ",", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fracResprime", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{"kInv", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rInv"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"fracRes", "[", "t", "]"}], ")"}], "*", 
     FractionBox[
      RowBox[{"kRes", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rRes"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracInvprime", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracRes", "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"fracInv", "[", "t", "]"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{"kRes", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rRes"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"fracInv", "[", "t", "]"}], ")"}], "*", 
     FractionBox[
      RowBox[{"kInv", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "*", "rInv"}], "]"}]}], 
      RowBox[{
       RowBox[{"kInv", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rInv"}], "]"}]}], "+", 
       RowBox[{"kRes", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"t", "*", "rRes"}], "]"}]}]}]]}]}]}], ";"}], "\n", 
 RowBox[{"difprime", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"fracResprime", "-", "fracInvprime"}], "/.", "subme"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"aveprime", " ", "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"fracResprime", "+", "fracInvprime"}], "2"], "/.", "subme"}], "//",
    "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.6784636431693897`*^9, 3.6784636436185856`*^9}, {
  3.6850039813541193`*^9, 3.6850040240013227`*^9}, {3.6850040569592524`*^9, 
  3.685004057630856*^9}, {3.6850041388750896`*^9, 3.6850041677836504`*^9}, {
  3.685004209677298*^9, 3.6850042191168222`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"dif", "[", "t", "]"}], "2"]], "Output",
 CellChangeTimes->{{3.678463622997257*^9, 3.6784636441907125`*^9}, 
   3.6785479276953707`*^9, 3.6813110196773663`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ave", "[", "t", "]"}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"rInv", " ", "t"}]], " ", "kInv"}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"rInv", " ", "t"}]], " ", "kInv"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"rRes", " ", "t"}]], " ", "kRes"}]}]]}], ")"}], " ", 
   RowBox[{"dif", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.678463622997257*^9, 3.6784636441907125`*^9}, 
   3.6785479276953707`*^9, 3.681311020264818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"dif", "[", 
        RowBox[{"t", "+", "1"}], "]"}], "==", 
       FractionBox[
        RowBox[{"dif", "[", "t", "]"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"dif", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"dif", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"dif", "[", "t", "]"}], "\[Rule]", 
    SuperscriptBox["2", 
     RowBox[{"-", "t"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6784637125874467`*^9, 3.6785479282316723`*^9, 
  3.681311020379904*^9, 3.681313530281142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"PowerExpand", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"aveprime", "/.", " ", 
          RowBox[{
           RowBox[{"dif", "[", "t", "]"}], "->", 
           SuperscriptBox["2", 
            RowBox[{"-", "t"}]]}]}], "/.", 
         RowBox[{"kInv", "\[Rule]", 
          RowBox[{"kRes", "*", "kRat"}]}]}], "/.", 
        RowBox[{"rRes", "\[Rule]", 
         RowBox[{"Log", "[", "RRes", "]"}]}]}], "/.", 
       RowBox[{"rInv", "\[Rule]", 
        RowBox[{"Log", "[", "RInv", "]"}]}]}], "/.", 
      RowBox[{"RRes", "\[Rule]", 
       RowBox[{"RInv", "*", "RRat"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RRat", ">", "0"}], ",", 
      RowBox[{"kRat", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.678463909903143*^9, 3.6784639228763247`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "2"}], "-", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "kRat"}], "+", 
     SuperscriptBox["RRat", "t"], "+", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"2", "+", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{"kRat", "+", 
        SuperscriptBox["RRat", "t"]}], ")"}], " ", 
      RowBox[{"ave", "[", "t", "]"}]}]}], ")"}]}], 
  RowBox[{"kRat", "+", 
   SuperscriptBox["RRat", "t"]}]]], "Output",
 CellChangeTimes->{
  3.678463722410668*^9, {3.678463913840369*^9, 3.6784639232537727`*^9}, 
   3.6784641044895067`*^9, 3.6785479284347067`*^9, 3.681311020635605*^9}]
}, Open  ]],

Cell["\<\

This has a somewhat simpler form if we right RRat as an exponential function \
RRat = Exp[eRRat] :\
\>", "Text",
 CellChangeTimes->{3.6784637425393133`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"RRat", "\[Rule]", 
     RowBox[{"Exp", "[", "eRRat", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eRRat", ">", "0"}], ",", 
     RowBox[{"kRat", ">", "0"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "+", "t"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"3", "+", "t"}]], " ", "kRat"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", "t"}]], "-", "kRat"}]]}]], "+", 
  RowBox[{"ave", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{{3.678464097428385*^9, 3.6784641059559374`*^9}, 
   3.678547928913884*^9, 3.6813110215543213`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"PowerExpand", "[", 
     RowBox[{"RSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ave", "[", 
           RowBox[{"t", "+", "1"}], "]"}], "==", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["2", 
              RowBox[{"2", "+", "t"}]], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"3", "+", "t"}]], " ", "kRat"}], 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"eRRat", " ", "t"}]], "-", "kRat"}]]}]], "+", 
           RowBox[{"ave", "[", "t", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"ave", "[", "0", "]"}], "\[Equal]", 
          RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
       RowBox[{"ave", "[", "t", "]"}], ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RRat", ">", "0"}], ",", 
      RowBox[{"kRat", ">", "0"}]}], "}"}]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"K", "[", "1", "]"}], "\[Rule]", "j"}]}]], "Input",
 CellChangeTimes->{3.6785471465803013`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6785479478109393`*^9, 3.681311038881912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ave", "[", "t", "]"}], "==", 
      RowBox[{
       FractionBox["1", "2"], "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "0"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "j"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"eRRat", " ", "j"}]], "-", "kRat"}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}]}], ",", 
     RowBox[{
      RowBox[{"dif", "[", "t", "]"}], "==", 
      SuperscriptBox["2", 
       RowBox[{"-", "t"}]]}], ",", 
     RowBox[{
      RowBox[{"ave", "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        RowBox[{"FI", "[", "t", "]"}], "+", 
        RowBox[{"FR", "[", "t", "]"}]}], "2"]}], ",", 
     RowBox[{
      RowBox[{"dif", "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"FI", "[", "t", "]"}], "-", 
       RowBox[{"FR", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"FI", "[", "t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6784642659302287`*^9, 3.6792261459047737`*^9, {3.680523308506302*^9, 
   3.680523415224657*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6805233132152557`*^9, {3.680523404557095*^9, 3.6805234122175627`*^9}, 
   3.6805234511020107`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "The", " ", "term", " ", "in", " ", "the", " ", "sum", " ", "can", " ", 
   "be", " ", "simplified", " ", "as", " ", 
   RowBox[{"follows", ":", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "2"}], "-", "j"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", "j"}]], "-", "kRat"}], ")"}]}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}], " ", "=", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "2"}], "-", "j"}]], "-", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], " ", "This", " ", 
    "allows", " ", "us", " ", "to", " ", "simplify", " ", "the", " ", 
    "average", " ", 
    RowBox[{"as", ":", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], 
        RowBox[{"t", "-", "1"}]], 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "j"}]]}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], 
        RowBox[{"t", "-", "1"}]], 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], "1"}]}], "-", 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"t", "+", "1"}], ")"}]}]], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], 
        RowBox[{"t", "-", "1"}]], 
       FractionBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"eRRat", " ", "j"}]], "+", 
         "kRat"}]]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "The", " ", "term", " ", "summed", " ", "shows", " ", "substantial", " ", 
   "change", " ", "from", " ", "generation", " ", "to", " ", "generation"}], 
  ",", 
  RowBox[{"but", " ", "rapidly", " ", "declines", " ", "in", " ", 
   RowBox[{"value", ":"}]}]}]}], "Text",
 CellChangeTimes->{{3.67846420306328*^9, 3.678464219483575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], "/.", 
        RowBox[{"eRRat", "\[Rule]", 
         RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
       RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
      RowBox[{"RRat", "\[Rule]", "0.1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.15"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Gray"}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], "/.", 
            RowBox[{"eRRat", "\[Rule]", 
             RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
           RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
          RowBox[{"RRat", "\[Rule]", "0.1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Black"}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Summation index (j)\>\"", ",", "LabelSize"}], "]"}], ",", 
      
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sum contribution\>\"", ",", "LabelSize"}], "]"}]}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{{3.6805061786664543`*^9, 3.6805062251750402`*^9}, {
  3.680506290550832*^9, 3.680506489934346*^9}, {3.6805068351491127`*^9, 
  3.6805068402905693`*^9}, {3.6805069015105944`*^9, 3.680506940157444*^9}, {
  3.6805073451249323`*^9, 3.6805073746946573`*^9}, {3.6805074184462414`*^9, 
  3.6805074320433393`*^9}, {3.6805076896573267`*^9, 3.6805077212367916`*^9}, {
  3.68051046640546*^9, 3.6805105037415695`*^9}, {3.6805231154970407`*^9, 
  3.6805231306409435`*^9}, {3.6813111852037077`*^9, 3.6813111904169035`*^9}, {
  3.6813112336269827`*^9, 3.6813112425889373`*^9}, {3.6813761971158743`*^9, 
  3.681376198672637*^9}, {3.681716109530628*^9, 3.681716109935404*^9}, {
  3.6817517611509905`*^9, 3.6817517619061575`*^9}, {3.6817518104892683`*^9, 
  3.6817518308519216`*^9}, {3.6817919628042603`*^9, 3.6817919666579823`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0.5], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
       "]]}}, {}}, {{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.045454545454545456`}, {1., 0.125}, {2., 
       0.11363636363636363`}, {3., 0.06188118811881188}, {4., 
       0.031218781218781216`}, {5., 0.015623437656234376`}, {6., 
       0.007812421875781243}, {7., 0.003906246093753906}, {8., 
       0.0019531248046875196`}, {9., 0.0009765624902343751}, {10., 
       0.0004882812495117187}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"Summation index (j)\"", 25, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox["\"Sum contribution\"", 25, StripOnInput -> False], 
     TraditionalForm]},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{70, 25}, {70, 10}},
  ImageSize->650,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 9.999999795918367}, {0, 0.15}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6805074434266605`*^9, {3.6805076904985805`*^9, 3.6805077216787553`*^9}, {
   3.6805104708331413`*^9, 3.6805105041032*^9}, 3.680523131559088*^9, 
   3.681311043104493*^9, {3.6813111810037055`*^9, 3.6813111907822585`*^9}, {
   3.6813112346111326`*^9, 3.681311242866729*^9}, 3.681376199044033*^9, 
   3.6817161106233907`*^9, {3.681735887049841*^9, 3.6817358897583413`*^9}, 
   3.68175176743382*^9, {3.6817518114374065`*^9, 3.681751831305258*^9}, 
   3.6817919739440126`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<SummationContribution.eps\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.68050743934585*^9, 3.6805074393628745`*^9}, {
  3.681735855186602*^9, 3.681735877805722*^9}}],

Cell["\<\

A numerical evaluation of the average fraction of the genome that is from the \
resident (evaluated at t = 100)\
\>", "Text",
 CellChangeTimes->{{3.678464300723925*^9, 3.6784643051313953`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], "/.", 
  RowBox[{"eRRat", "\[Rule]", 
   RowBox[{"Log", "[", "RRat", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6817512107937183`*^9, 3.6817512252646403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"100", "+", "1"}], ")"}]}]], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "0"}], 
         RowBox[{"100", "-", "1"}]], 
        FractionBox[
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}], "/.", 
      RowBox[{"eRRat", "\[Rule]", 
       RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
     RowBox[{"kRat", "\[Rule]", ".1"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680516820052824*^9, 3.680516844003767*^9}, 
   3.6805168786931753`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkAx/FhVMPmFsIUktIT2kjl2F9bqZRIaii5sl2uSBZJaEmFoqQS
cm6NWlEhS44oPUWOyhVmhjHGzLxekmM9Y+3sH9/n+3z0jp89eEKaQqF4SPr/
9eOs6aELcbC3qI4sTR7AwXetwnDNeHADUi1m7g5g8EEtW748Hr6bvjeZ5g1A
evfDD5snrkCXUTAUUT6A7Vke2YmnrsGDYakfOjCAN3b9tmaHbsCgYE/PyvUs
eDsF7K1XT8P0vtP+szUsGFkPNyaeSEPQVc19zU0sTBi6g/EyDdnysXrpbSzE
iu3NhU53sLHLTHbpIAu5j9avWJacjmevrGJ/lWaDMy+cOE29j16GekjXKja8
i3zvK41n4RUtJLzWh41MjZtlkbbZeHX7McZOsdEd96Kdl5GNkj2qv2v6s+Hg
KZZ9bfsQHZxgF8/zbNDldr9+uT8HeY0bZyri2JCr7Tb2zs/Fzkr688wCNobW
ihX+diiAycTj0rMcNtLF29v9CpmYLrLJ6z7AAfsG5bN9CxMWNtwnAmcO1unV
fDGeYsLyA8NxjsFBje3WbnJnEeykS86ruHPAu2HKCuEW4aDLw2LDMxxY6OkQ
kaueQsU3KmAwhoMu2ylaUm4x3sxeaakv5iCpyVm381MpXBK3mvfLDMLGP0Vm
rLQcJ4MMLrhnDkJ3yx2q0kIV5KIXklqMh/C+Wtq6LbwOFtXVUVLMIWhNZP9B
X9OAtic7PiYYcLHKOSaX9/4t2hRUjsmmc/HjrMbcSZv3uHfc6dDROS48clS8
RLwPoF3MPqd6fBg3ExsoRj4tiE7TPtZeM4yIgsowTkcrtDZdd3VT5+ESX/ZS
q1U7Ln+z3T4ezMOqvtT+a2EdoITIXYxs5CGt52PDu5bPWOHbrUPTHgEnYO2d
evpX7FVR6LEKGMEtFouq6dKJ2jO1oSkVI1B0s/tnvKgLG6g5avWL+Bh/IZ+0
mt+NX2xNhFft+chWjyvsQy+m9T/f56XzsUaJXuSU+g2WG1enZPTzoTaiZK/f
3IfAHcGxCfRRfGoqPx+qNwC1wOpL+V6jEMZXWBp4sTBzRn7SOmsUIQFE6B57
NkJiHlRWdI6iU6dbuW6KjcuGw3S+igBCy6CLw7c5KJx567rETgCeu/c6ewwi
L0XrUVCsAI7NQy2pI4OgMU/nJZQL4MtU3RYfNwSHKPZK8bAAfomZU5UmXJiW
HXAy0RBiRV9HRGYLFzF3lwxObxcC4RmT7meGkT9rfJTlJ8Su5VUlXio8KGtH
hEmlC7Gw9pq1cgkPtwPEieZVQmTblPxEdRtB7xyTCo4QZF0cM29uBJQjoVWF
0iIU3xRY693lI+utWC5YTwRnH6YqZ9soJtyn9Mu3iVBUuKzSgTUKEY9R+sNN
hBFRb+78dQHm99i3ngsT4Vb0zzGJZkIsimBERqaIQMZsMm5qE6JoJ7/V5E8R
Nibcou+MFMFhNM18cbUIa8SZfYFaBOSfa1iNfxLhevWW1PByAlsVgxabsUX4
HGt8rcFzDN8LvnZlTIjwqazVsXp+DBNhjjZlFAKzNKeSKAqJmmSpQ9MS6x/r
UAKVRJpXKWOzFIFQ6a/t9TQSZXeMdCsl1nHsdW5SJfFuuUtjlTQBXz7XpcOI
xC6pUNfXMgQWa8958g+TuHfk8XApjcCGwMg6pisJmR1KieMSH60X6/q5kZiq
9aObyhL469QCh/AiURutLftU4kMvZX6b9CMR3246XyBHIG+/4ul/Y0ms7yrx
uL2UQHNOyvvaOBLUj+2dbRJPTyobxSaQaN7rbq0gT8AuQ01ATSZR6dDeelXi
cd5yf9l7JA6HzmlGKRDQsnzQ/CGDRAvfer5S4h3JOsZJWSRO+Ri0TkucbrZy
TCGfRFj4glWQIoG6KzkObYUkfFOlup5KLOjRe5b6mMSF4reeoxKrGecrOj8h
YUhz7lytRMAmxiBIrZiE9ZcSy+MS/wemVPkH
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{353., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6784643092747383`*^9, 3.67854795688675*^9, 3.6785480146342196`*^9, {
   3.6805168211782637`*^9, 3.680516844570049*^9}, 3.680516879269706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], "/.", 
   RowBox[{"eRRat", "\[Rule]", 
    RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
  RowBox[{"j", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.681751699642211*^9, 3.681751699706813*^9}}],

Cell[BoxData[
 FractionBox["kRat", 
  RowBox[{"2048", " ", 
   RowBox[{"(", 
    RowBox[{"kRat", "+", 
     SuperscriptBox["RRat", "10"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6817517001098113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   FractionBox["kRat", 
    RowBox[{"2048", " ", 
     RowBox[{"(", "kRat", ")"}]}]], "<", "0.01"}], "]"}]], "Input",
 CellChangeTimes->{{3.6817516480510435`*^9, 3.6817517212369223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.681751711553114*^9, 3.6817517220327697`*^9}}]
}, Open  ]],

Cell["Replacing the sum with an integral :", "Text",
 CellChangeTimes->{3.678464321335828*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], ",", "j"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"soln", "=", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SuperscriptBox["2", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"t", "+", "1"}], ")"}]}]], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"%", "/.", 
        RowBox[{"j", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"t", "-", "1"}], ")"}]}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"%", "/.", 
        RowBox[{"j", "\[Rule]", "0"}]}], ")"}]}], ")"}]}], ")"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "t"}]], "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "kRat"]}]}], "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "2", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}]}]], "kRat"]}]}], "]"}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Output",
 CellChangeTimes->{3.678464328066064*^9, 3.6785479583887105`*^9}]
}, Open  ]],

Cell["\<\
The result (black) is close to the sum evaluated directly (dashed), but not \
perfect :\
\>", "Text",
 CellChangeTimes->{3.678464354664912*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"plotINT", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"plot", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"soln", "/.", 
          RowBox[{"eRRat", "\[Rule]", 
           RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
         RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
        RowBox[{"t", "\[Rule]", "100"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
    "]"}]}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkAx/FhVMPmFsIUktIT2kjl2F9bqZRIaii5sl2uSBZJaEmFoqQS
cm6NWlEhS44oPUWOyhVmhjHGzLxekmM9Y+3sH9/n+3z0jp89eEKaQqF4SPr/
9eOs6aELcbC3qI4sTR7AwXetwnDNeHADUi1m7g5g8EEtW748Hr6bvjeZ5g1A
evfDD5snrkCXUTAUUT6A7Vke2YmnrsGDYakfOjCAN3b9tmaHbsCgYE/PyvUs
eDsF7K1XT8P0vtP+szUsGFkPNyaeSEPQVc19zU0sTBi6g/EyDdnysXrpbSzE
iu3NhU53sLHLTHbpIAu5j9avWJacjmevrGJ/lWaDMy+cOE29j16GekjXKja8
i3zvK41n4RUtJLzWh41MjZtlkbbZeHX7McZOsdEd96Kdl5GNkj2qv2v6s+Hg
KZZ9bfsQHZxgF8/zbNDldr9+uT8HeY0bZyri2JCr7Tb2zs/Fzkr688wCNobW
ihX+diiAycTj0rMcNtLF29v9CpmYLrLJ6z7AAfsG5bN9CxMWNtwnAmcO1unV
fDGeYsLyA8NxjsFBje3WbnJnEeykS86ruHPAu2HKCuEW4aDLw2LDMxxY6OkQ
kaueQsU3KmAwhoMu2ylaUm4x3sxeaakv5iCpyVm381MpXBK3mvfLDMLGP0Vm
rLQcJ4MMLrhnDkJ3yx2q0kIV5KIXklqMh/C+Wtq6LbwOFtXVUVLMIWhNZP9B
X9OAtic7PiYYcLHKOSaX9/4t2hRUjsmmc/HjrMbcSZv3uHfc6dDROS48clS8
RLwPoF3MPqd6fBg3ExsoRj4tiE7TPtZeM4yIgsowTkcrtDZdd3VT5+ESX/ZS
q1U7Ln+z3T4ezMOqvtT+a2EdoITIXYxs5CGt52PDu5bPWOHbrUPTHgEnYO2d
evpX7FVR6LEKGMEtFouq6dKJ2jO1oSkVI1B0s/tnvKgLG6g5avWL+Bh/IZ+0
mt+NX2xNhFft+chWjyvsQy+m9T/f56XzsUaJXuSU+g2WG1enZPTzoTaiZK/f
3IfAHcGxCfRRfGoqPx+qNwC1wOpL+V6jEMZXWBp4sTBzRn7SOmsUIQFE6B57
NkJiHlRWdI6iU6dbuW6KjcuGw3S+igBCy6CLw7c5KJx567rETgCeu/c6ewwi
L0XrUVCsAI7NQy2pI4OgMU/nJZQL4MtU3RYfNwSHKPZK8bAAfomZU5UmXJiW
HXAy0RBiRV9HRGYLFzF3lwxObxcC4RmT7meGkT9rfJTlJ8Su5VUlXio8KGtH
hEmlC7Gw9pq1cgkPtwPEieZVQmTblPxEdRtB7xyTCo4QZF0cM29uBJQjoVWF
0iIU3xRY693lI+utWC5YTwRnH6YqZ9soJtyn9Mu3iVBUuKzSgTUKEY9R+sNN
hBFRb+78dQHm99i3ngsT4Vb0zzGJZkIsimBERqaIQMZsMm5qE6JoJ7/V5E8R
Nibcou+MFMFhNM18cbUIa8SZfYFaBOSfa1iNfxLhevWW1PByAlsVgxabsUX4
HGt8rcFzDN8LvnZlTIjwqazVsXp+DBNhjjZlFAKzNKeSKAqJmmSpQ9MS6x/r
UAKVRJpXKWOzFIFQ6a/t9TQSZXeMdCsl1nHsdW5SJfFuuUtjlTQBXz7XpcOI
xC6pUNfXMgQWa8958g+TuHfk8XApjcCGwMg6pisJmR1KieMSH60X6/q5kZiq
9aObyhL469QCh/AiURutLftU4kMvZX6b9CMR3246XyBHIG+/4ul/Y0ms7yrx
uL2UQHNOyvvaOBLUj+2dbRJPTyobxSaQaN7rbq0gT8AuQ01ATSZR6dDeelXi
cd5yf9l7JA6HzmlGKRDQsnzQ/CGDRAvfer5S4h3JOsZJWSRO+Ri0TkucbrZy
TCGfRFj4glWQIoG6KzkObYUkfFOlup5KLOjRe5b6mMSF4reeoxKrGecrOj8h
YUhz7lytRMAmxiBIrZiE9ZcSy+MS/wemVPkH
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/wf2XTpS
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6784643587353706`*^9, 3.6785479600437326`*^9}]
}, Open  ]],

Cell["\<\

   A much improved solution is obtained by shifting the integration interval \
to be \"centred\" around the points that we' re trying to sum (e.g., from - \
1/2 to + 1/2 to estimate the height at j = 0 ... and from (t - 1 - 1/2) to (t \
- 1 + 1/2) to estimate the height at t - 1) :\
\>", "Text",
 CellChangeTimes->{3.6784643750393553`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], ",", "j"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"newsoln", "=", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"t", "+", "1"}], ")"}]}]], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"%", "/.", 
          RowBox[{"j", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "-", "1"}], ")"}], "+", 
            RowBox[{"1", "/", "2"}]}]}]}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"%", "/.", 
          RowBox[{"j", "\[Rule]", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}]}], ")"}]}], ")"}]}], 
     ")"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "t"}]], "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", "t"}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], "+", "t"}], ")"}]}]], "kRat"]}]}], 
     "]"}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Output",
 CellChangeTimes->{3.6784643909249277`*^9, 3.678547961777616*^9}]
}, Open  ]],

Cell["\<\
The result (black) is close to the sum evaluated directly (dashed):\
\>", "Text",
 CellChangeTimes->{{3.6784644031889544`*^9, 3.678464404701769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"plotINT", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"plot", ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"newsoln", "/.", 
          RowBox[{"eRRat", "\[Rule]", 
           RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
         RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
        RowBox[{"t", "\[Rule]", "100"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
    "]"}]}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkAx/FhVMPmFsIUktIT2kjl2F9bqZRIaii5sl2uSBZJaEmFoqQS
cm6NWlEhS44oPUWOyhVmhjHGzLxekmM9Y+3sH9/n+3z0jp89eEKaQqF4SPr/
9eOs6aELcbC3qI4sTR7AwXetwnDNeHADUi1m7g5g8EEtW748Hr6bvjeZ5g1A
evfDD5snrkCXUTAUUT6A7Vke2YmnrsGDYakfOjCAN3b9tmaHbsCgYE/PyvUs
eDsF7K1XT8P0vtP+szUsGFkPNyaeSEPQVc19zU0sTBi6g/EyDdnysXrpbSzE
iu3NhU53sLHLTHbpIAu5j9avWJacjmevrGJ/lWaDMy+cOE29j16GekjXKja8
i3zvK41n4RUtJLzWh41MjZtlkbbZeHX7McZOsdEd96Kdl5GNkj2qv2v6s+Hg
KZZ9bfsQHZxgF8/zbNDldr9+uT8HeY0bZyri2JCr7Tb2zs/Fzkr688wCNobW
ihX+diiAycTj0rMcNtLF29v9CpmYLrLJ6z7AAfsG5bN9CxMWNtwnAmcO1unV
fDGeYsLyA8NxjsFBje3WbnJnEeykS86ruHPAu2HKCuEW4aDLw2LDMxxY6OkQ
kaueQsU3KmAwhoMu2ylaUm4x3sxeaakv5iCpyVm381MpXBK3mvfLDMLGP0Vm
rLQcJ4MMLrhnDkJ3yx2q0kIV5KIXklqMh/C+Wtq6LbwOFtXVUVLMIWhNZP9B
X9OAtic7PiYYcLHKOSaX9/4t2hRUjsmmc/HjrMbcSZv3uHfc6dDROS48clS8
RLwPoF3MPqd6fBg3ExsoRj4tiE7TPtZeM4yIgsowTkcrtDZdd3VT5+ESX/ZS
q1U7Ln+z3T4ezMOqvtT+a2EdoITIXYxs5CGt52PDu5bPWOHbrUPTHgEnYO2d
evpX7FVR6LEKGMEtFouq6dKJ2jO1oSkVI1B0s/tnvKgLG6g5avWL+Bh/IZ+0
mt+NX2xNhFft+chWjyvsQy+m9T/f56XzsUaJXuSU+g2WG1enZPTzoTaiZK/f
3IfAHcGxCfRRfGoqPx+qNwC1wOpL+V6jEMZXWBp4sTBzRn7SOmsUIQFE6B57
NkJiHlRWdI6iU6dbuW6KjcuGw3S+igBCy6CLw7c5KJx567rETgCeu/c6ewwi
L0XrUVCsAI7NQy2pI4OgMU/nJZQL4MtU3RYfNwSHKPZK8bAAfomZU5UmXJiW
HXAy0RBiRV9HRGYLFzF3lwxObxcC4RmT7meGkT9rfJTlJ8Su5VUlXio8KGtH
hEmlC7Gw9pq1cgkPtwPEieZVQmTblPxEdRtB7xyTCo4QZF0cM29uBJQjoVWF
0iIU3xRY693lI+utWC5YTwRnH6YqZ9soJtyn9Mu3iVBUuKzSgTUKEY9R+sNN
hBFRb+78dQHm99i3ngsT4Vb0zzGJZkIsimBERqaIQMZsMm5qE6JoJ7/V5E8R
Nibcou+MFMFhNM18cbUIa8SZfYFaBOSfa1iNfxLhevWW1PByAlsVgxabsUX4
HGt8rcFzDN8LvnZlTIjwqazVsXp+DBNhjjZlFAKzNKeSKAqJmmSpQ9MS6x/r
UAKVRJpXKWOzFIFQ6a/t9TQSZXeMdCsl1nHsdW5SJfFuuUtjlTQBXz7XpcOI
xC6pUNfXMgQWa8958g+TuHfk8XApjcCGwMg6pisJmR1KieMSH60X6/q5kZiq
9aObyhL469QCh/AiURutLftU4kMvZX6b9CMR3246XyBHIG+/4ul/Y0ms7yrx
uL2UQHNOyvvaOBLUj+2dbRJPTyobxSaQaN7rbq0gT8AuQ01ATSZR6dDeelXi
cd5yf9l7JA6HzmlGKRDQsnzQ/CGDRAvfer5S4h3JOsZJWSRO+Ri0TkucbrZy
TCGfRFj4glWQIoG6KzkObYUkfFOlup5KLOjRe5b6mMSF4reeoxKrGecrOj8h
YUhz7lytRMAmxiBIrZiE9ZcSy+MS/wemVPkH
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/C9pzArK/wd2xyhH
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.678464413378409*^9, 3.6785479211247063`*^9, 
  3.6785479634651103`*^9}]
}, Open  ]],

Cell["\<\
An alternative takes out the j=0 term and integrates the rest:\
\>", "Text",
 CellChangeTimes->{{3.678464424823162*^9, 3.678464430468894*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], ",", "j"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6785471611794834`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "j"}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", "j"}]], "kRat"]}]}], "]"}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Output",
 CellChangeTimes->{3.678547161564375*^9, 3.678547965382161*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln1", "=", 
  RowBox[{"1", "-", 
   SuperscriptBox["2", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"t", "+", "1"}], ")"}]}]], "-", 
   FractionBox["kRat", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "kRat"}], ")"}]}]], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"%", "/.", 
       RowBox[{"j", "\[Rule]", 
        RowBox[{"t", "-", "1"}]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"%", "/.", 
       RowBox[{"j", "\[Rule]", "1"}]}], ")"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "t"}]], "-", 
  FractionBox["kRat", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "kRat"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", "eRRat"], "kRat"]}]}], "]"}], 
   RowBox[{"4", " ", 
    RowBox[{"Log", "[", "2", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}]}]], "kRat"]}]}], "]"}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Output",
 CellChangeTimes->{3.6785471784217014`*^9, 3.6785479661366205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"plot", ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"soln1", "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
        RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
       RowBox[{"t", "\[Rule]", "100"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.678547177268939*^9, 3.678547183019977*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkAx/FhVMPmFsIUktIT2kjl2F9bqZRIaii5sl2uSBZJaEmFoqQS
cm6NWlEhS44oPUWOyhVmhjHGzLxekmM9Y+3sH9/n+3z0jp89eEKaQqF4SPr/
9eOs6aELcbC3qI4sTR7AwXetwnDNeHADUi1m7g5g8EEtW748Hr6bvjeZ5g1A
evfDD5snrkCXUTAUUT6A7Vke2YmnrsGDYakfOjCAN3b9tmaHbsCgYE/PyvUs
eDsF7K1XT8P0vtP+szUsGFkPNyaeSEPQVc19zU0sTBi6g/EyDdnysXrpbSzE
iu3NhU53sLHLTHbpIAu5j9avWJacjmevrGJ/lWaDMy+cOE29j16GekjXKja8
i3zvK41n4RUtJLzWh41MjZtlkbbZeHX7McZOsdEd96Kdl5GNkj2qv2v6s+Hg
KZZ9bfsQHZxgF8/zbNDldr9+uT8HeY0bZyri2JCr7Tb2zs/Fzkr688wCNobW
ihX+diiAycTj0rMcNtLF29v9CpmYLrLJ6z7AAfsG5bN9CxMWNtwnAmcO1unV
fDGeYsLyA8NxjsFBje3WbnJnEeykS86ruHPAu2HKCuEW4aDLw2LDMxxY6OkQ
kaueQsU3KmAwhoMu2ylaUm4x3sxeaakv5iCpyVm381MpXBK3mvfLDMLGP0Vm
rLQcJ4MMLrhnDkJ3yx2q0kIV5KIXklqMh/C+Wtq6LbwOFtXVUVLMIWhNZP9B
X9OAtic7PiYYcLHKOSaX9/4t2hRUjsmmc/HjrMbcSZv3uHfc6dDROS48clS8
RLwPoF3MPqd6fBg3ExsoRj4tiE7TPtZeM4yIgsowTkcrtDZdd3VT5+ESX/ZS
q1U7Ln+z3T4ezMOqvtT+a2EdoITIXYxs5CGt52PDu5bPWOHbrUPTHgEnYO2d
evpX7FVR6LEKGMEtFouq6dKJ2jO1oSkVI1B0s/tnvKgLG6g5avWL+Bh/IZ+0
mt+NX2xNhFft+chWjyvsQy+m9T/f56XzsUaJXuSU+g2WG1enZPTzoTaiZK/f
3IfAHcGxCfRRfGoqPx+qNwC1wOpL+V6jEMZXWBp4sTBzRn7SOmsUIQFE6B57
NkJiHlRWdI6iU6dbuW6KjcuGw3S+igBCy6CLw7c5KJx567rETgCeu/c6ewwi
L0XrUVCsAI7NQy2pI4OgMU/nJZQL4MtU3RYfNwSHKPZK8bAAfomZU5UmXJiW
HXAy0RBiRV9HRGYLFzF3lwxObxcC4RmT7meGkT9rfJTlJ8Su5VUlXio8KGtH
hEmlC7Gw9pq1cgkPtwPEieZVQmTblPxEdRtB7xyTCo4QZF0cM29uBJQjoVWF
0iIU3xRY693lI+utWC5YTwRnH6YqZ9soJtyn9Mu3iVBUuKzSgTUKEY9R+sNN
hBFRb+78dQHm99i3ngsT4Vb0zzGJZkIsimBERqaIQMZsMm5qE6JoJ7/V5E8R
Nibcou+MFMFhNM18cbUIa8SZfYFaBOSfa1iNfxLhevWW1PByAlsVgxabsUX4
HGt8rcFzDN8LvnZlTIjwqazVsXp+DBNhjjZlFAKzNKeSKAqJmmSpQ9MS6x/r
UAKVRJpXKWOzFIFQ6a/t9TQSZXeMdCsl1nHsdW5SJfFuuUtjlTQBXz7XpcOI
xC6pUNfXMgQWa8958g+TuHfk8XApjcCGwMg6pisJmR1KieMSH60X6/q5kZiq
9aObyhL469QCh/AiURutLftU4kMvZX6b9CMR3246XyBHIG+/4ul/Y0ms7yrx
uL2UQHNOyvvaOBLUj+2dbRJPTyobxSaQaN7rbq0gT8AuQ01ATSZR6dDeelXi
cd5yf9l7JA6HzmlGKRDQsnzQ/CGDRAvfer5S4h3JOsZJWSRO+Ri0TkucbrZy
TCGfRFj4glWQIoG6KzkObYUkfFOlup5KLOjRe5b6mMSF4reeoxKrGecrOj8h
YUhz7lytRMAmxiBIrZiE9ZcSy+MS/wemVPkH
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVynk41AkAxnGLpK3WTa4csY4npbTLY+ktUtnHkaMnVqJF2gbZLWtCJZEc
FcLYGmMc06JLyyqbzfXUWEeupUiJGXP//KYnJJH97R/v830+z/Oa/XjSP0pR
QUHBm9r/bZNPzPOS0nFdZaWn0ZIH/2d9UvqGDCxwbPU/fs3D1M2Wt+sbM2DO
SChxseZBcV9Zl+O7SwhWmFvNteXBrfQIKyc6C1b3Z6tFW3lo93zt4RB4FXTb
OYMgZx6O+sV+36ZbiJSInalPfCnXnvhNXV6KtDAL7dFkHoqX3AZonBo4O77Z
fes1D7ncANOR5w9QnMjUG3biwzUmT3nmQSOS5ouqp/L4MHUqUlJfeYx1fLcv
fp7ho7NZ0aWf3ooXYyW7/3GfhsE71kVjqw7EBZ+qNGVNY1NAarmg8ynCh+po
9bPTmD2pt3jMtRP2jKgotrsAR9ia4TJBF3KDdZM8GQJcy+lQsInoRZrgSl0V
T4AzVU2Jk4N9qHh3wFK8WYhzojXn+r4bAAP8wjtJQmwaz3+dlTgIF3a7ZlWb
EIWj3R3Peocgf2Oo82qdCJOx1kVtxsPwKh21/RQoQsHEhNKGQyM4s8CYeFQs
glqI50d57QsshGfcPTwugrx+fa6l6CVM11p/2W0oBks3nTOOMYyM9Xf0HBHD
St241i//Fa47VjIHWGJoC9W9zHvGMeXHDZS/FOM5t/F0gtkbJJ9meW/WlUCa
8dDZInwChxse7aryluBULJGw3+stOizW2UemSTBi9FKjde4tYlifdNuaqL9z
fMr09UlEDLpvrJBKIAg9auuFKWzzuEZvMJHCt4fXmy+cQlhmtc6zA1KcqNHa
lZHOw1LXXNWdFCloOcy5pi18mAedj/y2VoqN44NnmL18yL0cY1sHpQD9xvvQ
n6Zx3LDuKntBir36j+vCNQVQ1lgqKDORYcU6y0WjToCRY3mc1W4ysFzr1iqF
CBFU4thuFyUD2ZpeU7EohD99vGjlogz3rklczBgilEYfZIayZQiIqNGa3CUG
zd/hodHfMtRydJp8JsTYGzNEbhiRQSgbK1/OlqDoQ2qsKylDwfltqTkOUkRt
5XioqRAgU7+x4/ZL0fHB+dVTfQLbMwuM9yTLsBzcbZNtR8BqiTkeZ0DgyQHV
wuKdBLKbnfLpjQTUON37dHwIDF2wy+oIm0Fu2uoHlaEEnv/Z59u8PIOGcvKy
Fo3Agqpf3VkFEp37jXy9KZsfHlSHEomhWyGKmZQTFIcH2lRJhEza2y9SNvId
C+BqkbByXlM7EUPghIh/aNCGRGS5qvHvcQRUDBfDRAdJtPcm7rD+hYB9XHJr
TRCJ+LLzt8Mo/9C2ZEoLIVG/5bI6g/Ld6JVJIpzEDuajqlWnCAQ2KEe+p5HI
aDk6P0m5wlvt+OcLJBhrLT0YCQR62HmdLekkrD/dLOulPP9ew+ZCJomLw5dE
Sr8S8LyhLVG6QuLJX/96xFOWC/Rj1pSQiObqbd2fSMDA+WZP1w0Sq8pml89S
dr9iZJdbSkLv89nH9ZSLHUxmvqok0Rz3h6IJnUDrJbZPP4eEymVabiBlyajZ
/fxqEppOhHI2ZW27SrWA2yS2p+yMaaHsmmoRr32PxGefY+2zlP8DmZl+yg==

       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.67854796709956*^9, 3.6785479684693503`*^9}}]
}, Open  ]],

Cell["\<\
An alternative takes out the j = 0 and the j = 1 term and integrates the rest \
:\
\>", "Text",
 CellChangeTimes->{3.678547217171956*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]], ",", "j"}], "]"}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln2", "=", 
  RowBox[{"1", "-", 
   SuperscriptBox["2", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"t", "+", "1"}], ")"}]}]], "-", 
   FractionBox["kRat", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "kRat"}], ")"}]}]], "-", 
   FractionBox["kRat", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "eRRat"}]], "+", "kRat"}], ")"}]}]], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"%", "/.", 
       RowBox[{"j", "\[Rule]", 
        RowBox[{"t", "-", "1"}]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"%", "/.", 
       RowBox[{"j", "\[Rule]", "2"}]}], ")"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "t"}]], "-", 
  FractionBox["kRat", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "kRat"}], ")"}]}]], "-", 
  FractionBox["kRat", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "eRRat"}]], "+", "kRat"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "eRRat"}]], "kRat"]}]}], "]"}], 
   RowBox[{"8", " ", 
    RowBox[{"Log", "[", "2", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"eRRat", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}]}]], "kRat"]}]}], "]"}]}], 
   RowBox[{"Log", "[", "2", "]"}]]}]], "Output",
 CellChangeTimes->{{3.6785472278104486`*^9, 3.67854723136869*^9}, 
   3.6785479708101993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"plot", ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"soln2", "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
        RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
       RowBox[{"t", "\[Rule]", "100"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkAx/FhVMPmFsIUktIT2kjl2F9bqZRIaii5sl2uSBZJaEmFoqQS
cm6NWlEhS44oPUWOyhVmhjHGzLxekmM9Y+3sH9/n+3z0jp89eEKaQqF4SPr/
9eOs6aELcbC3qI4sTR7AwXetwnDNeHADUi1m7g5g8EEtW748Hr6bvjeZ5g1A
evfDD5snrkCXUTAUUT6A7Vke2YmnrsGDYakfOjCAN3b9tmaHbsCgYE/PyvUs
eDsF7K1XT8P0vtP+szUsGFkPNyaeSEPQVc19zU0sTBi6g/EyDdnysXrpbSzE
iu3NhU53sLHLTHbpIAu5j9avWJacjmevrGJ/lWaDMy+cOE29j16GekjXKja8
i3zvK41n4RUtJLzWh41MjZtlkbbZeHX7McZOsdEd96Kdl5GNkj2qv2v6s+Hg
KZZ9bfsQHZxgF8/zbNDldr9+uT8HeY0bZyri2JCr7Tb2zs/Fzkr688wCNobW
ihX+diiAycTj0rMcNtLF29v9CpmYLrLJ6z7AAfsG5bN9CxMWNtwnAmcO1unV
fDGeYsLyA8NxjsFBje3WbnJnEeykS86ruHPAu2HKCuEW4aDLw2LDMxxY6OkQ
kaueQsU3KmAwhoMu2ylaUm4x3sxeaakv5iCpyVm381MpXBK3mvfLDMLGP0Vm
rLQcJ4MMLrhnDkJ3yx2q0kIV5KIXklqMh/C+Wtq6LbwOFtXVUVLMIWhNZP9B
X9OAtic7PiYYcLHKOSaX9/4t2hRUjsmmc/HjrMbcSZv3uHfc6dDROS48clS8
RLwPoF3MPqd6fBg3ExsoRj4tiE7TPtZeM4yIgsowTkcrtDZdd3VT5+ESX/ZS
q1U7Ln+z3T4ezMOqvtT+a2EdoITIXYxs5CGt52PDu5bPWOHbrUPTHgEnYO2d
evpX7FVR6LEKGMEtFouq6dKJ2jO1oSkVI1B0s/tnvKgLG6g5avWL+Bh/IZ+0
mt+NX2xNhFft+chWjyvsQy+m9T/f56XzsUaJXuSU+g2WG1enZPTzoTaiZK/f
3IfAHcGxCfRRfGoqPx+qNwC1wOpL+V6jEMZXWBp4sTBzRn7SOmsUIQFE6B57
NkJiHlRWdI6iU6dbuW6KjcuGw3S+igBCy6CLw7c5KJx567rETgCeu/c6ewwi
L0XrUVCsAI7NQy2pI4OgMU/nJZQL4MtU3RYfNwSHKPZK8bAAfomZU5UmXJiW
HXAy0RBiRV9HRGYLFzF3lwxObxcC4RmT7meGkT9rfJTlJ8Su5VUlXio8KGtH
hEmlC7Gw9pq1cgkPtwPEieZVQmTblPxEdRtB7xyTCo4QZF0cM29uBJQjoVWF
0iIU3xRY693lI+utWC5YTwRnH6YqZ9soJtyn9Mu3iVBUuKzSgTUKEY9R+sNN
hBFRb+78dQHm99i3ngsT4Vb0zzGJZkIsimBERqaIQMZsMm5qE6JoJ7/V5E8R
Nibcou+MFMFhNM18cbUIa8SZfYFaBOSfa1iNfxLhevWW1PByAlsVgxabsUX4
HGt8rcFzDN8LvnZlTIjwqazVsXp+DBNhjjZlFAKzNKeSKAqJmmSpQ9MS6x/r
UAKVRJpXKWOzFIFQ6a/t9TQSZXeMdCsl1nHsdW5SJfFuuUtjlTQBXz7XpcOI
xC6pUNfXMgQWa8958g+TuHfk8XApjcCGwMg6pisJmR1KieMSH60X6/q5kZiq
9aObyhL469QCh/AiURutLftU4kMvZX6b9CMR3246XyBHIG+/4ul/Y0ms7yrx
uL2UQHNOyvvaOBLUj+2dbRJPTyobxSaQaN7rbq0gT8AuQ01ATSZR6dDeelXi
cd5yf9l7JA6HzmlGKRDQsnzQ/CGDRAvfer5S4h3JOsZJWSRO+Ri0TkucbrZy
TCGfRFj4glWQIoG6KzkObYUkfFOlup5KLOjRe5b6mMSF4reeoxKrGecrOj8h
YUhz7lytRMAmxiBIrZiE9ZcSy+MS/wemVPkH
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
8SIerpEnn/5C+V8/qzff
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.678547980296874*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"But", " ", "these", " ", "solutions", " ", "aren"}], 
       "\[CloseCurlyQuote]"}], "t", " ", "helping", " ", 
      RowBox[{"much", ".", "\n", "Asymptote"}]}], "\n", "Let"}], 
    "\[CloseCurlyQuote]"}], "s", " ", "next", " ", "focus", " ", "on", " ", 
   "the", " ", 
   RowBox[{"asymptote", ".", "When"}], " ", "t", " ", "is", " ", "large"}], 
  ",", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "t"}]]}], "can", " ", "be", " ", "ignored"}], 
  ",", 
  RowBox[{"as", " ", "can", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "-", "t"}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"eRRat", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], "+", "t"}], ")"}]}]], "kRat"]}]}], 
       "]"}]}], 
     RowBox[{"Log", "[", "2", "]"}]], ".", "The"}], " ", "latter", " ", "can",
    " ", "be", " ", "shown", " ", "as", " ", 
   RowBox[{"follows", ".", "First"}]}], ",", 
  RowBox[{"it", " ", "is", " ", "multiplied", " ", 
   SuperscriptBox["by2", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "-", "t"}]]}], ",", 
  RowBox[{
  "which", " ", "gets", " ", "smaller", " ", "as", " ", "t", " ", "gets", " ", 
   RowBox[{"larger", ".", "Second"}]}], ",", 
  RowBox[{
   RowBox[{
   "the", " ", "hypergeometric", " ", "function", " ", "can", " ", "be", " ", 
    "written", " ", "as", " ", "a", " ", "sum", " ", 
    RowBox[{"(", 
     RowBox[{
     "see", " ", "Abromowitz", " ", "and", " ", "Stegun", " ", "15.1", ".1"}],
      ")"}]}], ":"}]}]]]], "Text",
 CellChangeTimes->{3.67854738278771*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Pochhammer", "[", 
       RowBox[{"1", ",", "n"}], "]"}], 
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "n"}], "]"}]}], 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "n"}], "]"}]], 
    FractionBox[
     SuperscriptBox["z", "n"], 
     RowBox[{"n", "!"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Hypergeometric2F1", "[", 
  RowBox[{"1", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "z"}], "]"}]], "Output",\

 CellChangeTimes->{3.678547389469486*^9, 3.6785479826984205`*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"where", " ", "z"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"eRRat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", "t"}], ")"}]}]], "kRat"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox[
         SuperscriptBox["RRat", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", "t"}]], "kRat"], ".", 
        "Assuming"}]}], " ", "0"}], "<", "RRat", "<", "1"}]}]}], ",", 
  RowBox[{
   SuperscriptBox["thenRRat", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}]], "will", " ", "be", " ", "small", " ", 
   "for", " ", "very", " ", "large", " ", "t", " ", "and", " ", "z", " ", 
   "will", " ", "approach", " ", 
   RowBox[{"zero", ".", "Consequently"}]}], ",", 
  RowBox[{
   RowBox[{
   "the", " ", "leading", " ", "order", " ", "term", " ", "in", " ", "the", 
    " ", "above", " ", "sum", " ", "is", " ", "the", " ", "n"}], "=", 
   RowBox[{"0", "th", " ", "term"}]}], ",", 
  RowBox[{"which", " ", "is", " ", "just", " ", 
   RowBox[{"one", ":"}]}]}]]]], "Text",
 CellChangeTimes->{3.678547398117778*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Pochhammer", "[", 
      RowBox[{"1", ",", "n"}], "]"}], 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "n"}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "n"}], "]"}]], 
   FractionBox[
    SuperscriptBox["z", "n"], 
    RowBox[{"n", "!"}]]}], "/.", 
  RowBox[{"n", "\[Rule]", "0"}]}]], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6785474013040314`*^9, 3.678547985557642*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "This", " ", "allows", " ", "us", " ", "to", " ", "simplify", " ", "the", 
    " ", "solution", " ", "to1"}], "-", 
   FractionBox[
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"Log", "[", "2", "]"}]}]]}], ":"}]]]], "Text",
 CellChangeTimes->{3.678547410048922*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", 
  RowBox[{"Infinity", "\[AliasDelimiter]"}]}]], "Input",
 CellChangeTimes->{{3.681792049579204*^9, 3.6817920570175333`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[AliasDelimiter]", "2"], " ", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.6817920577866755`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
        RowBox[{"kRat", "\[Rule]", "0.001"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
        RowBox[{"kRat", "\[Rule]", ".1"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
          RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
        RowBox[{"kRat", "\[Rule]", "0.5"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
          RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<RRat\>\"", ",", "LabelSize"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Genetic rescue (F[\[Infinity]])\>\"", ",", "LabelSize"}], 
         "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Placed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Black"}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<kRat = 0.001\>\"", ",", "LabelSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<kRat = 0.1\>\"", ",", "LabelSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<kRat = 0.5\>\"", ",", " ", "LabelSize"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.8", ",", "0.2"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  " ", "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.6805153792911015`*^9, {3.680515418590046*^9, 3.680515437220829*^9}, {
   3.680515508429202*^9, 3.6805156085846987`*^9}, {3.680515700339196*^9, 
   3.680516024328614*^9}, {3.6805161364490805`*^9, 3.6805162075357504`*^9}, {
   3.680516668888127*^9, 3.6805167501039076`*^9}, {3.6805168899900417`*^9, 
   3.6805169000306983`*^9}, {3.680516942415004*^9, 3.68051711613895*^9}, {
   3.6805171472377415`*^9, 3.6805171521620464`*^9}, {3.680517211945112*^9, 
   3.680517270088255*^9}, {3.680517327397314*^9, 3.6805173354100657`*^9}, {
   3.6805176588455505`*^9, 3.680517668091632*^9}, {3.680518306710267*^9, 
   3.6805183376061025`*^9}, {3.680523816330591*^9, 3.680523867330058*^9}, {
   3.6805239149649262`*^9, 3.680523919823124*^9}, {3.681581005537363*^9, 
   3.6815810442791214`*^9}, {3.6817339562703524`*^9, 3.681733962102646*^9}, {
   3.6817359117451224`*^9, 3.681735952327139*^9}, 3.6817438826064124`*^9, {
   3.6817457418963594`*^9, 3.6817457425106487`*^9}, {3.681792012369109*^9, 
   3.6817920650711927`*^9}, {3.6817921022222214`*^9, 3.6817921030819473`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
xP8HMSdHgg==
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.3], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
0nIV/h9MG/ki
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.7], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
         "]]}}, {}}}, 
    InsetBox[
     TemplateBox[{
      StyleBox["\"kRat = 0.001\"", 25, StripOnInput -> False],StyleBox[
       "\"kRat = 0.1\"", 25, StripOnInput -> False],StyleBox[
       "\"kRat = 0.5\"", 25, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.7]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.7], Editable -> False, Selectable -> False]}],
                  "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"RRat\"", 25, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox[
      "\"Genetic rescue (F[\[Infinity]])\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJwV1nk0Vd0bB3DJUJIoQ4MhYyUNKA3ki0xJJV66pXpLhIhKZEqpjM2RItUv
U5IMaZBUQhKZUqZwr+uO7r2OVBLJb79/7HXWZ61z9n72ep6z96PpEejsJS4m
JsYg479nZahs1/1iV/Oye4MLjj3qxpfjtt99Ocbw7yh9tVO+H+UVI5fNORuh
78g9pfOyH3J2Dnr2nVvg/3KQ4bqEhSLO1t7FHBfovBMLLYxkofNB6INHdBr8
NyWbx1WwIH4447hR5x6ESH1iLhpjQXku56677364V+bVRxmwkfc7XFKdcwAr
g2REtJ1smH+d5cfwOIj8Xr9/uNFstJZnNWfQfdA1Vyg9mcOGz511Jl67/dB1
dZ6s6Qc2/pxqvLWo8zBOJykPzuKzUVtULPZT/whef3DKa5fi4JpmpLGb71GU
XZe37dTiYNFUhdS5nCAc3zk809ONg+Ggr/VhOsHI0tOJsgrgoJyV/bfLIwQ0
r7mJ02M4cKpZ73mbHoqUlnHNl4UczF8jeeOvWjjkrj50aqnigHW/6cO/uyOg
rL22ZHE7B6EJniu0Ok+ibdNEats4B1Zjyz3OqpzCcJT+ZduZXMQ+jXQY1j8N
mdp6jaXqXDjp2Z108Y3G4p9mCifMuWBLdzOVOGeR5fHeRxTGhYOFZaRtzDmU
zj51vieOi6LQHKUTOjGoq7o5GXqdi3D+EfsOj1hY1unoVRVyIVcvWZBGj4dH
hFTzjD4ugqb62dVHJaD3xrfnFUIuOkybGeNqifBf1WBoNspFRn7anD27z+Nx
ZeK+K3I8mFxaEabReRF1B/pteWt5SK9Jnu0Uegl6DSdSZ27kYcrk74enVS7D
09JGa/oWHjhrPKgh/SvYlLI6L34fD0W5BlrOvlehmPjLoDGGB+vEt3GKnCQE
TLQGetXxsGmabs1es2RU1L75s6iVh62x8RIPriVD60gr4+NXHmhntkVvwHWU
BjTJvxXy4B/eE37wZgp4i3pf+szkI+nQ78OlDqko25p3aJMDHzd5u/PF76Ui
InDUMHY7H+kHKwYcf6WCOzp4pJDGR45HnHdfZhoGa+znfTjIR9kupf0yE7eg
JdWUpHOGD6aD4T+7C++AZdhg0/CUD05t8rUcybvIGNlhNfmSD4HtaPOQ+13I
hhzepF3JR/g9eo6VxP8wIv4q2qqRj3O3c7Tbi/4H2mvVcBabxHN9lZqYTAYS
xm3FeLMHUBHjJO9cnoXcd3mnjbwGsFczwvwWKwtSm6bblPoOYKI8258lm40m
3ckGk4ABrP8xVhuyJxt/pY0uqp8YQIlHdvStv9nYLuNrdSt+ADkYG2ZZ3Eea
9U+d3XkDuPA788uJdw/gJ7lF7iR/APrXG6e+FT3AP/Zff1qKBvBh5W9DGeU8
7Mh93j/l2wCkfLZeSj+YhxXSUtJBowM41TZq+1b6IcQ78psXSAtwrGRLqYxD
PiyEDoNXtQWgHf6VdruxAE4lHsruOwXY4e8VoTpSgALRp4uxuwVw82t1v6VW
iFU5uVEF/wrg4luomupfCPOWPwPfvQS4/9h4m4NkEeLXd79yPSZARoGg2Saz
CJMRTqERiQLczHH/bEYvxse5oyqRpQKcTTH9qr/jCeTHNr08KStESGPv+xT/
J6CJPZ1rMEuIQ1JnnoifeYJK+e7edgUhnENqL3blP4F6deLzRSpCaLm5WiSK
P8WngC/KDzSFqFQKzOY/eopqTpi9iYkQ4tczAnMlnsPswr8yKXuE5NyYLqH3
+AXMTVe3L84h769bMqpd8wIGuu5DS3KFkGDYCzW7XqBF0fDMkjwh4g3iP6uJ
l2GNZJWKToEQl99JZSs5l8FjYbCF9DMh7vyaais5XAarhz36ce+EeOX+N45l
WI6u63tfhPULMab9fUZm8WusmFPYFr1AhCLxU5Fb3r/GH67aYmc1Ebz7ZES/
ul9DVbNNS1NDhM93tBodp73BkqVb5r/UEqFgnvOVkb1vENPWbUpfIkJxHE1G
V6oCn/dcSeavEcHr5PNLoSUV0MfbQ/IuIjT4BN/QkKtE7fKlIaIYETKCFzXU
PqsGeD1nTHpFWOPoPfzY8D3M/n5c91dnEHsNl2cbMD+Awa5f5e49CBvGGTuu
50cYKc7IVLk9iJXvZspNdDXi3NJ511bUD4LWPctwe1Uz5rvLjjePDOJXGd3Z
WvwTKjs57Y7zKdAXBplOurfibjDf670phbp7ms+8Cz8j/djmgyY0CsnSN3KH
BF/w6aJ+1YZACrk/mvZbbmyH/+ncsK/nKNyqabr2+GwHpPcoHt6QQqFDIylR
0NuJ8azUKs8cCnOTjyp+Mv4KgWWeQm8JhTUiZeXOo92I9fvw6uprCncbTvXe
r+sBR+D8xLOWAvdaofoNWTre974wU22m4PN69GqMAh3ed3aNrCEe4FtKHlem
Q1HF7bYLsdDis8BpIR20rXElicRDg6OlMqvI9zmjU0aJxxysXKLc6Tg8smZl
UwsF2alf4rzy6Hh+hDb/SCuF1HUnR+fpMBBJx86oNrKeW+HbGj0GJB8MPblB
vDaoLzFoCQPNMlkTRcRt+TZqDcsZsFi+0a2fePZCOavT6xiI5zzVtWuncEHq
7nnOVgbGqGG7GR0Uolor1EvCGJBh0oUxnRQOHJawcWxiYH90Gey6KfxR0dtW
38KAm/z6T7uIkyvtdjp8ZsDarMgtgLhG5fxh+04Gtt7LXH2dWL9SIcW6n4GP
VumOTOJhZQ2u2S8GMq2DOWE9FE5XrEtYptEH+qxJybu9FNLnBDbIBfZhP7/k
QyWDgrWNunfV0T6cKDoZ/plYENIgFnq8D23jG9Q4xOu7lq7qC+uDoXrd2ul9
JJ//46WVnOtDst+iD1uJFZd7+NDS+mDjnL6jnfi8vevUjHd9yAq5EdjLpBB+
0nTdalUmtn0pSK9hUaCx5Zb3qDNhck+z9TPx6i1MrRhNJiQZ2/4yiYdUE2S/
6DEx1DNpNEl8sLyNftyQieifycpr2BScx4/GPrFlQqn6VUMWsX5YbqvxUSbi
A4+tCuVQ6DyuFGBUw0Rite1NMR7Z/6GOzPxaJhKmc4NmEC/ed6tTr56J8Wm+
dsrEIZs1bRY0k/luLmlbSjxba5mqRBcToQNIciN2bLKu+yJigp7QeCWPuGLJ
cb0wpX5oDpq8deST+u/91PvGsx+ztssujRigsNddOyvQux8RCoGic8SKHUG+
Gof68dSl7/4l4lMtij+iAvuRtVZOMoPYrdptunl4PxanbdhfSyyZ12Vcfrkf
rxkxOXMEFDyCmfGlZf3wKY66kkWsKjtsVCzPgsEbrlGxkORT2Wid8RwWua/U
M0qJF2gew1MlFuR3Pp9RQTzfZHjzi/ksrB5Wb2wknrtv2POtDgu+3RvlhcRK
T4ZTWtaygEtlF3VFFOR2fx/7to/0hVrB55OJJx/+qDQqZmHY5XHYgUEKT4Q0
ndwSFqx/Jpz1JT607FWM2jMWpG7/ig8kbiuIsZ/2koV1epmxEcT5xcqNPdUs
bMi8vSWJmPZ8bWd8BwtVAQYzK4kfV0ZSvZMsKJgmH1KlKHh2Sqie38qGnhfX
9R3x4nsjsibb2RgwM26oIxb68CYYLmzSl1laNBMfH62nm5A+dCDz6byvxDEq
SZnMA2wkxHikDRHnuGouXR/GhvJPubb5QxT4LRvW8zPZSC+XcfInDqgLodn9
ZsP727tZEt/I/6dBS6weZ+NIuYPtNOLE4HXlln/ZYEzvCZMlzln4R8NsKgex
C1d1KBL3hERzV87k4E7kt6O6xI7aF0Lma3KQcODjAlti/ch7ySJ7DvbtfL4z
hpi77GNz0k3Sd66umBgnlnQ9a2Btw8U7sb7bPcMUkgbVqs9xuMg9ElF2+TuF
DKUanfRzPFj886NM9wepF7FmH5WVfPzK0J3zmDhszyueVjMfLZ/6WNo/KVhG
yTpeOzmAzc0/2JeJzxv4hnYsEmDZRIiiiNh6ywNGQY0Aerk63utHyPyGmw34
x4RgBXccjCE+Et9cUjJHBD73oUs18Rv/AxKuxSJcGLzg8Ie4RJG2dtfuQWy7
uSHI+BcF5RUrc6nxQUS62O3xIF5yZZtp6d9BpMdn6B4gNvsW0Hh6CsmbYrHo
P+8vefRDQZqCeQ8v0os4f81Sy1WzKTR/fH/Dh9jSQq8rdDGF4CrvNwHE/ttV
ZcVdKfxbtrU9nDjqsenduh0UKic8UyKIr85xN0raRaG20Ng1kvjZl1Sazj4K
08bHWk4ST9mlkm3rR8HXe3XtaeIUj9nm56MpxEtG3I8lflBl2OJC7i2xZfoe
ccTlOts9VeMofNVOVo0n7uNcTnx0gYKpYuqVBGIDv5ntTTcobJvuF3yB2Pyj
waGbacTPfiy7SLx9mePEvtsUJHau5/znECpReziDxCc/5nqZOMEp71lZNjn3
Ao7PvEKcXvxh09lcCgrOD6v/c8Fsfvfmh6SOGHcirhK/DZp2RLGAQpnZNqNr
xP8HMSdHgg==
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.3]], 
          Line[CompressedData["
1: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
0nIV/h9MG/ki
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.7]], 
          Line[CompressedData["
1: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
           "]]}}}, {}}}, {
     Frame -> True, FrameLabel -> {
        Style["RRat", 25], 
        Style["Genetic rescue (F[\[Infinity]])", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.1], 
         GrayLevel[0]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.3]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.7]]}, {
        Style["kRat = 0.001", 25], 
        Style["kRat = 0.1", 25], 
        Style["kRat = 0.5", 25]}, LegendFunction -> "Frame", LegendLayout -> 
       "Column"]], {0.8, 0.2}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6817439062165527`*^9, 3.6817444626617813`*^9, 
  3.6817457447134843`*^9, 3.681791985358718*^9, 3.6817920677207327`*^9, 
  3.6817921040826855`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<Hypergeometric.eps\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6817439316986217`*^9, 3.6817439336431217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "0.001", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kRat", ",", "0", ",", "0.99"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "0.1", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kRat", ",", "0", ",", "0.99"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
         RowBox[{"eRRat", "\[Rule]", 
          RowBox[{"Log", "[", "0.5", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kRat", ",", "0", ",", "0.99"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<kRat\>\"", ",", "LabelSize"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Genetic rescue (F[\[Infinity]])\>\"", ",", "LabelSize"}], 
          "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Black"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<RRat = 0.001\>\"", ",", "LabelSize"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<RRat = 0.1\>\"", ",", "LabelSize"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<RRat = 0.5\>\"", ",", " ", "LabelSize"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   " ", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6817921500105495`*^9, 3.681792158605816*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
Vq/4f2HHx+A=
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.3], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.7], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
31xJoqn82GBmBIH/A7hKV2M=
         "]]}}, {}}}, InsetBox[
     TemplateBox[{
      StyleBox["\"RRat = 0.001\"", 25, StripOnInput -> False],StyleBox[
       "\"RRat = 0.1\"", 25, StripOnInput -> False],StyleBox[
       "\"RRat = 0.5\"", 25, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.7]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.7], Editable -> False, Selectable -> False]}],
                  "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"kRat\"", 25, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox[
      "\"Genetic rescue (F[\[Infinity]])\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1: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
Vq/4f2HHx+A=
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.3]], 
          Line[CompressedData["
1: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
           
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.7]], 
          Line[CompressedData["
1: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
31xJoqn82GBmBIH/A7hKV2M=
           "]]}}}, {}}}, {Frame -> True, FrameLabel -> {
        Style["kRat", 25], 
        Style["Genetic rescue (F[\[Infinity]])", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.1], 
         GrayLevel[0]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.3]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.7]]}, {
        Style["RRat = 0.001", 25], 
        Style["RRat = 0.1", 25], 
        Style["RRat = 0.5", 25]}, LegendFunction -> "Frame", LegendLayout -> 
       "Column"]], {0.8, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6817438889109464`*^9, {3.6817921531465883`*^9, 3.681792164721449*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<GeneticRescue2.eps\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.681843728432706*^9, 3.6818437368481836`*^9}, {
  3.6818437794941387`*^9, 3.681843804459958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{"1", ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Log", "[", "2", "]"}]}]], "/.", 
      RowBox[{"eRRat", "\[Rule]", 
       RowBox[{"Log", "[", "RRat", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"kRat", ",", "0", ",", "0.99"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"RRat", ",", "0", ",", ".99"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(\(\*SubscriptBox[\(N\), \(I\)]\)[0]\), \
\(\(\*SubscriptBox[\(N\), \(R\)]\)[0]\)]\)\>\"", ",", "LabelSize"}], "]"}], 
      ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(R\)], SubscriptBox[\(W\), \
\(I\)]]\)\>\"", ",", "LabelSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<1-\!\(\*SubscriptBox[\(F\), \(I\)]\)[\[Infinity]]\>\"", ",", 
        "LabelSize"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817973139462233`*^9, 3.6817973372335773`*^9}, {
  3.6818433768883867`*^9, 3.6818434110660934`*^9}, {3.681843458118208*^9, 
  3.681843459180597*^9}, {3.681843515385535*^9, 3.6818435549122796`*^9}, {
  3.6818435936242847`*^9, 3.681843604658481*^9}, {3.681843644257534*^9, 
  3.6818436472362785`*^9}, {3.681843681622759*^9, 3.681843740113747*^9}, {
  3.6818440385221972`*^9, 3.6818440388924303`*^9}, {3.6850054565564985`*^9, 
  3.6850054890481467`*^9}, {3.685005523084264*^9, 3.685005541301471*^9}, {
  3.685005678541453*^9, 3.6850057042325153`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXdYT//7+BWRkdBQIYmUUTRooJMiEko2qYxCVpJRFKJsDdEgEg1FRcpo
KNp77/EavdpKVmT0c12/c9/3+/pc1/ev1/V6OJ3X8zzOOc/zPPfzft6m7Tpi
YSs8ZMgQgciQIUP/fUZ15DU5/nLUh8+MOUHJV2dWMycDKxo2yr1ggA8buv6W
bEILc07457KNcu+R2xU81xxnIWCWv75096xyPvIrFSFzhscJGBHt0T83yJUh
H++/9EfUFwHT7mMxozOkCnmR2ItX8SqtTF53oNlZ5Xrkridun9m7oZV5uoLr
IhnTjNyQM+NWsHMrs2KdZPkGOR7yTr24TaODWpnXf1/te7CjBfmeGS/CCxJb
mVlPt//tCGlFHvt0257HJa1M0NbBW1ot7cjPDl+vJ9/eyowe8WjWWeUu5Iul
/r55+KeVOfPS+F2u/UfkDcnmNa7j25hPOzs3SMb0Iv+wRUL10/Q2/A5ezw+f
MPSMuSd6hs/7Vb8/J52qRc/AE/xjh9/WaELPwO3r0rODQzjoGfjs2Pqi3Zlc
9Ayc+eMk3BXLQ8/AnR/Py/U4xkfPwG9Lup6TndSCnoHP046yO/asBT0DlxOZ
eWDaPAF6Bn40bazH1kcC9Az8jewL9xNjyDNwsfF+5w0OkmfglQbP3GQzWtEz
8KCrZiPlpMgz+Lt3yOFU5FFb3A44T83+9d4TlfgdPlPUd+RUZ9WhZ+DalnN3
fTVtQs94H4Smu5514aBn3M+jQ7ae17noGfgEj6/jnY7y0DNwa6H4Up8FfPQM
vPipzJdwDh89A/c4M7a7/2QLegb+QubmxGWDLegZeMV5L1NzZwF6Bl60+NJc
nXYBegbuay4aGbKGPAM3WK6WXBNF9w94ml5qxT+5dzl6Bi63Ml3V2558ARdx
rZF+IV6D33H7+7q/jvPq0TPwu5Ua0dGFTegZ+LW4J+OH3eagZ+ADcXVxE325
6Bl4kYbe3EkHeOgZ+IQnY5UPqpBn4ILz/t8/FPPRM/CnFc+Sl9iSZ+BXE+NM
2rpa0DPw3Q0JQyfakWfgrmUh8Q8rBegZuNK7p0l/FpFn8OExda5R693p6Bn4
lVjN73uSitEz8MxbEnlFcZXkneVDAr6FT3xbi9/hs3XBtcunqhvQM/DFG6fX
zLNpRs/A+/21joWmcdAz8IBDbtVpUVz0DPzC41ejZ53koWfgpgWhUtw55Bnb
oxe3f1khHz0Df2WqY3THijwDf9ugbb2V14KegefNdHK6tI08A1d88KooIUeA
nuG45wXOd9qjOoj9NfB7nx2UU82pXwAupKztUHStHD0DN/O2mSz+thp/D/iC
qvnDcv7U4Xf4DI+UkFkR1YiegW/b3e+c0dWMnoE7R3KlrvVw0DPwu9Jv7H9m
c9Ez8I+DzHzryzz0DHxcubiooRZ5xnZWvhs6+t/1D56Bn1ee07JjO3kG3r1W
rta8vgU9A1cO4j70MSfPcHzuY+xqz4RVomfgz4YrKno4ZaNn4LmtRx8E+pWi
Z+DbtCd6HqqppPPNchsd08vzdWqxHcC7n4k8nCLUgN/hs+SB5fMrO5rQM/CU
H2dvN2qSZ+A/Lm3aFiVDnoFfTdx33J7PRc/AZR++FHsTwEPPwMvUnW5JLybP
wCuvbti2pISPnoEnRiWab9lMnoFzFrmUKpfTuAeOY7/+HA3Ot1j0DNxkyr2a
JpkM9Axc4oR2xoSbxdTfsdzA582arvEV6Bn4Uos1TTUXqtEz8C8KW4OVd9Vh
+4Bv3S5hZVrRgN/h03GPhLzdlyb0DLyMq1q0YR8HPQPX0XyppLuYPAO3bDQY
/vsnFz0D7z15NnJmGA89A6+Xcd931oA8A9924baKfhEfPQOXevZmcJ45eYb2
ziv1jPKsu4WegRcN7m87qJOOnoG7W3w4ste4AD0D94hebSOzl/pl4OkHNm9a
zq1Ez8ANfyv1vyusQc/AyxzztuqZk3fgjee15yuda8Tv8Ll6Q3+24FAzegae
80hpT7IvBz0DP/Z68qHvm8kz8D0rZ6ROH0Wegd/eHRg0+ikPPQMfekLDp5Mh
z8DDROXV/bL56BnaVVz8xSh+nid6xueJq1H39Ycp6Bm4/O5pe+Q356Jn4Hs2
L70hXV+CnoG/MlZVdVpfgZ6xH/UMar1kXI2egXffTD/rU16LnoFfLV2cVC7e
gMcD3F4i4b33qCb8Dp9Si5fsUyluRs/ApceJqs2O56Bn4EPXWN07cYCLnoF/
3jmycIEEeQau5j9CNOSff/AM/IzJtdOXdckz/P6ep4btEivPoWfgG46F+eUn
v0HPwJWOKBwfmp2FnoH3rPRStBMUoWfgerffu21qpuci8PEBEbVTSyvRM/Al
7fP5zrtq0DPwb7q/zSeH16Fn4GfE1DY3PGnA4wQetPd1xrJTTfgdPoXKi3uy
x5BnHPdNtvCZkcdBz8CrimaaN57gomfg0drmkZOlyDP+zp/SgWfh9L4Kv2O3
eNH5k7ku6Bl4j0BYz/tFInrG8/9osP7a3Qz0DFzXzqg3wK4APQP/dk+rV+la
KXoGHu7qPrbkWAV6Bn6+e9GxHuFq9Ax8yxabYo+VtegZOO97jGeROd0PwFsF
1kLrlRrJO8uzHgTkPPk3nofv8GnYK+D8VCbPwAe1pmwOquGgZ+Bvh9cezXXh
omfgc1ffkDMaR55hfxm3h1mp2ZxEz8BXR5sG99u+RM/AhUPTlKQr6b0F+JLV
P5QtDPPQM95/RjFms3aUoGfgT+5c2Zm4oBw9A3d/M2BskFyJnoGHPfEYuehv
NXoGnmo7dsvi4XXoGfiaDyJNbxvoPgEuGK4gfOtyI3rB596TG7624vR78Bmy
1PFAjx55Bh69TvC9t5mDnoF3TNtXanmKi57h7wImTZ7Bm3YcPQOXMXmi+TCW
3sOBf17kNYp/IB09A7/bf/DTM5cc9Ax8n9LhY+vii9Az8APlZ3TFptD4D/iM
/od+qbcr0DPwlSdn1I4tpuco8DOi+53ky2qof2R59S+ZAat//Qz2LyzfsG32
68/rGtAz8JDC1++/1DaiL+C/PcZ4PzGkdsBnsuG83zUryDPwN3FGzuN4HPQM
/+4xRsFr5I1j6Bn4xs+l8mP2PkfPwEuW7DV5Zp6GnoE/sOfk+Ylmo2fgr5bW
33MQKkTPwBWM+R0v55aiZ+DHkxKemfuVo2fgKS4PyszSK9Ez8Esen0TikqrR
M3B1vXrd0Vdr0TPwG4cXpnPVqZ8C7vSr4mHZqwb0DHxC/9m2rKlN6BHf/yRM
N0kcovbBZ/wmPUeTdRxmT/a1MZvlQvFTrmsHf2RcDbPYbLfmOeUk5E1Lds9V
K27C7/DvM6P1rjFDyin+yP77yqBv/UvkgnA7+Pe08/n+luMEyOHzbOjItgfK
dcyuHQYOnSFZ+DvrlN9bvRXlIoftBWYGUo1KTYyKRHGWZEwxbq9UcH/Sr7k8
5LC9sdmwA5pnOcyJlpibD3ZU4PbnCkyPnBHnI4ft+S9i5oXc5TJbme9vtFpq
cHuHR8z0vBw+cth+zaPhX75d5DGLgpYIcu0bcfvWqRHFIbYtyGH7T84Km0+v
4jM3XQwvx/6g83BIuEDU82MLctj+WWpBj/U3PjNEpXXKwCI+bu/k4+ttbitA
jvvfaecZeq2Fcai8Er/srAC31xvrfMWsRIActj9k+VR5/3gBs/CazKgj13tw
+3DXD5+iplO8F7j0pyXOycZtGJ+B/bS0iZntN6mmODLLDa5VNOo6H8e/h/Pp
ftB9Q1h6Ef49cF+pzBD1r1W4PZzP4r6J2w8r5+L2yLW4eUvX0HmF81lW0nRl
iF8Gbg/8zMnN2W0/S3F7OJ/Cq+Yo6+Sk4fbAH9/q4Bjk0nUG5/PBY60RV1bR
dQxcW3Na792RBbg9nM9vr06NtNRIxO2BcyZ0p6XH5uD2cB5+SXtXzAgLRZ/A
OZY/RumtcMLv8Nm20HBa1WoOfofzZrrvesA6EbrOYH9/xLUzwiZTXBv+vWX5
45Pp+xrwO46LX2iW1+2uxPYDX3grRMFCpQHPH/DNgd2C/LpmPE/AVz+u7x7z
730Wzgdwpc2SHxwNeOgduOaRizlZUnz0C/z05gvWFnl0HwE/q9GWFmTXgvcF
zj90JhnN/ET3BfBfq3ccfG9P1z/4aXz3qIsjR9c5HF/AtN8L9zaUI4fjc5Cb
YH9tYilyOD7FX71/axwLkcPxZdwa9unnulzkcHy9C+P+SL7KRA7H51H03cM+
8D2eF3yuWR+cHjqEvsNx+HKWd74J4ODzEf7O9Lv7Sse1HHw+Av/hrRPlGMbF
5yNw2fSZRe6PKe4GPMLYvd3CgY/PR+BLSisbF8pR/AJ4cFH+lZpoet8GnmDZ
+kZjjoDeV1k+NMhImblH/RccR8aKGJFVYnT/wnHcasqotC+k44HjWLrv0q9P
6fRcgePwWva82NOfvMBx9B36JtG8PBU5HMemy7MXXQh6zchHRVlJxbxjZrnK
7T6vHM3sfe0r5LqriakY1SKyoCUHeZml2yj3LA6z2kY3JvZHCfL1VWdFJT9y
mXlJ52qXna1EfjIm78ilSh4zQTpnWJ1IHfIPe8PSn97mM18dxOcfud6EvDtr
Z8lW3Ram0zZa1f0KF7nKvVDz9OwWxlLC7ENBAZ9+1z9d6P5yAX6H41gW1m2f
c7gCORzHnyeTozYolCKH45j0O/UjR1CAHI5j+6EtVQetc3C/S6YPHNgq58sE
RS3YsLqMg9/h399cuVHSV1LA9MXeq3uwI4Pa/1FpVcdYDpNoO0c9z74QeU0R
T+bubi6TKtZoNLConNoV67LLai+PCdk344jX+2rkIWsG89L+ve+7fzgQNMOk
AXmUzIKua518RsOrltewl4N8a/3Z+Gb3FubxYtdTytE85HcKq7M9RAWMZKfC
WMeeFuSzXmtb7z9LPuE4ZG8GXtv3rAw5HMd3q2Qdfadi5HAccz5vMX13LY/a
zR7H1WU1JQGWWcjhOOolP6ldy3mPHI7DcWeZ/ip38g6fyp++hA4sqMHv+Hfd
k4SqTpUzt06cj106pRf/Pba08vH61W34Hf7dfufQxy8e0Xf4vLx9eeskMxq3
w98dbRy6e2ZvOO4H7qfO+D4ru4OV2J/C393Rumpxy0OAHvH3fy05fvbf9Q3X
JfDOvaPrFyvQeA/281zkqMKcCgF6h+3rYh7mRIbw8DoGbjTvuWviOBoHYj7A
mGv7AsVb8TzB9nHXQlO1nPh43QOXU7HWTyqk8SHsJ+yl1PXzTCueV9h+ueQG
5+lTW/B+B66jU5eev5/GjbCfsecqdV7sbcXrALYv93T9nRrTgv0D8FzJVw6F
PTSexLjXmPNTt15txesGtrcdqf3t3mwB9ifAJT+F1cfvonEm7Oeo5rzs8shW
fJ4CjziT1D86g+b14DynZtwxzLi6EfcL59Pua8cYq9l0HcD5PK1/Tq6rQAu3
h/N2aehEh95Z6bg9nLeCw67DRSvG4/ZwfoK/u42b7v4Wt4fzs1Rmyo/8lZ14
vcJ5CDu5dYa01UvcHs5D+YWWEUW/0nF78C3uGa5arxuL24PvyVYapRvMQvTh
foO/O2+2XTdKjd4TgJumby25ol9P/Qv0KyuGXBfI1DLbvk4S7QpJRH78uj3/
rVoDctgPZ3DlmPpCeu7C9vtbT4k/aazC7eDvrsofUt0fQM8n4Muj7UYsdavC
+xyOb86ax+GOU6l/gHGH2NRBX+d19B3+boT5xrZkJ7rOMM4dukbI7/J/4rHs
7wtZVk5yDfPG/cDf6Y/xMi/fTvkPsP+fZ0ufX2o9ht/h76pGLJINm8PB5yDs
x/10aqtVroDhuauaeL1vo3G3zZUL3PkUJwXubhgnli3UyhSkfd4ycVwr9QNH
Na+6KNF36Leu7cjKC9PNRQ790E71dsX55z8gh35l210DianzaLwB99mdmSnX
t8ylcTmMm6YPO5qUNfYlPc9YH+MS9q0wOU7PJ/i7OxGmu/2K6vC8Am8rSi24
n0DXIfx7/J07hyOnVuA4Esb7Nk4r06MTWpHjPJv60tu2H1vxd6H/GLJ4tpNa
czJ6hnYmXOPxwxpaGU//jEfJ6nQdzYlZIKRh3orXDezv0JQ2rbpJ9B4K7Wnc
sf5VOIe2h/Zzk68Fere24nbg8+Cs8t6EZBpXA0/2y32xpovGc/D8z9OZ/i75
zFvcD/gPTRfbNX9WNv4ebB85s81F5cEHZnTNzpvSMbH4O+dvjIq+cKwGxz34
fiAVeeuYaiMzWWtCktf7bOST5s9q15TjMHI/l3cUFFB8JTvmVEGwKD1HgOty
+Q/ltFqZmTXC39a9prwy7qmwOXpbW5nAeutzXaVc3P/QE7pLUu7S+BB4Tr9D
9SNxATPVVH94TDa9H9U+uaLRforuF+BShzhD26sFTNjbydcdUjrwd4fP1bw6
71Mrcsy/qjI23PXv/tr3eXTxuteUbzbjnW96gHAbcth+0LIubaF7KzNn9q/x
mvGUh3bPVSm4SqINPcN7gdyCJFMFywr0DHz4UZuMJMda9Ax81VO3yJEDDTh+
AJ5VUh3jHNKM/oGPnx4qacjloH/Md7L0KknP5KJ/zMva0J3bf4WH/oHv7O9a
uyyfj/6BB4iWPptu0YL+gU/T1790qaAF/QM3Krypvmox+Qf+eW830xYqQJ/A
353fa+orRD6Bq4jfiFrx7zoBn/A+1eoz0jXQpBR9Yj5CrO+9/eFV6BP4C/Xb
HgeP1aFP4PW6C8vHbWlEn8A7RjJb1sY1o0/gEZ+O/1xZwUGfwLUeGivoPOOi
T+Cr5F6OeD+OfAKPM00Q7gnjo0/gD4/bTpivSj4x/2r5vAu+kS3oE3jyY8d5
b2TJJ/DOwLjYn+cF6BPzrMxDtQ7xBOgT83mCL/ePcC1En5i/NGNj4ojFFegT
uH2VwoZ7C2vQJ/AvdmkTc1bWo0/g4Uv3GKfkNaJPzMfJfznpeHsz+gQeXZbC
tDZy0Cfux3W+yL0dPPQJfKuwikT8Xx76BH5Qfc7sd9589AnczMhp00cp8glc
RvH1oUGvFvQJXL/Xs2XPEPIJvPJ2MrNmH/mE93eZEefXOSjmok/gfqcnBn6e
UIY+gZeJltYnqlShT+CG8Su9u7bXok/gUwVh0Sf/1qNP4Ov9rzuE6zWhT+Ce
DjJb+iXJJ/BqFfmQ/Kdc9Ak8cHlT6vIt5BM4nz+tv+ALD30Cn17R5hF+no8+
gU+QbJ8YNZR8Arfss3u47XQL+sT262h+/tHRgj4h7pGmIZM81SYTfVIeUW39
UPkS9Al8hm6g+F/9CvQJvFFbfYTZ5Wr0Cdxphs/RK0Z16BO4rf2kMJ2ABvSJ
+XejfDjF95vQJ/DxiUnp437TuA546+zHh9/GcdEn8OmzAvySNpBP4Cf2+5Xs
7eShT+Ca60Xlw47x0SfwwgkfJw77zEefwOsnFxuU2ZFPiBcJ7a270q/0Hn0C
5zwwz82MK0CfwLttrG5XHS9Dn8DTjw6V5uVVok/gGe/6bBf616BP4NdjL92I
+1uHPnE+0FIiUU2mEX0Cb95ucufcKvKJ/H6ZuMEI8gnca8qYz2UvuOgTePhs
m80+ZuQT+Eqnc5/2NvPQJ/DTXzxleneTT+A+oi67zzTx0SeMu1INfo3cWJOK
PoFPuNrenv8qF31iXtXVGQ9DC0vQJ/BHoy3q1WZUoE/gfdzHFl9+VqFP4K2y
xV5Wh2vRJ/B4yYCX2nfq0Sfwv1sHX6rOb0afwG2UJg3L285Bn7ifcWlPhowl
n8APnguREnvORZ/A/TVK4uqMySdw9Uhmy9BSHvoEvrl9XmazOfmEOKtTnXPE
9o9v0CfwfueH+y4nZKFP4Ps15O9c8i1Cn8DHmmnvWO5fhj6B5+on+t49XIk+
gXesbFmd11GNPoEb9M/Plp1Uhz4xn2d01jTd/Eb0CbxTvd5N2KoZfQK38DD/
VGrHQZ/Ab6hp2pqLk0/gjU7311pFcdEn8KW9Odu9dckn8FNip6SXpPLQJ7wv
XpVU363hkUjxYZZnCR0a1bA6A30CX/bKY5pQXT76BF47WSRn2KxS9Anc9ETN
EOGBcopzsnxy90jLE8er0CdwJ4vO+T1RNegT8ybK927as7+B4sMslyjd+CRq
WBP6BH63Z+VLCddm9An8Uf84gxMHOOgT+OJmbk3HKPKJvztLfeah+1z0CXy7
Q0jZWmXyCfPemqc27tNviEefwC9PNOgeWPUefQI3+TNS1MklF30Cn2BeZeeY
Wow+gWuX9r21DS1Dn8Ata+Mi/CdWok/gv53TrB6aVqNP4OOnZx7JFK9Hn8CV
ouJ56nEN6BPbs42/5IpaE/rE7RmNzKKbzegT+P4nemIL7TnoE/jhWQVTZgqR
T+D7vHrDT93gok/IF7jvu6tGp/Y5+gTe1fPTy+tpGvoEvu/g9IjtztnoE3j1
/qjdFm6F6BN4mbvNQqvDpegTuHWzoG5LdTn6BO45cfWDs8Oq0CfwRWuXqC3O
rEWfwDu7Li2etLcefQK/rnrn67T2BvQJ3KRm06rfpk3oE/iyRWqry243o0/g
j0TMitT2cNAn8PjoBb5/PnPQJ+RZLGk5qf1saxz6BK4+N70huTAVfQJfXKpb
N60yE30Cd7/58fngnXz0Cfyn3sP9PbtK0CfwrZONvXWTytAncJUVGsHtDRXo
E/imE0POJ/vUoE/gQwaf1qxVr0OfwAVVfPO7z+vRJ/CBW0eXfJFqRJ/AP2i8
7tXe2YQ+gdeLTIvq+ucZfGIeUElp19Tt5BPiOnZDpV+9DYpBn8DXbC3+llWW
jD6Bl/20GAi+kIE+gc+paowXFslDn7hezfXY+MPCxegT83n41XV3s0rRJ3Cr
Lxa+n2rL0SdwtT2eg7vPVKNP4CNucA46SdeiT+Bdek5r+3zr0CdwoQQP9bqv
9egT85dkvy0q0m9En8DFUzWGyh1rovsaxkdebu9KVtZiOyVZHr0/fHvQW4on
WCiWa3eHhDM5LlaiEzIpbiBde/n9BeW7jJP9aKnoNxSf2cjG5RQ5s6KZXooP
ZM9RHoj9kcZI2EePD/hM8Rb8tI+vXnSyDs9X3O/huXn2KcyAxen2XfNoPJ/D
7sf4uYhGpYDe32E/ekf0dAvPU/vj2f245T/mN4+heJQBG59TnGbWvuEmHVfJ
w3fBC1peM9zhuxSb/9L7uzUbt+tRUL8WsIeO6zo3wbzu33Uz+mfPAcdMinvA
PMXq3KL6vvPVeFwYt/s2M1LuVD1eh7vZ+Y6OgNjhJdebKI7neVhp+dlMpilC
Z8HRixRH+sTGjce0rXzdeYPiSDq1eV4Diz4weXpLvkU6UBzpBtvOyVq7G8bN
Jm+VbDsfFLxK+F1OcQ9oZ7CE402jgxT32MO28/7eB3G3v9F7+lO2nXn84BI5
R/L2lW2nXuiam758ek9fxLZzT9OZVQdNyWekaeh69yulTNnGn32h5kXoE+Zx
Vu1xWSU6SHGPT04loo17Sxjes05vdbla9AmfQ+x5S/stG9DnkcV/Th+5XsSc
FBFbHDyM4kgJbLzdzn5MVNcDiiP9ubm1dYZJAXNTJbZy7m2KIz1h27n6e7ZZ
xHGKe6xh2+n64U/t0Dnks49tp+c3T32tIop7zGbbqT7uy2DHTvJ5lG1nw54P
4y3a6T39DdvOP4cFUzV3k88hXv+/nROeDtUeVkFxj2vhHW4Tx1Uxv2Jb3KRq
KO4B81z6ZtmT6t9T3KO8eKKWY08Fc/f5hT93vlPc4yQ7XzZJ+1Zl7/Y69Amf
PTZWfz1mUhwphZ2n+LAlYIjUBYoj7VR0uq8cXcaM0Lt6yTqL4h7X2XaeTl+3
xSKD4h7z2XZKdEyJGH+R4h4VbDs9P818NkWdfJ5i2zlW9HWichHFPSax7Zxu
dWvqzh3k8x3bTmPnuCX+HIp77GLbubBy2tuVW8nnYSH1qKd36hj3zXv4R3Mp
7gHzgGu3fBkRnExxj8TZ1tYjjtcyuur8xue/KO4B84lbWjaWTXWuQY9/1t+Q
3LX+3/eIIVNFrSmOBJ8OrbapE6sb0ecy16TcZPVqRv64jLnRr2b0Ce0U7c4+
aidBPqGdN4uSNW420Hs6tPNJS+Q2f1+Ke2xj23lU+P2auTrk8y/bznWB2i2u
xRT3CGXbuVZ07VnLbeRzOdvOq6tnvjato7iHueWpyqVTmpmrUduNfpymuAfM
k4ZteLq1Or8QfQZ4hF+996uR2fDc6mm3Yjn6hPnWomUaGtNjqtBnc0wF01/b
wPgfmT//Y0QteoT58BWyJuM6FlAcCT73nPqiv9yBnjvQztgZMm2ZOynuAe3c
l9PguFGTfEI7C4t6j3j00Xv6YradF8fI1ffep7gHh23n8X1b+SlLyOdFtp3f
c1pupBRT3EOZbafwaH/jY5vIZwDb3qIpZ6cNi6TnK8yvPX+xOUDydB76XPLp
e53MUi6zed1A2oQDpejTi52PPu8mahHwk+IenGE3FxjHcRgh3/uXvAbpuoS8
gAPHj69+GkxxpIuySt7HpnKYWZzNAVkdDegTPtdVvS27bUVxjy62nabxEW6K
lynuAe109dzo6LWGfEI7Ob4aPHFh8sll27lmvsmF5AiKe2iy7VSaH6OxzYB8
erDtHOoX3rGvkOIeo64MlV4o1cLsb9tZwWS8RZ84b2A8MKvzCj3XY4KDHHZf
5DNq3S4Dhk//8xxi5w3lfyYbG++gfnPdC/V87y885tNth9X6eymO9IidH+zm
rN6qJU5xpG9ZOUqpu3jMk9QfHqr7KI4E7dTZaWtu9JPiHvA5/f2ctOpEintA
O52V1wsLRVDcA9qZ5J5yMXEnxT0s2Hb+VH974aoY+YR5zNOfvibMf0pxj+9s
Ox29XdfKM+Tz9MKI6HNbWpmfPsUu/417FLLz5L/f2yxwyqW4B7Q3bcLMRaNL
CtDnUTZ/xOy7kOfCRop7vLeutKlfKGB0lepv+PEq0CfkYS2ZmmZ78QbFkeyc
DiaJhrcwa1raa3kfaTwM7fwriDW6e4fiHtDOm77aGdWWFPeAT5PUoPFP/lDc
A9qpJv3MOiKV4h4f2Ha+cM2dmnKE4h5SbDttJtZfiJUgn3vZdn7k22Rxoynu
0c1ftTT/bjtTWsM79t+4h/7hOz0717czWvv9Nhs+pbiH9w/u3R+j2hlfkxPc
tFV56BPam6igf67brQR9aoo5f1dyaWN2XY+SHHaS4kge7Dy86rMx525NoThS
9bRx69Z3tDIGVYk2i85SHAnauezBD+bUIop7QDsLjpRvOj68ET1COxOvzmh7
9IziHvCpyK1rs5Ejn1psO68td0vyLqa4B+QLFFve2lJzkuIeNWw7F9X5nzgv
ST53+PRUSTV3MoIZC5r/G/eInaR38emdToap8n6k+J3iHkLhHupGazuZMWKn
87On56DP9fNLm2pFOpnK72bZx72L0Odjtr0BLpJyk+dQHOn7sn26I453MMHX
QyZ3Z1agz5XF8a3BczsYpRkiw7coUhwJ2jn+8Q9Pjx6Ke0A7NcbNz3n3huIe
0E6PgWqh7bsb0SO0882MW88u9VDcAz6Vbtb5Sc0jn/1sO2cvFn93pI7iHiZs
OxU68xpPu1AcqUjf96CN4kfm+Zmvi/4b91DIbZTtr+1mUjNmnbRY9A59Oq6f
lX3Dp/vf+OrgsNuWWegzo9HJaYZJN1OuE19Y6lKAPqX2pU1LGtLN3H2zPVte
hOJIe9n25sSYHX59g+JIb85sPtN+pItZ1MfIBjVVok9o58N7Y0aEvqK4B7Rz
3aY76za5UdwD2vn8oWXWHyWKI0E7jewP7jJ6TnEPabadqxYHj3+gSHEk+Gw7
/1B8lj75fMu288YU9RFaHIp7LO1eIBxt28vo91ntrv9AcQ/IZ/mrJrKoe0YK
+hQMKbSsqehhpv5MVyz7SHEPyMd5MvmxsXgqxT0uSe15JbKsh/kdlm1aKEpx
pNoHsXvu/frIHBK7Jt3kQnGk2Wx7/SN2Js9PojiSIdvOd0M3cybdp7gHtDPj
mZvoOEuKe0A7r+y+luj9h+Ie0M6WqMGnvIsN6PMy2845rhc+KX6luEcd2079
WfeElq1pRj+QByIRkWq7UF2AHPJx5IIbTsipNqC3gZr/H9+4n91677QfF3kO
Gx9QnFUa/7Kb3tOF2XiIzNz+OzVL+ciN2fhJ6xL+vkNJPOQF7H6+9TlPHB/O
pXk6Nl5ReVhz6Jb1XPS/hW2ncUmKi0MQ5S0rsMfhMV1vbqooD89Lm/Epx5Ad
L5nq2ui5Rvv5yCF+YuLO8BMiKD7Qym4vXvvi8uGzlOcDfjw0s37sbKS4Co/1
852pGikYoOdfJntch78NYwQL6P10XH3VbCs5d0b80CH5kdJtyIex1/XIEo36
P/UUB4D8qZcysk3y2lV4viBfLnK6z8uLjZQfBflynTUNn5zVaHvIlwvxSFi5
vbIcOfiz/7HRQfs1xW3gvWDPOWH/vYHFyGF865LhY9gpX4DthON4/tP8/I4t
cfgdPrMHjy2XMaH7Gu7f1/u3+ui+pjgnxOvs3f+uPunXjPuHPLuU7yc/Rt2l
/A3Id5qpOnx47DS6HoDrJp4R1PDoekDuk9Gjc4XGY5Bn+96uUMI9pQw59BOT
Z3AT5n4sRg55szfjormKi/KRw/vs+qVFrlfmZSOH97LslNnNIS8ozw3yXXnq
kbbb36ShZ1x3dvul1ch/41W474AnpT842j6P7hdcd3ZFeETqV/IAfPQ3jsfN
e3T9Yx7jjFXbxqu24PUPfHrWgxvZkwR4/QNPluqqzz5HcbFV7H093jBE634b
B7koe3zvNrz9+2UrxTf02e2PnFkm4vKT3teesfe7n/GfBpmGSuSTIG/C9vqn
HW50XiDe5RrQxzl9lc4LxG30tR53KnZQfz6G/XedC9m+7evpegDua6VRJxpL
fqC/+urksWenMLVTl43XuTYJKbaPr0D+hI371VSv4rYtK0f+l42b5SWJh22e
UIoc4m/fZugYVe4roeuQjbfUmWcp+E4vRA7HEX5ihtLqQbreIO5x6+6MM9FV
Och/s3EJ5YOHbUyq6TqE48sQu6JyWT4TeRP73i1QMpcuYTKQw3urUITwb6GP
6cjh/ffBYGzZCtV0PO+YX9xQLDrfm66Twbr/3+/pF+VJt5fRc+ETy+vy70i0
pbdg+3pZHul2ZfGt8wLk8HwRfTrro8seum7hd/WOtOTI36G8zRJ2P+ek5gRa
/xUgn8DuZ8/MrFVfjOk6xzqB0Z8WlsS2Yn8O/MlK/gSNbOqfP7P737VxyBbt
cBrvQTvj887WJOQ30HwDe111GpedL0+rQ97BPnf60tRd3X5VI89nnyN+Jnpz
KvlV2B64H1fXe9o/a6Dnzjz2+TL7ZL/BBydqJ7R/VMOOQ+q3KR7Vzf7ua7EN
4m5plN+YxT4fPbduOfxoL3Gsi7DE4uLBov88p9i4hOF3Ec65i9SPwXtx/5L8
2JtCubg9vF9rOBvv9z6djBzelzXu/TLOP5GKHN67P9h91xHRSqG6Dey/G1pb
TUkqvEZ1DODvtMOdu5Sp3gHwW+seRh50o/X5wDfFcUdmFdL6CziOETuHi42Q
dcC8T+CL8vsmZj+kPEvgVhruqsYjqd4Z5oUpifrqFFI9QJz3cYm9bl1JeVrA
u1d/OPvjOdU5Aj7X0zbly2HKjwG+V/yPeJ0E1YvBcZ9Vhen7MKpvAjzUsMfR
RIXm1zEOobylVvY+zRMDbzqat1RvJHkD/uj680b9A+QN568+WqoJV1qgN8yD
M7DXtZGsRW/AbcMqdorkNaA3zDseNO+wv0d1zYCnzpHoq+ij+n7AL9gs21gn
oDwt4MvOrYga8YrqGQF3tvfVdD9E+THAuVMfO1aPJW/A1XrS5Yc8oDomwLMM
90T1KJA34Ndshh3j36F5YuCZD1eYPRSm+gXAj6xrrPeypbqNMA6xFT3hYMCh
+obAxe5OLDUuqkNvwNNEmmV9yxrRG3C/Z41/byiSN+CnHo+YsGMWeQOuad4g
1DOKvGHe4szdgXnFVLcIuIzyFM8yV8qPAZ47Yp7EUlnyBlzhvFOWfhjVKwF+
s+GEus4M8gb80ZlRfpIBNE8MfPo8jcytwlRXFJ4zi9rTfv8aVkT57iz/3WkT
2cOroPqSLJdP+OMoOVCDPoEPs+jYVKVE9Q+BX3Sa4v0jqQl9Ar+7tNkqyInq
H+L7zSN+zNw9lPcGfPW8LfNOLiCfwCPfBVt791DdIuDfJSQ9+Lcobwbft6Ye
GP1ehXwCz5SRGJ8US/VKgFcf1xgom00+gS/b0bYk8i6tZ4Bx5fwPb0dbrstD
n8C/VIksFhpLeerAJ+gVJYYvpbxq4GmHtZV2Xac6h8B/zDJ/+5uhOofAT70o
yV5wmerB4XrPxbkJze+o/h7wz44h4Ur3KB8OuJ/qVSFFa/IJ3He4c661GPkE
btn9tG1NFOXTAN90LiH9tg75BN5sK/TK4i3VKwF++322qrY6+YRxTaqviOws
EVpfAXzdtGz/tm1UzxC4v/toJvgB1TMEfu/06FthQlTPEPiayd4c/ULKDwa+
9OSX1p1zqZ4h8I/zni8LmEw+gWseK418IEw+gSvMdDS9WER5csAfqmQd5F6k
OlDA7wRJ3dGZRT6RL5a7tzyV8myA53u8GL3AmHwCHzHbsDrnPdXZg/Fdj6nb
Pq/R/ljnF/jXqnV1lrFUTw/44pUDKY73qJ4ecB+VTdn+UlR/E3iNTXfX6iG1
6BM432u9S/I5yhsGPv/v5zU3YqieHnBt3gVD/SCqBwc88fjm310RVE8P+Lgl
SxW0D1L+HPCNMUcmXZxCdaDwfctlk2RQKtUtAh5TLT8sYR3l3wDXdO2Liqih
cTCMix2W6eWM9LmKPoH3N42M+DQhD30CPzh3mPBE/VL0Cfxn8cmT7YlUNw/j
33tSOjdGUl47cEG2UWKSRh3VbWT5A9fTMu0HqG4e8NBHIsPsdlPdPOAu1goG
VhPIJ3BVvcIlOxqonhvw+vzilmm3KK8O+PZdhwwO6JJP4Py1FlGOpVS3CLjx
z959o3fQOjEYp39PPCflp0H1fYBHy4ZF9bq5o2fgoXlpN8VSaL0Qzrd4XX0X
94XWtwDP9Z8dwrX/z3oMlj987t40cwfVOQWeOrMthddNdfOAFzpWyKSrUt42
8ITYc4NT1RrRM/CV2qMU635Q3TzgHR0Xs+aakmfg12NObHw0nDwDH5L1y83t
OeXhYZ7dL63uj2vIM/Ac54ld7xqp/jjETUPmbmh7pv0aPQO/s4oTWfzUFT0D
PzzSO3LF80z0DPzW5o7Lg2GF6Bn4xMBfC/UXUH1C4PWjpL6eVKT6hMCt7RfO
efmC1hsAn2miNm5dP9XNAz7Pvefwxj+U5w08beYYfn4R1c0D3qI4ufzeMarH
B/yDyGRdcWeqmwe8Uyi0PEmZPAPXeCAp9iWb8vZwHerj2KuntpNniEP3zdMf
rKpMoHX7sM4mZbjk7/PO6Bm4xNDIV1P7PqBn4C6LL+35G0B1qIG7Ldql2SZL
9QmBj1AOO+T5m9bJAN/p/Ejx0GWqMwu8cpNa5pOCGqofynKnNI2E6gqqmwe8
W0b+q2xUA3rGvCS7Ofrp66k+IfD4q5IOqdX/qdPH8iTZlCbnYKqbB7wiNIX/
yoA8A19vOfXd6mpadwpx/dQJfOFdP+LRM3Cdk1fN7pacQM/A3VZ+tcp1ofqE
wCVPSsntL8lFz7h+9OT82SaTqT4h8Fpbz4nXe6luHvDOy3vqHjhSfULgYjsO
/TnygtaBAD80VqlZ600tegZ+xGeUYLoX5d8DT7sb2tupR/UJgT9xDJAf+b6J
8q1hXm6pv/BlSfIMvLdQW6fzDdXNAx4sYp2Ua0GeIc7BWI31uelJdQiBqy22
tzizkuoQAv9lm5Rvv5rqEAL/nHN3i5Qr1SEEnv7wyjzhQaqPBzzmSEa193Gq
Qwg8sXr9j03PqA4h8Ck/AsPNY6kOIfBQo/HuFe5UhxB4fYNp4CdVqkMIfNv6
e/djE6gOIXD5rwN6a+SpDiHw26PHTohdQD6Bxy6+WPm2mIN5rhBXGasybdiV
VU2UJ8ry+5MUOrziOZjvCPzd+2ddi2q5mLcHvL5yqu6b9zzM6wIu72m/PPAi
H/OTgKcfOhKpO7sF80KAaxcdS7TWE2B+A3D++lnD/WMEOE8PfEtXm6GPVCvO
NwNP6o3WST7divOmGMfdPtFzVX4rznMAH7Zh0lQXmTamnM03hfjJ2E2JSe06
TZjfCfzHj11OtWc4mKcI3HzOzVUSflzMYwM+389VeMFpHuZjAY9M2e833ICP
dRiAe+kFP9gkKsD8A+Cn1/UGll0Q4Dw68JFfx79f0SfA+WDgzw0O3F+5keoJ
AC+xTNI3jGvFeD3EN6T3lfQOD27CeD3wTdEa2yZc42AeHvChBT5aQt5czCcD
Hjnexv3MIR7mSQDfmsSXnv2lBef7gR92iXBbfYjmrYFb6vUrBDXQ/CvmMUmZ
VQQZtmLeJ8QZDkhFp3+Ubsb5HuBLZxwxLI/i4HwPcBOvucsO3udingHwUBOn
DQptLThfDtxfSGqxmQ3VVQNeojM3fU6xgPIjYb66rszvkl8z5vkBV3FbEFdb
ysH8AODXs7vnJja34PwxcDEN1+X5mwQ4/wfvrUc/TJbYKcLB+W9cR7VKw9+4
toWZxF7f+H7E5t3lsf0A8LvuYsNSbfIxDxv4iRue56QlyjCfGPjROCOpbRGV
mBcLXLhtlOSFxzXYDwC/s3Kx8CmNeuwHgI/58/nbk3/nA/oB4Fej7Y4eucHB
fgB4QcS8DLcNlK8DfGi9cra8KA/7AeAKMzf9VovmYT8A3Mp+8tw/DB/zAID/
7h/jsD+Hj/nx+N5xoKN6imoJ9gPAO6d+091RU455wMCnpl0x1P5Yhf0AcMOo
oClTfGuxHwDeoMvZ9bG5HvO3gA897pU0NpqD/QDw5rYb3nfsuNgPAL85ydyk
bxwP+wHgK0c97XZ5ysN+APh9yW9Dpi3iYz8A4/ZR8hoXU6eUYR4z5j29+Xlq
cGkl9gPAUy6cmjHYX439APAyXU9Dlc112A8Af7lZ+qlnOgf7AeDK95MK7jhy
sR8A7hkhJW0nyaN8EZZ3SWe9a4/kYV41jIcdroQa33pSjvnBwE3eH505wr4K
81yBm4asrD1bWYP9APDQSG0n63/3KfQDwHM6B23KT3GxHwDelX6YGzuBx0xm
71sYNway+VSQlwxc1i92+sA/v5BfC/zwLf85c3ZWY14O8DRG9Ni2eg72Dzge
jotJ4DhzMb8ZxlG5bH4R5OniugcVj64vQ6qw38DxXseZiac4HEaFjePA+CGA
zZ+BfAt4jsS1vykeWlyNeQ/AS9OKDm870YB5D8B3ucrdUw2j+CBwyA+B/g34
+bNXX/b/e3+E/AbgwzkM59RtPs5jAbe59C55xsIWzKcE7nyw8UpcBsWp4Ln/
c7ppmPs0qv8C2+8enXyh3boK82zgueMwPzFO6EQe5tkA11Qctiy3tBLnF6Hf
NvB6NzKnMh3nrYG7ce92NntlY54N8JviK53qHEtx3h252/DLD9vKmIXs+iWs
19K11lc9Nw7zb4BPNVK9OHi9kGln50EhLmdZOTb3uuldzL8BXly6szIvMIfh
sNvjeqZXOz7aa9zB/BuMv13Mm2Io/QHzZuA6CW9Zlj43zJ3qarG8c075FJ0u
J30YdwFfZmHET0+mOqdwXhxezNyQolVHeRIsN1m9qS9doQrzb3Dee4nP9JFl
VK8V+EajDrFFWhxa7wnzkoevn1p5iuq14jpILUW1BU5UrxW3X6z54JIh1WsF
fsfk+i+lPqrXinnEdhzfjZepXivwhX59VQ5iVK8YuOmSx/FKFyn+DNeVzoFn
Tn1nKZ8G8381xcyeetP/SwL7+Th3eYdKIf1/czjOv2w9pJxL/98c8PBjMTfn
/KG6HsADzX78Gsah/y8H56vnbR2rEUz1FIBP/FBiaMJQHVTgPgbOi/gFNO8J
fIO9at2+VTRfDvfdcWennIzhVKcV68eMLH95Z1gR1fVm74uY7yvDz0zNRA7X
v8mKw6ebY9ORw3UevCjTe+SlFLy/oD3FYbI+e5c34nMQ13+kPHPx/jeeh/Ew
5o26H5H9c5WHz0E8712SmW828vE5CFzL6/PEKqEWnI9HD20Zomr+LZjvDlyQ
lqrIkxNgHg94UPikFnXLoIQZwW4HPJfNw4E8GNjP0DeuhZoqzZgHA7xCd/IS
s9/NmAcD/OEGC4fJwlzMgwHuq9ssXGHGxTwYzJ+aFy2zU5rmyYBDPg/kweB9
rfS2tfIrD/NggNs3ped+UKY8H/xdNv8H8mCAS+hYKh2p42MeDPD+k38Df69t
wTwYzEP31NRLcWrBPAbgu4WX+v+ua8E8BuAjGnJFNv1uwfx74KFNarbLNwsw
jx/b6Z4nkDouwH4ejqPT9rhlyrc0zEeB7fed0eJunZOBzwvgqsXK9lsOV2Be
Dr5nKR65fWxjIvar4LtW0Wnmz7kTkWPdFN+pOgKV7/j/g0J7GmVH7vE/XaYP
+S7wu2J/AufZ6Fdjvgvwq881DySV12G+C/AqLxF3zzkNmE+P79f7nl1MyqI6
C8C/KWi3fX0rwLwiaH+inqGUn2YM1suDcamkV7zF9rlUxx/6vYl9n8c+9X+J
4xZ8vu+K1Ao/T3X84HejM6Z1fx9oxfw2XI8SUug/cOI1jidh+xvKkoIHw2g9
M+z/Zmnam3eZrTj+wXmWYwMaqcb0/30C51z2NDuUlYrPKfjdvo2ZbyquZuM6
KGwnu64Z1hdhfmjCZ4ehXXwmlu2vMA+h1yR1/KJqXHcEfN6qMSu2qfKxPwH+
u2+FlGwVH9fHwvPwwqi2ppZ/zzlYpwQ8suvHJMWjPHx+AY99u+X+zNl8XDcC
3K5p+vyL/1k3ChzWjcI6YTjvpxw/tRs7VTGH2X4G+IbirlxnzTq8f4H/PPhy
bGICF9cjAc/Pst8a7MrD+xF4Zcw1B5F5fFwfAjxD8gS/p5CP6xyAw7pLWLcM
99HEObELvstX4DgW+Hq97Sf9ZWtwHSnw6WPsDgTr1+N4FfhWzt/WCT85uG4K
uP/fPc8qi7g4XgWuoxIccfw6D9ex4Lx8Z/ts7YV8XI8BPFjYNnBzMR/XFQCH
dY6w7hr6AZkGvUqjllJcPwz81cCUvjqxKlwHC9zxW7f9kR212J9jHZHdEVsu
TGrAfhg4J+H2mYN6HFwPBtxmyXvNyVO42K9i3mvShYjFrVzsT4B//SWWbhzE
w3UmwON7pGIeLebjegngrU8mO/355wHy/jE/kV2HqMLWw8T1UuvOJX9ufYX3
HfDhsVJN39oa8fkL75vGxdNXDJGOY2LY+xHrnHWfu/007wPej8CF/eMnyzo0
4P0IXFSl32iaWRNjz/ZvcN8M7hIx8n0Rzuiz/QbwF2qzyn8kp+H9CzyuU12j
6E4u3r/ADwRUHjj+qw7vX+DPfxo/9W9rwPsX93Mh0rg/tImRYp9H8F6po3rw
bn/AfaaI7f+B65r4ptmbJeO6euBdvDM60m+zGAf2vgYeU7ba569IEa57BG4V
/NAwyqsWn7/Ar144orzCox7XoWH9ws8RQtdWNeJ6KqzbcWGDlnlrE7OBfY7A
+2zJwPPbYbG+jBXbbwM/YWWw6IDwa1z/D9z+1QGZM/oZzGv2fgd+5X3lgI9V
PpPG3u/Aw9qmrVIsLMF1m8C3n9dv0dSswfdTrLM42mfIcrU6XEcHXLzjZoXo
QD2uBwPup2Os0XWvEdc14fyLzUefhZObMU8U3qcO9t6wrjn0ktFj73fguTsD
DZ2nvsd1+MA5aQPLPUfnMrvZ+x3fyzScz0qqFOO6aNz/p6GR30zLcD0qrp/4
mfI3tLsKx1fA49dOFJvcUYPrA3G+Juq3RfGrOlznBvxUjHVCjFUDrtcCXvRi
nXIMrxHXHQEP3lyR831FM66jgOdm9uzXVeKjaT0dPGdhHQesM4H+we2Wc0J4
XAnmteN8B5sn/3+Nb7E+D8sbn+TtntlD1yvwCV/1dKtNaf4MuEdwW9suv9b/
s53w/IbjSnM4o7I8h+LXWM9jks6018rUTuAdUc/izVWpPwI+aoWq3KF+mrcG
rtnfc93MltoPvEssoTAum+pmAC9OjLLxU6Q8Qmiv0tJS3RCG1h8BbwtUy/dk
6LkIvPZAc42sOtUJAZ5iHpcxMIQ8A59ibSTYwKP5YOA/5s/0TltL7QQ+QX5Q
PusFrfcBvm2qSclBccrbw7q5419XV2U2YTuBd+0LD4mzo+cccNVm76YQY1qP
DNx989dPEVV0nwOX6M1MNDKk9uD4qsvCui5MgL8L7Zq/+0775tWUBwbcachv
59hb1O8Af8BbW/SqmO434PrWphKndSlvH37n2WSR/tO5NK8JfGiNbERBLuXd
wjhWUHBg0xRhWo8PfFvkoM6VrbQeH3j6/UcflqvRenys5+R2+2JXCK0fB56h
Pq3yTRblGwHfdHDn0u9Had098Ie8vqXzp9O6e+AjRTJz1mTSeQF+OWDS2EXb
qF8GXpf6u9SHT/0XzmusmqwTtYvG0xjPjxleu3UtraMHLj1joHT5AOWnAh+T
M6RRvIzqBwJnZo5YF2BaQ3E6luvOj/9j5ELrOoGnG1v8vutDz3vgj7f8cLqg
Q8cLPOGLuP/IMlrHjesqeucWZ1rT8WL+Veb71+J8yieG3//8zl16dhytZwde
e8pA8YYHrWfH+poiAhtXIRovAv/mHTJ684JabD/wa2OzJtY/ofEB8AtHhwfv
W0HtB75QYfjGsbXUzwOfq+UhrWBD7wnwO1sLXwu7rabxOnBfO6MbTBbVxwNe
2/9Weu+vamwPxvnfOdiaJtF9h/v/bh60wpzaA5yrPMcwtI7WhcH+/P9nnTXw
lCNCbSr3aZ01cNvqry5PSyj/A3hqY+DSt1n0PAbe8FvsbOZ/1mnC3/3vumPM
x6j5yst9U4n7AR67vU5ZvZD6Pfj3/11Xi/X2Emy9pm6h+g7Av0TbaQ3toO9w
fYWpHdu+xJrqGwAXDhB1UXhNeYTA+Z/0fH+vp/E08HeRrfs0uf/3eyj8LpyH
y19UFAJPUP8OfPwF+VYlf5q/xPpMoqUqnZOoPRjH+Ka4Y1c65eFh3btRXsut
NlN7gDdJR8jLcqhezf++h0I7MT/5hf6JtXGV2E7ghaZmzz06ab4Z54XteGtU
/ag/Ba7mIdLQf47ec4AbHFPxFp1H7QduN/Ha684Cev4CX9VVsb/DktoPvO2g
4zcuh+rD/O97KIwb4DqS79kW8aqTxg1Yh+nijRzV4TSvD1z2dN/4jHX0XARe
6TvpeZQ41WEGXrX0Rd24vVTXBfjqhwvHDW+lOjlYdzDo2bKKuzReAh4d9+QL
34A8ANcrW1B+pZreW/C9dViR9bOd5AH7lY/tZRwO1XX53/dTaCe0a8MTsb5n
SlQfD9plK/mqZJfbK/QJ/DTX4NbJSZm4H+DOET5WOT1UJwT4FNVInZeXaP9w
fNWFzQmSQxJw/8DF7zUsUdD+gOcLeEdm86WgIMobAJ66QuVwYzI9z4Drej/J
Vt9O88TAXQ9kPlGopvaA14XvvVU9Bml+Djj/RHv2zRBa54jvj+VrXGufUr0L
4DNuqPd+rS/CdgJ/1L3yftEtmqcHPqfxaOUPLap3iv2zwon4kJc0fwx8Q5fL
sUBpmheB8z9+4OeSRweoXgfwvbdVcw0tqF4HcMbfINBxBPWPWL+wNEbG9zfV
lwAubLGjW1OF8jMwD/D7+gStU1R/A/iYt9eNLsrS8xjb816G5xxE9SKAGz/c
WfXgL9WLAP550SkXERNa/wbXdeTckwd7PaleKPB7zOWEpnCqF4rvPRqT/D/Y
0Dof4GYjY6z5y6jOA3C+377y0XdpPQDwflv1+J7DVB8DeL5xmE2GGI2j8H12
q4hG4A163gN/KbtRNraP5uOBt4aEB9UvprqgwK/7N1X6H/2/57Wxv2P5wtaZ
cj+yab0BcF/eybTDg1QvEvzxrQd9qmpov1gP+H70lPQ7lH8G/kR/OC9J8qb3
QLgee+2CV/3Ipjyt/33Pxfq0sA5+RWB3yGxaxwp8VlCJs6kvfYfjbrxgcnhg
U87/OY8T+H/EvTFfkG3v+i0bTm7ZS+vNcX0iO8+F9Xhh3lNIv2b1WGo3HMfm
Q0OHx22ieWL4/Xw2DwrzKSHO3z/3iuMJysOD7XfKhxg4yOYx/w8jeyDJ
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
N/oT+SZwS/Rf8mvgzui/5QfBXdB/IKvAHQvnvJ+mZ1AOr3y1Ou9xVO6cU75d
+YN8/sGF7fcp8EGF7eVA8HO5bXy5fFFh238SfGDhnF5x537O2R75GVxLvqb0
8UL0XM45TnbN8QJwP31P8Bxwb/C74DsL54TK50ciI3J/D63Lexjfs3BOqvnX
t5zN8bHodzi+AnwMeBN4FrgX+G3wHYVrCtVcynOjfBLHp6FHaa0ht+gdGPsm
dy46QN8N3B/pl7vWuJrx/uiPOb4GfBL4E/BX4Ee0XtAX8Z7fZq6/liHV5c9k
J6yLqrJ9cE90jxRnNfY5ulrmdd8rxeKlnFcNfCv6cdUMesakv1T8Utzi+1WX
naBPZLxP7vpucO6ctALyBH+zHce3aa1w3vaMtUYPZGxA7vxKfkJ5xRKOa+gb
g2sidTivBrqV8hH+/vvM9dry0ufdgf6Mv72Z8cbyL8gt4CaF/Ybmdb78QHDs
0hq8Off6bsDY4uC4oXV0U257qa+6O3e9Vyv3PTWHep5bcufSOwf7L8VF5TGL
S8/fHqXnsGHyn4tSXD5OcxhsLwvAd5eevz31e+76ql7u76L8R2XNPaXntgV6
EmNHIvWRvzPXHfUz+8WRyT5HJNwns185JfkNzfGgNM/DUyzsnrnu1ni/VGvr
m52kurD0eW+Uzn8Hpr89PXd9qNpwj9y2q/kVv6HfBqrGKn1t+a4NpZ9lfvLZ
pyYfNSr97XAOt0CPTnjL3ByI1oXuo2t+mNk3jEn45GBfPCDYhmRLXYNrVNWq
RxeOM/qO+p57JzsUhyA7bMXxXuiRhb/boxw/zfG+uf2/Yp3m9S6O7yt9fZ0v
21btsEXmOWmd1uOkwna1Kn23tunbKQ4pfj2Y1qDOb6WYWdje1nO8ItmAbGFV
+tb65s8kW5JN3Vva/luij8/Nb7CMs2tzn1MjOI9VXX4t52wJXs94D+5ze2Ge
53t+a5E4gT2D7agSUhG5jr9Zkflv5TO0TvXO+r5bpO+yWc8Nfh99cfousoFr
cvvyIarNc79LzWDfIB+h9/k6sw/ROxwWjOUrnk/vpfe7ofR1+hfmMZTLF5nz
Stlw+8xxUMd7gK9I8VpxW/VLJ60f1SilbeGd6NjbMfd59dPa0fv2TT5qS63J
3DzUV8nGFIdkoo3SuL61Ym+ntI7Ey3XWecH5Rw9xOtxrTordiuH10lrW93i5
tB3ej361tM95oDRvoGfrLt6itF9ZkmxM97xBfifVU+2TX5VPVd0qv3JM8i3H
B2NxXw2S75A/l430Tnai8+WP5M811iuNT01z8kHmONAz2a1qrKP/b90JKy73
SXOn5+gTPH835ubBFJu2ylw3901zq/k7Lr2P5kr+SXmNnln3Oy7lmb3Ts71W
Ok8Zw/jk3L63Smb/K/xbWvvn5+YGz8uNK2XmNeST26Bn5/6tUnr+s5Ot6l0n
pffVO56T3kvnz0LOTffRvX9P8Wta8h3K5YYi9cAz0WPT/MheZbdaBxuTDcuW
m6a/Va6o+lQ2LV5OdjElN4+m55ma1qHyoLbpHOFxyf7FG4rbW1+aH+6qbxn8
Tt2SrWqddk1rVRzaYbIP9Pjc76nnnJJs8rXM37NbGm+Svp++Xb+E5dP6Bsdt
xQXdX3mkvo1ySeGP0rtMTNdUfBmYrqM5nJC+neZpfLqXuMqz0t+KKxaW32iX
5nV84l1aJRtT7rFXbr8n3lw+YXCKMzPTNVX3X5Lm7Z/ccXZ0cG4unk4c3dXI
AuSq3LydxpWvi5eoLY4HfUrwfCt+PV24rqmsvFd1B/jQ0s+rd/jffFya3mVc
egY9n+LmjNw5vOKvsHyXfOeFuWtvcSDyjwdH80eNwDsl/k25sfL3eem59czL
g3M81WsL0rje88ng/FAcQzX+9iGtdc7ZtnR+vjP4KeVYiqvRXI84n1OD+UDZ
ezvG/83NjYwK5rDEZdUL5nmUPyunFs+jfEx1nO4/Lz2DuCFxRFsXvp7WUeX0
vvPTO4t3Eh6d1uzstNa0xuakda16Slg11I3BPMBPyseC+QfxCjcE5/8/Mv5g
cF79L/h+cE/w35qD4DxcDu6B4Dz8H8Ws4Nzya/DM4BpBHMZFwfzVV4zfVjjv
+E7zzngb8LfyJ8E8m7iQecHcxXeMLwjmQH7QfAfXDjn3nRVcM37D+PxgfuN7
8Nal6ynVN+oLqe4o9V2C65EimhNTbqe6VXZ6ebLVZcE5f4zmbBtrLtDDg/nb
EcFzPzv5vQ9K277s9vzgelD8orhy1Y9/ML4wmD/5HXxfMG+jmuPeYK7mL8bv
CeZP/gTfCu4A/llzFczJ/FK6zyEuPYjrCOZnfmP89mAO51fNT3R9Uhu9Xek6
pRG4FvgJ8C7gT4JtSTzZl1rDmXmJj4LXozgBxWLlAcoBFN8vSL5DtbTyavm9
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
tfic+dF7JsSn3RK9P0b84bLofQPiGP8DrUdesg==
          "]], 
         Polygon3DBox[CompressedData["
1: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
2osaDD7MGqH3jA9eu1fIOcJPC+8rPCvaFp8VPjC7peBnZA69gNpmJDYcfY8h
+B1x71P1TCvXXqOXk220W7CGgO2ST1Yl3qn/YbZNdgnWNLBV+Ae5ZyVsJNnm
uwZrDvjCr+r3VXtBuLHmX0rWGrDJF5P1LWo3aji0qM+DazdqDmoPbKJDsKay
pPg72kgz7DdZ09g0WNNB60AD2TC4xv+38Ae0pJWx8WRN5D/Bmg9aCZrgBsJP
VNYK0Wh6Cz9bWbvpEs1viAfUEnsn2xvaEHwHDaEfMb6ytrCVju9Zm4PBxdAI
dtX83MraATGinfCdlWMHPtc+WKPEF9Ggtg/WSNGmsJF1gjUebAe9Da1gTGW9
jHzbXr/XsDKfejKZuxykY97PthEKVO4Z2yGGEks31jnPJ8eUZsExgFiDJrYd
MbmyVjY9WT+BY8G10GwHaX5RZS13S41vVOIv3HHDZG6FNvZ2tibSP1gzQSvJ
5BDhOcKtCr/qrWMrcmQ0P9mkNsfduNjn5sJfkT+K/WxWWzO7i9im619VWUNF
b1xZY1Ox3eB6+Eb4cWW++4z67/F+4THkM+En4My1cwj2NFptX811Lfn1PDhU
5TVhbbZOzu1wALjA48LtanOuGep/lazfoePN1/xZ0e8DjRL+wPp0qJ3T4JeP
JWtTvONpaHdqbWo/I/6xAb9X+x65V+Lp+oV/PZrMiT/WtdcTfjY53tPnGlwL
G2CN+E1+u6ta69oa5O3J1+BavGP8f3G2Df8PviF8brItYhPYxpnJvoaP4Ctj
hTvWzunw6R2TuQAcAa6ABtOj+Bf+f6vay+pvqbGu2EIyV4GTwE3QJLoX/28E
/8HGKnMMuMY52EBlm8K2WGO0j3GV1554s0Hxf/zxoOT427Dki7OFJ1WOAcSC
Ecm5n5hB7DglOXZ1Kfn3DOGnKnMEuAIcA1vH5icTL5N/i98klhyYnA8blHx1
ZrQ/ohnD585Kjj3ELGLXGdGxDJu5THMXqL1d2cfwNfwJX+Ud867h8HBrbOK5
8j6XUX9ZtdvUvzbZl4aqva9+yOY+cCD0mL81thv5p3a9+2+yXvhe7fr652Qu
Biejvj4mOZc1L3wFoo3++H7t+vkn4oPwjNr1NzaD7aDhUw8cnZzvmhX+Qk22
NT5Ru1Ybmsyfmhb+8FuynjK7tr5ZZ+ubi2vX878n6yFzauudfyRzWzgueuam
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
nb1HxV4Vmj165v8BFnqXBg==
          "]], Polygon3DBox[CompressedData["
1:eJwt13eUVdUVB+A3b0bpdUBgQHovopEBxYKRZkk0sWCJFRRUpIOgUenFBhoB
NYpYUFAEC0VZAkKooUuxUCQouKR3aUPIt/PuH3vd9/vOvvPKPfecOzU69ril
ezqVSr2vzlNX5aRSdRw/zUqlLsxOpZ6Tv3Z8nH2osZHXl2vcx/vK3+jLN/Yc
38/6sQWsOXue7WXxBnNYU/aKvEAVeJ1vvJ1aKJ9Wb+jbqe9eY9P4k6qc13mO
lVUL73tG3z/17dJ3n7HpvIC9yX5l98dnZ6fYWLad3cGmsKPsBfYdu4lNZEfY
cLaOtWdvsMNsGFvL2rHX2TH2Ivue3czeYQfZELaatWHj2SE2lK1hbdlr7CR7
lf3EOrDJbBg737E1X8SqycfVy/IWfbeyScZPsH+wbez2uAZsOCvheANfyerG
d1VXe71MXwNj4+SWqrOeCnKusQGOe1gX9rm+uuwFOV89yLoYH8q3yQfUM2y5
3Cqum7E72QzWzeuqfGpcb69LGq/tWEdd5hq14o/qqyXnGRvo+Dt7hW113m3s
A/Ye+83ra+N3UC2d24FN0Lc5+Q2+4GfZ22w365jY39hsdpR1ZyvZI2wpy1YD
2RZ2N5slH9HXja1gzb1PruN9MT9YIz33qC/lY/p6sFXGu7AlLK2eZZvZo2yZ
nKMGsa2sL9scv7Mayw6x/myHXFW9xU6y3ewB+V3vUV7Nl59QW1klNV7fEX19
2I/yBepVdpD1Y1vkimocO8x6s01yWTWG7WUd2Xz5jL//BNvAHmaL4iZXTzv8
wEr5DZbLucm58T3yWVnHe2OusobOK8kWysXVKLad5bLv5ZpqItvnnLLsO7mG
ejv5LA/FvS6f9VkGsE3xm7M57HfWi61hD7C57BTry75lndlilqWeYT/G3GKd
5MlZmTkXc68T+4YVsP5sY3x+9hU7znqy1exBNo+dZv3YetaLbWRl1Gi2h3Vl
K+XCahj7D3uMrZALqaHxG7A/sq7yh/5eFTaYXcMeY5NYZTaIXcseZ1NiPWVD
2M1sRNz3rCV7k13PBrBZrBEbzW5ig9n8ZI2N9eU61p/NZA3ZS7GGst7pzJod
a/co9lc2ii1hV7IJrA3ryaaxWmwE+wsbyRazK9hbrD3rwz5L1ohY29uyXmw6
q81GsjvYJLaD3c3msD+zQWwea8bGxTrFnmSzWWM2hnVna1gxNZL9wnqyDXJp
9RLbzbqx1XJRNYL9HPsC+0Wunsy107E/sVVyETWc7WA92Hq5lHqR/cYGsJ/l
amoCO8VuY+Pk9T7fDexj9ic2kM1ll7Kx7HY2nm1gN7Kp7Eb2FPuSNWEvs1vY
6FibWevYW9mtbAxblewVsbaXds+sZXnqNbaLlWHr5MrqdbaT3R97sHzSuX3Y
Ona+vo+TOR7r1Xz2rL5DrIn6hBWOtUpdb+wPyV66NPYndU7PlfH9WMVY69VB
ubGaygrJNbzHcfma2OdZcVaB7ZSbxjxKfvuLWNH4fWJvZTX1NWaF43uzjaw6
a8bKsHtiP2MNWBNWJK4B28RqsEtYSXZX7APJ/taUFWMdYg9mtdjFrHjMQ/ZD
7EGsItslXxxzlZ0xvpKXi/kYc1GtkC/Qt11Pw7g39R3nVdh++bK4nixHX+uc
zHWN69tVzw45T99ePc3jfjWWzf6rJsp79HViM+KZJZ6TWIuY+7H86rmQHZAv
V1/FM1fs2zmZ+yzut2rOe16upu+onqvjXjJWNL4D2ybXj3WHHdNbnv0kN4h1
kR1lldiv8iWxJrACVp0dk1vFesKK+XtV2RH5qmQeFGGXstKxv7KtrD5roTrK
H/h8JVjfmE/6SsX+yrewenoasZxY39haViUn9f+Hynflfc59WJxl/Bx/h+1l
D7GZLEvfe2w/68xmsyJserIvxLz/FyvMpiX3Qm+2kBVlnyZre+wfi1iavc8O
sC5x/Vg2m5zOPAvE82w8157HPkpn9v14jpjHBvt8J1l+rLOsdKxp6oTcTM1g
peQc505JZ55B4tlirnMLsU/YiWR/W8CGxPxgV6ivWYVYW9Rh+aLkPorfvphz
P0tn9u7YoxY7tyY7xdrEGs3K6qsdz8FyO7WU5bJa7LTcNtZ8Vob9Xe2W68ae
lIoJbb7ry469ha1BlVkdViC3V8tYuZiP7Kx8nVrOyrMGLB1rPFvN8lhx9nk6
s//G88YS40/Fcx2rk878X3GOldD3RTrzLBD79FJWL/7hiDU0nXmOjXWoPsuK
9TfWSlaJPa32yPViDrIs+S41M9ar7My1/Lfj/wA1jqHU
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ssuXVEYB/B1nONWqifSgZGjD6DxAPoENWgO2jpoeqQEkRIDKUolHVQM
pBph5DJBmk51YKyJjt0vpRXRBxATMfFbMfj27//t7LXXXl/2k47+7PtECOGb
+ijE/MLlkmMcTIaQlm/VkJxhl/uf5adyt/yM+6kQeuUG+UDuk1vlQzlu0CsP
8Ld1w/F5TvKS87zmKpOe/8lK/uICS637pHb0I8yobEEIu/pG7rGJ+2zmAV/y
kK94xNc8ZgtPmOMftvKUbTxjO//yDf+xzneV2W9CnetHWaNqfde2PsNNprnO
BFd4Zd0cL/iFe/zALfZwgzn+4PN4TtbzK2vjXLxn1j7V8rR8w3H9Iw6zSn1X
Ffo1PuQKyznDMua9q1N+IL+V38ml8YxyXi6J5+SyKo6z4JIqivPioiqMM2Uq
3rMuKyM8dvlPYwo98lTcO3H/D90BhrVGAg==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0EdKQ1EYBeDfkoW4ATUmamLdQ8hccAEKUbfhFjR2we7IDhp7iZIMEktA
ceIu/N7g45x7uPC4r2tyujDVFhFFSh0Rtc6IOos0mWiPWJDvfFDmiEYqoltu
cckVSwzZm/To21S4ZpljetnhhluG3V2RJ6TZ5Y5v+71c5ZQ+9viyP8hH1jgj
wz5PPLPOOX+03D+QL1TZ4CJ5jz0rD3nljc3kjfb+5Dt8MuI8IGf8m1F9UJ/V
x/ScPqfn9HF+nH/JM88/kq43Cw==
       "]], 
      Line3DBox[{886, 316, 1204, 311, 1503, 1167, 1158, 613, 887, 1159, 1344, 
       1082, 888, 1160, 1345, 1083, 889, 1335, 1346, 1084, 890, 1490, 1161, 
       1085, 891, 1491, 1162, 1086, 892, 1163, 1258, 1492, 893, 1164, 616, 
       894, 1165, 1347, 1087, 895, 1348, 1088, 896, 1349, 1089, 897, 1350, 
       1090, 898, 1508, 1249, 1091, 1253}], 
      Line3DBox[{899, 1237, 1168, 1205, 1216, 1217, 1504, 1194, 1169, 1259, 
       1493, 900, 623, 901, 1351, 1092, 902, 1352, 1093, 903, 1353, 1094, 904,
        1354, 1095, 905, 1260, 1415, 906, 1261, 1416, 907, 630, 908, 1355, 
       1096, 909, 1356, 1097, 910, 1357, 1098, 911, 1358, 1099, 912}], 
      Line3DBox[{360, 254, 822, 282, 255, 1494, 913, 1262, 1417, 914, 638, 
       915, 1359, 1100, 916, 1360, 1101, 917, 1361, 1102, 918, 1263, 1418, 
       919, 1264, 1419, 920, 1265, 1420, 921, 1266, 1421, 922, 1362, 1103, 
       923, 1363, 1104, 924, 1364, 1105, 925}], 
      Line3DBox[{939, 1109, 1368, 938, 1108, 1367, 937, 1428, 1273, 936, 1427,
        1272, 935, 1426, 1271, 934, 1425, 1270, 933, 1424, 1269, 932, 1107, 
       1366, 931, 1106, 1365, 930, 653, 929, 1423, 1268, 928, 1422, 1267, 927,
        1495, 1173, 1172, 926, 849, 1171, 1206, 1170, 1246, 1238}], 
      Line3DBox[{953, 1111, 1370, 952, 1437, 1282, 951, 1436, 1281, 950, 1435,
        1280, 949, 1434, 1279, 948, 1433, 1278, 947, 1432, 1277, 946, 1110, 
       1369, 945, 668, 944, 1431, 1276, 943, 1430, 1275, 942, 1429, 1274, 941,
        810, 1175, 940, 1500, 328, 1207, 1174, 1239}], 
      Line3DBox[{106, 302, 496, 107, 497, 108, 498, 109, 499, 110, 500, 111, 
       501, 112, 502, 113, 503, 114, 504, 115, 505, 116, 506, 117, 507, 118, 
       508, 119, 509, 120}], 
      Line3DBox[{967, 1449, 1293, 966, 1448, 1292, 965, 1447, 1291, 964, 1446,
        1290, 963, 1445, 1289, 962, 1444, 1288, 961, 1443, 1287, 960, 683, 
       959, 1442, 1286, 958, 1441, 1285, 957, 1440, 1284, 956, 1439, 1283, 
       955, 1337, 1438, 1177, 954, 852, 1234, 1208, 1176, 1240}], 
      Line3DBox[{968, 1178, 1248, 1251, 1507, 1112, 1195, 1179, 1256, 1509, 
       1113, 969, 1371, 1114, 970, 1372, 1115, 971, 1373, 1116, 972, 1374, 
       1117, 973, 1375, 1118, 974, 698, 975, 1376, 1119, 976, 1377, 1120, 977,
        1378, 1121, 978, 1379, 1122, 979, 1380, 1123, 980, 1381, 1124, 981}], 
      Line3DBox[{982, 1247, 1294, 1506, 1255, 1254, 706, 983, 1382, 1125, 984,
        1383, 1126, 985, 1384, 1127, 986, 1385, 1128, 987, 1386, 1129, 988, 
       1295, 1450, 989, 713, 990, 1387, 1130, 991, 1388, 1131, 992, 1389, 
       1132, 993, 1390, 1133, 994, 1391, 1134, 995}], 
      Line3DBox[{997, 1296, 1451, 996, 1297, 1452, 998, 721, 999, 1392, 1135, 
       1000, 1393, 1136, 1001, 1394, 1137, 1002, 1395, 1138, 1003, 1298, 1453,
        1004, 1299, 1454, 1005, 728, 1006, 1396, 1139, 1007, 1397, 1140, 1008,
        1398, 1141, 1009, 1399, 1142, 1010}], 
      Line3DBox[{1012, 1300, 1455, 1011, 1301, 1456, 1013, 1302, 1457, 1014, 
       736, 1015, 1400, 1143, 1016, 1401, 1144, 1017, 1402, 1145, 1018, 1303, 
       1458, 1019, 1304, 1459, 1020, 1305, 1460, 1021, 743, 1022, 1403, 1146, 
       1023, 1404, 1147, 1024, 1405, 1148, 1025}], 
      Line3DBox[{1027, 1306, 1461, 1026, 1307, 1462, 1028, 1308, 1463, 1029, 
       1309, 1464, 1030, 1406, 1149, 1031, 1407, 1150, 1032, 1408, 1151, 1033,
        1310, 1465, 1034, 1311, 1466, 1035, 1312, 1467, 1036, 1313, 1468, 
       1037, 758, 1038, 1409, 1152, 1039, 1410, 1153, 1040}], 
      Line3DBox[{1042, 1314, 1469, 1041, 1315, 1470, 1043, 1316, 1471, 1044, 
       1317, 1472, 1045, 1318, 1473, 1046, 1411, 1154, 1047, 1412, 1155, 1048,
        1319, 1474, 1049, 1320, 1475, 1050, 1321, 1476, 1051, 1322, 1477, 
       1052, 1323, 1478, 1053, 773, 1054, 1413, 1156, 1055}], 
      Line3DBox[{1069, 1182, 814, 1068, 1489, 1334, 1067, 1488, 1333, 1066, 
       1487, 1332, 1065, 1486, 1331, 1064, 1485, 1330, 1063, 1484, 1329, 1062,
        1157, 1414, 1061, 1483, 1328, 1060, 1482, 1327, 1059, 1481, 1326, 
       1058, 1480, 1325, 1057, 1479, 1324, 1056, 813, 1180, 1181}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{341, 234, 1187, 273, 235, 1345, 429, 624, 1351, 443, 638, 
       457, 1423, 652, 471, 1430, 666, 485, 1440, 680, 499, 694, 1372, 513, 
       708, 1383, 527, 722, 1392, 541, 736, 555, 1464, 750, 569, 1472, 764, 
       583, 1481, 778, 597}], 
      Line3DBox[{414, 858, 792, 829, 793, 1339, 841, 818, 794, 795, 1346, 430,
        625, 1352, 444, 639, 1359, 458, 653, 472, 1431, 667, 486, 1441, 681, 
       500, 695, 1373, 514, 709, 1384, 528, 723, 1393, 542, 737, 1400, 556, 
       751, 1406, 570, 1473, 765, 584, 1482, 779, 598}], 
      Line3DBox[{415, 348, 830, 320, 1505, 819, 796, 1490, 797, 431, 626, 
       1353, 445, 640, 1360, 459, 654, 1365, 473, 668, 487, 1442, 682, 501, 
       696, 1374, 515, 710, 1385, 529, 724, 1394, 543, 738, 1401, 557, 752, 
       1407, 571, 766, 1411, 585, 1483, 780, 599}], 
      Line3DBox[{416, 859, 860, 831, 843, 1501, 842, 820, 798, 1491, 799, 432,
        627, 1354, 446, 641, 1361, 460, 655, 1366, 474, 669, 1369, 488, 683, 
       502, 697, 1375, 516, 711, 1386, 530, 725, 1395, 544, 739, 1402, 558, 
       753, 1408, 572, 767, 1412, 586, 781, 1414, 600}], 
      Line3DBox[{8, 294, 1201, 23, 892, 38, 905, 53, 918, 68, 932, 83, 946, 
       98, 960, 113, 974, 128, 988, 143, 1003, 158, 1018, 173, 1033, 188, 
       1048, 203, 1062, 218}], 
      Line3DBox[{401, 386, 1340, 420, 618, 1348, 436, 631, 1355, 450, 1421, 
       645, 464, 1427, 659, 478, 1435, 673, 492, 1446, 687, 506, 701, 1378, 
       520, 715, 1388, 534, 729, 1396, 548, 743, 562, 1468, 757, 576, 1477, 
       771, 590, 1487, 785, 604}], 
      Line3DBox[{421, 610, 1341, 422, 619, 1349, 437, 632, 1356, 451, 646, 
       1362, 465, 1428, 660, 479, 1436, 674, 493, 1447, 688, 507, 702, 1379, 
       521, 716, 1389, 535, 730, 1397, 549, 744, 1403, 563, 758, 577, 1478, 
       772, 591, 1488, 786, 605}], 
      Line3DBox[{423, 611, 1342, 424, 620, 1350, 438, 633, 1357, 452, 647, 
       1363, 466, 661, 1367, 480, 1437, 675, 494, 1448, 689, 508, 703, 1380, 
       522, 717, 1390, 536, 731, 1398, 550, 745, 1404, 564, 759, 1409, 578, 
       773, 592, 1489, 787, 606}], 
      Line3DBox[{425, 804, 805, 1343, 876, 874, 1508, 875, 439, 634, 1358, 
       453, 648, 1364, 467, 662, 1368, 481, 676, 1370, 495, 1449, 690, 509, 
       704, 1381, 523, 718, 1391, 537, 732, 1399, 551, 746, 1405, 565, 760, 
       1410, 579, 774, 1413, 593, 814, 815, 816}], 
      Line3DBox[{594, 775, 813, 580, 761, 1469, 566, 747, 1461, 552, 733, 
       1455, 538, 719, 1451, 524, 705, 1506, 879, 881, 880, 510, 1507, 691, 
       877, 826, 855, 854, 496, 677, 825, 853, 852, 482, 663, 824, 851, 1500, 
       850, 468, 649, 840, 823, 849, 848, 454, 635, 839, 822, 847, 846, 440, 
       621, 1504, 838, 821, 845, 844, 426, 612, 1503, 837, 806, 870, 869, 411,
        607, 868, 817, 867, 866, 873}], 
      Line3DBox[{595, 776, 1479, 581, 762, 1470, 567, 748, 1462, 553, 734, 
       1456, 539, 720, 1452, 525, 706, 878, 511, 1509, 692, 812, 497, 678, 
       811, 1438, 483, 664, 810, 469, 650, 1495, 809, 455, 636, 1494, 808, 
       441, 622, 1493, 807, 427, 613, 789, 412, 1496, 303, 827, 315, 788}], 
      Line3DBox[{596, 777, 1480, 582, 763, 1471, 568, 749, 1463, 554, 735, 
       1457, 540, 721, 526, 1382, 707, 512, 1371, 693, 498, 679, 1439, 484, 
       665, 1429, 470, 651, 1422, 456, 637, 1417, 442, 623, 428, 1344, 614, 
       791, 413, 1497, 835, 834, 828, 790, 857, 856}], 
      Line3DBox[{601, 782, 1484, 587, 768, 1474, 573, 754, 1465, 559, 740, 
       1458, 545, 726, 1453, 531, 712, 1450, 517, 698, 503, 684, 1443, 489, 
       670, 1432, 475, 656, 1424, 461, 642, 1418, 447, 628, 1415, 433, 615, 
       1492, 800, 417, 608, 1502, 836, 832, 863, 862, 861}], 
      Line3DBox[{602, 783, 1485, 588, 769, 1475, 574, 755, 1466, 560, 741, 
       1459, 546, 727, 1454, 532, 713, 518, 1376, 699, 504, 685, 1444, 490, 
       671, 1433, 476, 657, 1425, 462, 643, 1419, 448, 629, 1416, 434, 616, 
       801, 418, 1498, 310, 833, 385, 864}], 
      Line3DBox[{603, 784, 1486, 589, 770, 1476, 575, 756, 1467, 561, 742, 
       1460, 547, 728, 533, 1387, 714, 519, 1377, 700, 505, 686, 1445, 491, 
       672, 1434, 477, 658, 1426, 463, 644, 1420, 449, 630, 435, 1347, 617, 
       803, 419, 1499, 609, 871, 802, 872, 865}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  PlotRangeClipping -> False,
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[\\(\\(\\*SubscriptBox[\\(N\\), \
\\(I\\)]\\)[0]\\), \\(\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]\\)]\\)\"", 
      25, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(R\\)], \
SubscriptBox[\\(W\\), \\(I\\)]]\\)\"", 25, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"1-\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\)[\[Infinity]]\"", 25, 
      StripOnInput -> False], TraditionalForm]},
  AxesStyle->Directive[FontSize -> 16],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->650,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 0.7299591611303027}},
  PlotRangePadding->{Automatic, Automatic, 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.802530078180745, 2.5595343454106363`, 1.2843945078974073`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.681843412105686*^9, 3.68184346123458*^9}, {
   3.6818435174193525`*^9, 3.6818435200416794`*^9}, 3.681843556853614*^9, {
   3.681843597775402*^9, 3.6818436482602787`*^9}, {3.681843684155689*^9, 
   3.6818437424647017`*^9}, {3.6818440408840714`*^9, 3.6818440672088766`*^9}, 
   3.6850054517368565`*^9, 3.685005543553336*^9, 3.6850057052871304`*^9, 
   3.6850057405730715`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<GeneticRescue3D.eps\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.681843819789009*^9, 3.6818438207597113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
  RowBox[{"eRRat", "\[Rule]", 
   RowBox[{"Log", "[", "RRat", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"kRat", " ", 
        SqrtBox["RRat"]}]]}]}], "]"}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.682256902560987*^9}]
}, Open  ]],

Cell["\<\
We can take the Taylor series of this solution for kRat small,but it behaves \
poorly:\
\>", "Text",
 CellChangeTimes->{3.678547426663123*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Log", "[", "2", "]"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"kRat", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eRRat", ">", "0"}], ",", 
     RowBox[{"kRat", ">", "0"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["kRat", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]}]], " ", "\[Pi]", " ", 
    RowBox[{"Csc", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "eRRat"], "]"}]}], 
   RowBox[{"2", " ", "eRRat"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"eRRat", "/", "2"}]], " ", "kRat"}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{"eRRat", "+", 
      RowBox[{"Log", "[", "2", "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.678547436660448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"%", "/.", 
      RowBox[{"eRRat", "\[Rule]", 
       RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
     RowBox[{"kRat", "\[Rule]", "0.1"}]}], "/.", 
    RowBox[{"t", "\[Rule]", "100"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"RRat", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
HI5fTav6ilTjSZfMUBJx/HOLLbu/4n/+/nJu
      "]], LineBox[CompressedData["
1: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
zxHvg+XWNY/if/L4tfo=
      "]], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{0.7069645742317914, 1.2405415419477512`}, {0.7069742026764693, 
      0.28585860186604667`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.30000000000000004`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.01, 0.99}, {0.28585860186604667`, 1.2405415419477512`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.678547442643015*^9}]
}, Open  ]],

Cell["\<\
Freek: At this point, you might want to try the approximate solutions you had \
found before for the Hypergeometric, as they seemed to have the right form.\
\>", "Text",
 CellChangeTimes->{3.6785474554932995`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{"1", ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}]}], "]"}], 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
        RowBox[{"eRRat", "\[Rule]", 
         RowBox[{"Log", "[", "RRat", "]"}]}]}], "/.", 
       RowBox[{"RRat", "\[Rule]", 
        RowBox[{"RRes", "/", "RInv"}]}]}], "/.", 
      RowBox[{"RInv", "\[Rule]", 
       RowBox[{"Exp", "[", "rInv", "]"}]}]}], "/.", 
     RowBox[{"RRes", "\[Rule]", 
      RowBox[{"Exp", "[", "rRes", "]"}]}]}], "/.", 
    RowBox[{"kRat", "\[Rule]", 
     RowBox[{"kInv", "/", "kRes"}]}]}], "//", "Simplify"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["kRes", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}]]}]}], "]"}], 
   
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6785474648377285`*^9}]
}, Open  ]],

Cell["This hypergeometric can be written as a Beta function, see:", "Text",
 CellChangeTimes->{{3.6785482917826757`*^9, 3.6785483023665686`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}], ")"}], 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], "eRRat"]], " ", 
     RowBox[{"Beta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "eRRat"}], "/", "2"}]], "kRat"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Log", "[", "2", "]"}], "eRRat"]}], ",", "0"}], "]"}]}], 
    RowBox[{
     SqrtBox["2"], " ", "eRRat"}]]}], "/.", 
  RowBox[{"eRRat", "\[Rule]", 
   RowBox[{"Log", "[", "RRat", "]"}]}]}]], "Input",
 CellChangeTimes->{3.6785483954192214`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"kRat", " ", 
         SqrtBox["RRat"]}]]}], ")"}], 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Log", "[", "RRat", "]"}]]], " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"kRat", " ", 
         SqrtBox["RRat"]}]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], 
        RowBox[{"Log", "[", "RRat", "]"}]]}], ",", "0"}], "]"}]}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "RRat", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6785483958194666`*^9}]
}, Open  ]],

Cell["Using complexexpand this can be rewriten as:", "Text",
 CellChangeTimes->{{3.678548335751381*^9, 3.6785483529865932`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["kRat", "2"], " ", "RRat"}]], ")"}], 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "RRat", "]"}]}]]], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"kRat", " ", 
         SqrtBox["RRat"]}]]}]], 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["t", "2"], ")"}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Log", "[", 
           RowBox[{"2", " ", "RRat"}], "]"}], 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "RRat", "]"}]}]]}]], " "}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}]]}]}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "RRat", "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.6785484069716578`*^9, 3.678548423329958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Approximation de novo", "Subsection",
 CellChangeTimes->{{3.6824954071727295`*^9, 3.682495431463084*^9}, {
  3.6824955182591333`*^9, 3.682495521544482*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowPlotNew", "[", "kRat_", "]"}], " ", ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        SuperscriptBox["2", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"100", "+", "1"}], ")"}]}]], "-", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "0"}], 
          RowBox[{"100", "-", "1"}]], 
         FractionBox[
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{
             RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}], "/.", 
       RowBox[{"eRRat", "\[Rule]", 
        RowBox[{"Log", "[", "RRat", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0.001", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "kRat", "]"}], 
            RowBox[{"Log", "[", " ", "RRat", "]"}]]}]], "/", 
         RowBox[{"Log", "[", "4", "]"}]}]}], "/.", 
       RowBox[{"eRRat", "\[Rule]", 
        RowBox[{"Log", "[", "RRat", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Red", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6824954440490828`*^9, 3.682495507199255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowPlotNew", "[", "0.0001", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ShowPlotNew", "[", "0.001", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ShowPlotNew", "[", "0.01", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ShowPlotNew", "[", "0.1", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
+IElZxsUZXoaC4n3hbgZLBVqQ8eSYb/fxLNxz6t85NswKpOZ6tJP4XwZq9Lm
QBuO5PyqP0+joMv5oFwxrg39gw6aW+lkvXiUFT8/2A6rSxN1T4ZJ+zlxrRij
dghcdj+bRrzkjk1GjFk7nL24Rz4Q7/Lmj4+1ascF/Q2vpohjfQ/5xbu0g9WR
cfDwCIUTQV1GyVHt2LaUd4iHQaEpdoqRzmqH1MayaqtRCiXlCmIlDzswe1XU
b3icQql0T+CakA7YbnshN01c5hAqGBrWgf2tHxOFmRQqpfgX2Md3YKiwwUWL
uMGe9VO6oAMjkv3r/YgHJfJ7XYY60FRVIrZqgsy/zcEXals74SsiJGzCoiBQ
yLvqmV4nWrKDTW2JF4mUxvHs6YTEI39/N2Kxgg2R3YadCKoU/hBJLLNI6tF9
206cXfDdaoh4fS796vDjTjj9mbjoxKZgvMBNL2q0E0WB7eLuFMm/ivsGxeqE
iIrotD+xauCj7O1fO5G8QrQxgph3afKqkb+d0Fry7Mhb4nyVNiF18S5c59sQ
/ZtY9oBmZ6luF8JuX3e68oXCePAX56HgLkwGWR0+MUnBU+5C/DrdbixwZD9Y
8JXC0jj3awo7uqEpv1F1MXG6YtA+6b3d2NtWWbacuHtVHsV7pBtzX7/W/0u8
SW2BDv1sN6Jtjl20ImZpx7aEBXTD3av6VSHxcePOBbw93fjYPBFh843CZMtE
xwytGxFVYj8dif2OcqR9He7Gvr2P9G8Q55qvNhqgunEg72VdILHoaZfoIu4e
/NljeD6PuNJ+sdaVdT2YclHu4P1OQdNn33najR6YdbT0RxO/6S7ftsOzB6u7
x7tSiDdr6C1JuNcDjtqKmizirT2bys4F9ZDvTQV+JN6xQWk5ldiDnSuWRrKI
Dftm6/829GC2Kq9T+wcF+005WjKre/FefFquhpjtry58S7UX4e2bR5qJnQZS
h/o0eiGeZB7XQ3wlIPZxnE4vzPZZz7GIb9ADmWuMeuEf4HVQ9CcZb+CF55tv
9QLSW7cbEyeOyPIdbe6Fn+6zd03Ehr/lXU909CKkM5ndSTwjqMw409sLjWOJ
kgPEJhrrKh0ZvcgT8jlCEfO4a/ne/9OL0NKAK4K/yPm72JCvWLEPo6PiDjuI
5XTu8Cld7cPWwJ3nXhLXHrrruvZ6H94o/32XSexm5cv4x6MP4WE2YvnEDT4P
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
tws6SaRT4Nv1aO28/wflXTKa
        "]]}}, {}}, {{{}, {}, 
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
g+O7HjcivzDW/QJxus+hvGXFjdA47LY0nTjhQfulSukmiC7J99wyRvaRglTT
6uVN8NBetFWfeMUnc+1g5SYcjs/4uYc4sqHyl9naJtx8NH2bFXHA/DzXFoMm
fPqscMid+HTI8yudLk0YvP7i4UdixSAnz/HSJpxwVnoj95tCx9I3zCPVTXgV
umalMnF0Qs+WrIYm3FEcjF1NvLDCVsCL3YSvSekXQDxlppmXyGgT9mZ+ijcn
7vLX9pkj24ymIs+TvsRxNyf5KlxuxrP7O904xGKcm+4rPZrx3tbNr5v4Kmac
X+PdDLGaD0E84oPDCyw3BjTjLcv81gjxzKMrNYyjmxErskN52jiFSzjAvFjc
jMtGZ5VWExsOv1lXtLAFMNhheok41VhdtXRJC/TEf9y5Qrzi9SfZKtkWbFt0
v8iTWOBo3syWlS2Y3Fst50ecUtnIpba24OaJobBwYunXgnfnn2yBGH+pfSrx
D9uDPcc+t6A5PL/uB/GFOWNzGrJa8M+gZPwo8XDOw436BS3QCDd2Hact3XpH
qbIFb3IvTxaaoDDSbrl2oKMF6fLR9XOIfx2y874k1or81AVH1Ij59p5d7H+8
FYHf4rXsiK9Omq037tiKwTfl5g7E/O/fOTmeb4XJvhznk8QCYkN5ezxa8efS
mnAn4kkV/5ycF9KK0P0iL68QCxu4fnyc1Qr+c+7NwcSiOtdN3s1vw/Nb6z5k
Em/IPDO7QKoNHWdjZ+UQO2ofqGiSbsNV/y3H84ir1JSNBJXbsPsf+ZlfiMMX
Venv39yGO+byK6uIV/xctGXcoQ3f9uqls4l1Xiap6qe2YZqezRbBP6Q+cpE8
i8w2tOw+rSJM/PzJzdfn8tqwMXKLuAix6P1DShFlbdiSvL9NlLjKi385xWqD
qMoHvTnEVhaGi0NE2yHoOOgrTew2izuNebgdXyZ9al5PrNiUuLnFuh1zFQ9a
byRujLl6vv5YO3LLbTmbiDXXSrWUnm0HY3EmawvxgIXpq1TvdqiH/craQWz7
Kls/OL4dIzGPhU2Jd+o+vr7jdzucSp+U2RP/nqxpEcXHwJQFYiLHiWv6pH4u
nsRAaok5ThBfS+5RXCjCgMNC52eniNv0r9+dJcbA6ylrjjgRh51Ntx6XY8A5
9a7DZeJpGUp89YYMlL5/K3SLuN9g6Qe/PQyYppfO9Scua57rsMmUga5XZdK3
iQNHx8vjzBlYqXpDI5BYTKMi8rwt+X3wGp17xAviz0PsEgN3bzrxPyQe1T4+
lO/KgH3c/gHaTV8snl1yZ0Dby6w1gvhhp+5Mphex9at3j4kXy0i0vw1gwKt2
qk40sWx4urthLANaFofFXhALKSSu5n/GAN8UPQ7tjpSnHR9eMKA70/3DS+Jn
tYFGUm8ZsBSo3R1P92O2zeLeTwwEe18995ZY7aZwxs1yBrrFjE8kEW+8sHs8
9xcDa6/Kr80iHj7R5ao/zsBsvSWltBMsPX+V/WHgUGuHdTbxMv33PxsFmVC4
0XMjh1hEav4gNYOJKOZYfh7dj+y2DkkZJkZ3TIh+IQ5IdrGLkmPi4+zKQNo7
Xs3iyK9goqciSKyYODV4K3OVChORjzlzvxI/sX/avGMtE13fBKaXEp+a7ljh
vIuJjDnJJRXE8gKTd48aMiHHv3VzJXH7cGSp+x4msq80JNI2YVQW++5jYtsP
pZAqYq33GvmRlkzYTYswqiEWPDD+6aszE39CxELriSNi/WNkIpjom+14rZXY
ctuaDe2PmRBUzGPSXsZqrAmPYsJkVH1zG31eliwXFnvGxKfR079ofwjPduBL
ZOKx95mjDOKSO8MqrYVMGF5eO4tNz4vqo4KwYiY8ZKbZ0DYp22a5t5SJxYrz
39NuEA2687WKifr6OhMOMee60tCnViYY9Qq+XOJxN6uPoUMkvyL3qk7iLMnJ
xibDTCh+dlnQReyd+rp7+igTISOZFrSnjvxa6DNB8tfU6aAt7hxyxXkKCylm
OlQ38crjxVv3LGHh3k9LVi/xkX3qpVN2sXDi3mkzij7fkoZPPhqycEli1k3a
1kw7Z/s9LPSsW/WJ9tHT9yXy97FwJWtIYoD4uM8vu6tWLEi+D6ulfT4pa2L4
HxYMYaI5SO8b18bKuIssWG61sqLtsmUwdq8rCw8axn1pXy6V2ZV4lYXA1N5m
2h7c6/dP32KhrOr15SFiv3mGapwnLIjYRcV+J/Zvtpt0L4YF1RNSRbRvR7nX
bXnKwlkZzV7ad1QS3CJfsZC2UV/tB3HI9jlfDiazIOAtnEz7yT+N1pVfWZh8
42HCMHHU+kH1q2UsNKU6lNGO5hcVUa1kIVyM1Us77vaGN/51LCiZtMj9JH4Z
F/lrB5OFgU+CobSTau3uZQyTeJ6l9iP09/llVmGUBYb6dA/aJ1QYZZljpJ5b
ZoTSXuxzcGo2HxvRcWa5tK+r7/bMncrGB5lZkqPEZve0zhQtZqO29XEmbbXM
H9P0pdnI9NOopj21N/HlFxk29CRDO2hnbFXpKF7BRlVH8rRf9PkYlLYoXc1G
Cs/bjPbPPaK7qnTZkG5NZ9CucivqMtFn412G8jfa8c99rlfvYuPh3NP8Y3T/
+fhyavawEca0laZd9Pa7Vv1BNqqVNC1ph81ok29xZGPKlJIq2ue0H+YddmJD
x8qHQdvgmLlNqzMbwQ3iPNp8GVWP2i6y4Z6aK/Kb2OF04VzmNTZERndvoL2u
JEGgI5SNdFefCNpS0a6pEQ/YGBpjPafNd1H3nGkEG6o3FiTRLpJpYWZFsbHL
dXopbTPXydkP44mLFcdon1M84mGcw0aRceCecfo5n8JakXw2xu9FHqS9rm6I
l1HIBsMm4Chtvmu+R5RL2bCTn3KRdmDjh42TG9gwvnPlEe34m6K/0/rZcD7/
jkX7zpG6984DbLg9r+2h7awedVJxiA3XSW2DtLUZms33R9godIkQmCD+stYm
9dwkDnaqNi6l3dHx8eIKCQ7SJkLMaReneam1S3KwIUrakvbru0ZdIYs52Lg2
1I72+U2c/ZNkOZi1f/052pNCZ65tW8mB4ICbH+2l24/9uKfDgVv4/BTaLVdr
XaR2cHDs7uhn2mFpOr9i9TmQ4P+aRXu2usyfJCMOLIU2FtMWkGGINJhzIMC0
aaHN5TsoJXWag1rptnHa0Ru+PI49w4GQZSn/H3pfXNSSVjnHgVPXGyHadZS4
/CYXDsSv60+nXdRWrWrlyYGWFVOS9ss0w22xIRyUNqVr0j42kpavHMaBjhtn
HW0ZdWW9pHAOeNV/NtCOeDXVsCCSg57V87bRvh1eaNb1goOnFzKMaJ+9uOWE
cgYHyXIrjtJW/pDQ9yGLA+6PF8dod1FLzmzM5aDgxrLjtK3tJ5yNijjIth85
TdvE7POVs1UcvNLTdqGtoa4R9KGDg+3TVG/SVvz1c2p8Lwc7/pnqT3tpVqp3
zAAHzsZfAmlPNdh88e4vDoZ0v4fS5hObNOj7h4P5RdbhtH/U55/0FORCyT/p
EW2G7S7LszO42HBNLJZ2rcKMRvs5XJwbl3pGu5iqMLFcwIWq0ayXtJNczXSN
lnEh1fz+LW2/e9YqyppcdJVNfKLtcUD2mcx6LvLXW6XRPr+kc6nkZi5if7/J
oG356tTcqTu5GHYTz6W910k1gH83F5s01fJp71w7OHnUlAujtesKaavnuox1
WnBRw1n4lfaS3eO8OnsuFMUyy/7+3+ZrrHwnLqSlFapotw/e/hLjw8WyyEMN
tAfkd8qdvEPyEbBr/luPQ8Keqx9y8clcq4327MCcltE4Lhp+NTBoL8t118pO
4OLr3J1s2mt+agff/EziPw3g0tZR+kntLuDCwPtF5995uXfmWVszF6VJp3pp
3xzrPHL6GxcLTZ7xaL+wtRL/LdyBkJoT3/7W82tDqZ9UB3wyC4Zo960x9pFY
3QGvkqIftH0DM1NuX+tA39SeX7Tle1V6+Ks7kPEuZPxv/24YH1mn2Akhod8T
tPNk/6k669mJ74MP/vydZze5h8yqTqzb3PDXgTW1tiayXbCK+/bXmPv1suL5
LqST7UmbMs0KEsjrQqL7xF9X1JzoebSwGzue/PnrxH3ztq1z6oZN73/8Mshg
YHpON/LG/uOYUq9HLLEe6Pz5j0t3nvW/fKIH3f/1z8LDrmI5PZj4r9WlX+y8
W9+DP//1ucs/JMT6/3WfcsDH2Qt6wff3GgAjKPPHLMd/PVy5XuLajL7/+Wzw
sqxLaf96fumyWZwj/f+zaW38b6mJfz1oGXWq5SXvf860euszw4D6n5U2W2yc
/PRf318i+rcv/+//A+3eUOI=
        "]]}}, {}}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
hhvJfKQgZ+T7wX8bF/Nu5Y5MEt+aG/QimsdFiswHtfxJCn70JotTUTzY7+Q7
mH+ikDWurP9yLR/xb6bkW4gVX7ta5Xfw8deS2i34TPqNltXFPyfA1aGl7YXE
kp5rpuauEMJJweay1BcKx3eX7XzSKETXdcs9TsSrKwxlak6OgqrqpPKI1zc+
mXdIXoSg076HuMSRL0KS+p6IUO+W3q3+lcIGI+P4Jy5j0DfJzdxPrOM4Wb50
Zgz2snILLxP3PGu7zp4dw18bjQd+OlKh0PefORRodPnCOGJm1/+0zBZQQCzL
Mp74tn1PoossBbf+yXNXiWV2Pfe4pUPBtvvzh1Tib9bn5Rc7kHfCyj2cQ1zw
0Jli7KXQ+yZ6eS7xXinD5gInCjYrNUU/XdI8ft7wEDmnOyI4j9hvu5tw7zHy
7pZPxNwnZm3dUpcaTkFNOiOziDgpTyPj4CUKeZKLDz0m3jR/NnhZNOmzHluN
J8SZL0v1S69Q2Bc0ll1MvO9vnZvdN0jdfZPZz4jn584LzEincNjdyq2U+Nnc
4Z1HMij8yXbRKCOW/ffmvM/Z5N88UJpZTvyCdmqo8h6599vfXZ4T+1/cXXGp
gMLVw3P+qCBWZa5KsXlIoaHjRd9Pt26S8pd/ROqQRiqd+P+0egna
        
        "]]}}, {}}, {{{}, {}, 
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxF1Xc8V+HbB3BpINqlSKWIElpEio9UQlFSImWEIiUVWaUUZRRCaVhlVBok
IjsJDWXv8d3fr3maCtFzn57n+f3OP+f1ft3nXPd9XfdafOjEbkdhISGhinFC
QvTbyFFQU9K9V8drQePfqLft4D8zP9QlpYaLu3YdOqfFhqR4Q9gLqS3QbX4x
ndvDxqsiv2OeCiZI2frLr/MAB6rrZ6fESe3BgtYfCctecCA0qzvq7yJLpOt8
NDo5xEFNX+FFOwVr+H6Sl1ZR58LU/l2u3U07uJ+/L27nzIVW9dqMSCkH5Ixv
eyeI4UJOO/7Bm9jDCLYb3fj3NRcSaaIJPxY5I+ybhc0FARc/JE/fXJrkgiCj
uaYSEjx0XOq4Zq7gCkW5Wr/5KjzY/04qfbPHDTo5NoLJO3hoUrXUOXDzJEpn
r/0t58xDyd036tek3HF9rqRjVjwParVez5daeSArofTrpRweHomqqhTFnsET
0+HW1Z95iPS4JU8t8sZRTJe5OcLDpCfGiVfsfOAnMIjzns6HD0tYRjbJF7m1
ESti5Pmw33l8lqmCH3i+WdOLjPhoDlwS3n3kPIorVUuYB/hQ6HSZ+HrPBbC/
Lcl1d+XjzuzF/pY3/dGaEV83NYKPS/6hXiFSAZgjExMxUMVHkczhl+Z5AXC6
m/n6RDsfv3N0fyyxCkQTT6X/Vg8fxwZ+nsiPvYyXjjdkf04UYI+V7ZG+RcEY
k5NerbtegLBBrZTckmA4CucePLFVgMrrc9gBdiFQNraoPGQqgHble+sFSaFw
n3BRM9FJAAV1dXMThTBws5dZZEYLYFs9LVq6IgyHXE9HbkoQ4K5LTw3vSDhs
dj3QT3kkgGjN59TiPRHYN+va8i+FApwVCVxicfM6HCSYra84Aji4U1LBUtFo
DfYqmqfcjbXjI30y3aIxWTu1SV29G8KRam1tFdGQvv10bK1ONxLSvWNVz9yA
n9SH4cad3WjtGb+ovvYm7ksfWfPpZDd22s2TX3T1Ng7cu5gx/3k3Fn7JCzBg
30besNrHe7nd6PM7yD2pdQd/nC6fm1XSjZDY+6llgjs4/Sf/TP6nbpQ1KS8/
ujUWqvoject7u6Flskk1eyweAeFFA3WyPRDtYId17k1A2XbDET3FHjS5XKZE
nibAMe/G0SSVHuSVOVo8VUmEXMHo5fVaPbBgpUkJtSfC6PHyrte7exC5QD02
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
        "]]}}, {}}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
KhEoQ8708EteUuT8H10CKAY=
        "]]}}, {}}, {{{}, {}, 
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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

        "]]}}, {}}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVz3s0lAkABXCPiVIkbKnNKL1sKumoULpjiyjaKJFEh1XZEraYSaVNQq0e
HqPyTIyUTClRlPIoDXogKpr3MM/PR6IU2tk/7rnn9889584NCvcK0dLQ0AhQ
5//GgbHY4KCtWHoLqz6CixpnzkiunzeQUnZY052LtXOYR7q8/MA2cJxp6stF
9l/THxTPDcJivp3LtAgurpizb5kbHcTt+FH26jwuXjb0NSWM0KFbkBRC/87F
nhlTdzkQZ5A3S9j2jMXD3dT9TU7JCZhjkJr98w4PGgZ19m5WiaDg+QabKh7y
KFGmvqFJ6Cq1Lgp7zQNvoKsjquccMqZWt3oM8+DfUrS1jHsRY7e9BurX83Gb
Zj7PRJoO6sPOevtOPrQd3aa5OjLxZV69uIHPh5/94Z/H0pgwt2A5b5DzMXFF
Y7cYGYCo237OKB8h88LT71+5jK6yft4NQwGoOk8nbNuUiTXoT261FSClOUCW
UpqHvdvMIgKOCrDG6k2nrgML1T4Dy88OCfDQyCLTJYiFjYreV33fBLD9fmT3
mXMsvH1876DnqABLOLMkWt0szDju/EJfWwjqvr0DY8eKcHFRx+lgQyE0CsYm
f3lyA0WzB9oTFwvxYtYSJ4HTLSg9GbWd/kJs1Ttb8tDtDmQNkT9OVwlhwr+U
GplWjrbg2Gdmu0Xqnzar9YhHCCvucFUMi0CkXgheq6yBk0FywCu6GIeG+T/s
Ftfh+KTj7VO+icH0XW69oq0BBmwXsVOYBJw/Ahcy3Buh8FC8oL+TgL6W0YpR
Dqak6HpK1/XApiactj22Bf+aiW1FOT2YPZRr2jj4Gg6KE+J9X3tQa+jftvvN
W1T8XtAwuL0XMQM+MeP6beg2Cn9vfbMX/S2uo4H72jEsWESJ1JTiZ1zHvYiq
d2CtMq9f6S1F+mnP5hvDHWh2XZGivCZFb2zdkzyP99DX92lN7JeipsHCqOb8
B1y967UozU6GbRMYtBzZR4Qk9/1Ki5fhnzmhBVaO3eiZOR5m3SKDbYLbfkHM
J0QPTPJfrS8Hq5equ6Odi4JTTG6MpxzZKWLdzyZ8KATRNOpFOZiTr+dSLQXo
XM9oSefIUd3sXjS/XYDuylW5LToKzLcheU/+FiL0ZnTlB0cFlMbJ8ZXmInQl
5VPs6QqMi6MbkjgipMSI0+xKFfDeuXMlsU+M+sjPWie4Cui5rzK+ZyxB3ZX3
dxKmKqEl0bPQK5cg8r1XjcFaJVxClzbbe/bAl0Hk3QxRQn5gk5Dzowe9ksCc
uEtKvDEOtCQye5F0mPrTu0IJY/tDnyI2SkFvpj3S4iqRpR1VmyiTYn2r89DQ
uBLh1RxadIIMupdDr9GoKuT3my59biPHLH2WHWWdCtObAzfdaJWjpTBNl71T
BYVF/jt5rALmLxi89CgV9PYvH9H+TYkr/2RZjlxQIcyrcktZoxJmX77GfCtU
wbrKbtrTwypc3WlZaFqtgm1jGWWPCQH2W8mmda9VOFPLSP1QRuA+U3qsnK/C
SnuH82X+fbjESR13H1DBcsfgQ7PRPgy6B3y+oEGg88GbtJ7xPhwlBaVv1T7z
y+1DpZok7luNbzfSJCB69+d8R10Sj9mWe5lqZ2/rvOhvROL8CJWZqUVgmuej
vVmWJNKeXlqSTyHwffNJk5neJAa3jDHyJhIoLtlFCnxIrEleV8lT22eyXVOx
H4n9tjNEZpMIlDf1n7TbQyLzZulYltrhbkFKnwMknjS5eFzWIyBxca7LOEWC
HORuPzeFQGrR3JyAeBLl0mV7XqrtpDNOX5hIQpCR4qujTyD3ecXSimQSdL9b
hnFq+26wvNpxmYQHbTSXYUBAp5ByJCeThLOq1LhC7Qfawi0hOSR8IkujBtU2
qr9KGbpOIlFwX/PQVAK1FtH8xywSGXc5ViVqR8R5VcUXq/8v2LxepjZVtIzp
XkIiuASuCwwJvHKaHGHCVu+XsB2C1P4PIun/1g==
        "]]}}, {}}, {{{}, {}, 
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
wD+WtIBd3wRJwy/5pL7utZcp1uFR03YVUjCzZKbSrN2yo/Z8orDn80ZlIXHX
euHj/ZUUuJu71BjWqh5O36opdJVOTvnPcydpWdRRKCzftKCbmBlRyjvcSKHU
SEGih7i7wLL8OIfCx/jdz3pZZwoiuDwKiyLjZvwk7km8cMCOoiDl7uTGutcv
ov10N4W4QyUr+4h/7izpcxmksHrNm+B+4j7tg6/7h8nz9s6t/3kZz+v8GIXA
HMkVv1hPkZjgIUFj8jmZz6x/VWyQ85WmEbzk3o8BYpEzdQPrZWjYlkkv+008
eaJLbc8MGoc/2juxXqCTFm4tR6NARqaftco3PWe5eTS6Zzhr/iFe5dq2p2IB
jbwC+ixrvTRZ6S1KNKoWH+ay3q2XRf9WpuH/zV5hkNi81ehLxlIaTzULzFif
nn0tYOFyGrIxDu9YR/j2i4lo03BYOOQ+RBw3P7Tt1UYaQieHJNaPctTyHUHj
W55HGeu3XTZeLbrkXNIQqDBM/DFwzOLOdhodfTF6rMuVorWN9GnYpDqcYt1x
sHIgz4hG1yWnDNZd/Wdqz5nQULv8vIL175BJ2RpmNHzqK3tYSxVvdo47SIPn
VKsxQrx69TPa6zgNqu1lDOuNX/W/aJ2kER5Ykc16mx0nVXiKxsvhCV9ZH7w/
/8QhJxoXRtqHWB/Tfq03y4XUyz9CZpTYoWavUqkbjfYqD2XWvpJBbRs9aJTN
lNjNOih5SX6fF41l3zOsWEduKYxL96aRKPnYmXXa+UGLef40HnyJjWBd+eNk
7VAIjT9/T6tg3XhJIvtFOI2a0rfNrDly8eH2kTTkE1so1oNGdXu+R9MQ23xP
Yoz9flDOy8PjaOh/1J7GWtpfWtrgAQ2TWTZzWS96q/clN5lGoKHFCtaq+9tS
nVNpOEqv1mat2esZoJpO2nclbGW9QyVL795zUu+vZmasnSIU893fkvY5Z11Z
m9w+aif+nkZhV89F1lqRCdNvFtDYl6Lhw3rwjuLx+I805JQ6g1g33T0qrfqZ
xlJnmzDW+VEJr158oTGSnXyHtV+04uTichquPlcfsD4Zc/TFnioaOTP+Smat
H5tg2VBDI+F5cBrrafcVnwnJufaub3Um6977R83PN9HYZJD5knVNfIKoaCuN
QwbHclnfS1DcO7OTxsdrBgWsPROPjsRyaVzsulLE+sjDhOQlAhoz2yOLWSsl
K/7RZmiYbzQpZT0h5WhCUQ+Nh/YjZawFKQkGu/topLwOqGT9LFUxzvoPyXOx
bh3rsLSj26khGut/nf/G2vVxQrfrKA0dpZDvrLWfKG4NEBdChXZpYT32NOF2
9EQh5sf+bmddlKHIezpFCM5CZQ7rwMwE7Q/ThfCuFuez3p2leLNmjhBJt+5S
rGe+TGjhzRNiVrpAyPrbK8VVw4uEuCcl0s362BvFOkU1Id4OBv5k3ZWn6Llz
jRDdCw/9Yi32UfFjpL4Q67IPDbKeU6o4reOwEDmRZcP/rW/FCX/vp0Ls/1Q4
xtq0Jn143qgQXyVG/3OCfEqW594uTBoZ+8+9Rx6cbkzrgsh/VzfMrVTc3Yb+
3++tnvlJGzL/52WbD22akPz/vqMg2c/287/+HxlKnPQ=
        "]]}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68249546104725*^9, 3.682495512628106*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diffusion approximation", "Subsection",
 CellChangeTimes->{{3.6720661606584144`*^9, 3.6720661632209225`*^9}}],

Cell[CellGroupData[{

Cell["Numerically solve transitionmatrix", "Subsubsection",
 CellChangeTimes->{{3.6720661684624205`*^9, 3.6720661824623857`*^9}, {
  3.6721561009950466`*^9, 3.672156113150727*^9}}],

Cell["\<\
p_ij = the Probaility of going from i individuals to j individuals based on a \
poisson distribution\
\>", "Text",
 CellChangeTimes->{{3.672066464839964*^9, 3.6720665058337297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"j", "\[Equal]", "n"}], ",", 
    RowBox[{"1", "-", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"PoissonDistribution", "[", 
        RowBox[{"i", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "]"}], ",", 
       RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"PoissonDistribution", "[", 
         RowBox[{"i", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}], "]"}], ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"j", ">=", "0"}], " ", ",", 
        RowBox[{"i", ">=", "0"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6720671707165766`*^9, 3.6720673936828604`*^9}, {
   3.6720675262595377`*^9, 3.6720675583258896`*^9}, {3.6720676081200175`*^9, 
   3.6720676097236023`*^9}, {3.6720676416920834`*^9, 
   3.6720676921136274`*^9}, {3.6720677261085005`*^9, 
   3.6720677338526993`*^9}, {3.6720681212493076`*^9, 
   3.6720681226868324`*^9}, {3.6720773455507593`*^9, 3.6720774178040605`*^9}, 
   3.672077864763053*^9, {3.6720779932998238`*^9, 3.6720780062852993`*^9}, {
   3.6720799701113358`*^9, 3.672079989672721*^9}, 3.6720800208938293`*^9, {
   3.67208320998223*^9, 3.672083216295706*^9}, {3.672145243432429*^9, 
   3.6721452504368687`*^9}, {3.6724252090136075`*^9, 
   3.6724252230171733`*^9}, {3.678629145644303*^9, 3.6786291471236258`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}]], "Input",
 CellChangeTimes->{{3.672145277802706*^9, 3.6721452811508646`*^9}, {
   3.672145702947195*^9, 3.672145703165955*^9}, {3.6721457456988635`*^9, 
   3.672145746977736*^9}, {3.6721459082354712`*^9, 3.67214593892357*^9}, {
   3.6721479455653677`*^9, 3.672147947306568*^9}, {3.6724249043675814`*^9, 
   3.6724249361383405`*^9}, 3.672577264996085*^9, {3.6725857064068456`*^9, 
   3.6725857068912816`*^9}, {3.6725857402032166`*^9, 
   3.6725857404131145`*^9}, {3.6725861627330365`*^9, 
   3.6725861629713345`*^9}, {3.6726642151153035`*^9, 3.6726642160846615`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", "0.08"}], ";"}]], "Input",
 CellChangeTimes->{{3.672425034055545*^9, 3.672425040441346*^9}, {
   3.672425138273523*^9, 3.6724251385860214`*^9}, 3.672425187150619*^9, {
   3.6724252264859743`*^9, 3.6724252273922358`*^9}, {3.672664218172392*^9, 
   3.672664219074808*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tmtrx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "j", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cArray", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"n", "+", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmtrx", " ", "=", " ", 
   RowBox[{
    RowBox[{"Insert", "[", 
     RowBox[{
      RowBox[{"Tmtrx", " ", "//", " ", "Transpose"}], ",", "cArray", ",", 
      "1"}], "]"}], "//", "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmtrx", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmtrx", "=", " ", 
   RowBox[{
    RowBox[{"Insert", "[", 
     RowBox[{
      RowBox[{"Tmtrx", " ", "//", " ", "Transpose"}], ",", "cArray", ",", 
      RowBox[{"n", "+", "1"}]}], "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmtrx", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "]"}], "]"}], "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6720696212122884`*^9, 3.6720696289913087`*^9}, {
   3.6720696980498457`*^9, 3.6720697056962137`*^9}, {3.672069746015936*^9, 
   3.672069754922316*^9}, 3.6720698603016906`*^9, {3.6720759550043325`*^9, 
   3.6720760274952693`*^9}, {3.672076096986738*^9, 3.672076107896628*^9}, {
   3.672076283528536*^9, 3.672076284184794*^9}, {3.6720764201403613`*^9, 
   3.67207642764252*^9}, {3.672076534500682*^9, 3.6720765485897255`*^9}, {
   3.672077007266529*^9, 3.672077061960261*^9}, {3.6720780732636843`*^9, 
   3.6720780809405217`*^9}, {3.6720786128859444`*^9, 3.67207861313595*^9}, {
   3.6720787554742403`*^9, 3.672078758904729*^9}, {3.6720801019795647`*^9, 
   3.6720801333097825`*^9}, {3.672084384730722*^9, 3.6720844059632998`*^9}, {
   3.6720845056013556`*^9, 3.6720845538367577`*^9}, {3.672142625746086*^9, 
   3.672142631986487*^9}, {3.6721427112529144`*^9, 3.6721427123468275`*^9}, {
   3.67214379056948*^9, 3.672143796613514*^9}, 3.6721452597887115`*^9, {
   3.672147887607997*^9, 3.6721479659815245`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"n", "+", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6721562288360424`*^9, 3.6721562292913733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Chop", "[", "Tmtrx", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6720787242518992`*^9, 3.672078726987888*^9}, {
   3.672078901212145*^9, 3.6720789038373036`*^9}, 3.6720789415895414`*^9, 
   3.67207944668227*^9, 3.672081409917555*^9, {3.6720832294777956`*^9, 
   3.6720832352637043`*^9}, 3.6720834308303366`*^9, {3.672084370835174*^9, 
   3.672084376530878*^9}, 3.6720844145022793`*^9, 3.672084487204923*^9, 
   3.6720845653580074`*^9, 3.6721424610517673`*^9, {3.672142521530431*^9, 
   3.6721425278309875`*^9}, 3.6721426118412247`*^9, 3.672142715565468*^9, 
   3.672143327787161*^9, {3.6721438170266967`*^9, 3.672143821991514*^9}, {
   3.672143857573058*^9, 3.672143857994939*^9}, {3.6721439201579514`*^9, 
   3.6721439210329638`*^9}, {3.672143998095739*^9, 3.6721440273716636`*^9}, {
   3.672144611161233*^9, 3.6721446247189693`*^9}, {3.6721456192393045`*^9, 
   3.672145622260145*^9}, {3.6721461017557*^9, 3.672146151979461*^9}, {
   3.6721465281282578`*^9, 3.672146574378539*^9}, {3.6721467037288356`*^9, 
   3.6721467463932185`*^9}, {3.672147974622961*^9, 3.672147976693241*^9}, {
   3.672156174659481*^9, 3.6721561749016533`*^9}, {3.672156266589364*^9, 
   3.6721563059814053`*^9}, {3.672408186254855*^9, 3.6724082020580673`*^9}, {
   3.6724248625723066`*^9, 3.672424898462676*^9}, 3.672425073613717*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixPower", "[", 
    RowBox[{"M", ",", "25"}], "]"}], ".", "v"}], ";"}]], "Input",
 CellChangeTimes->{{3.672577449741105*^9, 3.6725774700235186`*^9}, 
   3.6725863923947167`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SimulateN", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateN", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"simulateN", "[", "t", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Res", "=", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{"M", ",", "t"}], "]"}], ".", "v"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newFracer", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Res", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ")"}], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Res", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2", ",", 
             RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "newFracer", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6720794261328125`*^9, 3.6720795027023582`*^9}, {
   3.672079625346921*^9, 3.6720796282911344`*^9}, {3.672079683287002*^9, 
   3.6720796855311832`*^9}, {3.6720812608577375`*^9, 
   3.6720813039969764`*^9}, {3.6720814298622828`*^9, 
   3.6720814888658495`*^9}, {3.6720815238882885`*^9, 
   3.6720816549206305`*^9}, {3.6720817675945225`*^9, 
   3.6720817845780287`*^9}, {3.6720826422631893`*^9, 3.672082657453062*^9}, {
   3.6720828740076575`*^9, 3.672083050030038*^9}, {3.6720832462171125`*^9, 
   3.672083286330103*^9}, 3.672083395230562*^9, 3.672083776018185*^9, {
   3.672083826307782*^9, 3.6720838613036294`*^9}, {3.672083908070453*^9, 
   3.6720840087982006`*^9}, {3.6720840394726114`*^9, 3.672084066584546*^9}, {
   3.672084306902355*^9, 3.672084336885376*^9}, {3.672084429140128*^9, 
   3.672084472595274*^9}, {3.672084586925696*^9, 3.672084587435473*^9}, {
   3.672084731288848*^9, 3.6720847554262466`*^9}, {3.672084787271657*^9, 
   3.6720847891222467`*^9}, {3.6720848454851246`*^9, 3.672084883534724*^9}, {
   3.6720849682528796`*^9, 3.672085034214054*^9}, {3.672142793767724*^9, 
   3.672142794142878*^9}, {3.6721428386516423`*^9, 3.6721428835027814`*^9}, {
   3.6721433519411106`*^9, 3.6721433689641027`*^9}, 3.6721435524214983`*^9, {
   3.6721437392412057`*^9, 3.672143745724608*^9}, {3.6721439011566486`*^9, 
   3.672143958197406*^9}, {3.6721439931482873`*^9, 3.6721439932733383`*^9}, 
   3.672144094208782*^9, {3.672144362073803*^9, 3.6721443621363606`*^9}, {
   3.672144419144117*^9, 3.6721445109243994`*^9}, {3.6721446596766434`*^9, 
   3.672144818380556*^9}, {3.672144923548485*^9, 3.6721449771630783`*^9}, {
   3.6721454434301543`*^9, 3.6721454961199503`*^9}, 3.6721459775486965`*^9, {
   3.6721464002120266`*^9, 3.6721464006964245`*^9}, {3.6724251521923604`*^9, 
   3.6724251569579363`*^9}, {3.6725857931115932`*^9, 3.672585819569628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{"SimulateN", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1000"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "0.16"}], ")"}], "*", 
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{"t", "*", "0.08"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfeAhby9/zGvHjD9Xp4DoJdUP54LohQVdS0C0U7vd
IRC9OyMfTB+8F3QGRJ+JbroMosXaDj4C0WuUlj4G0XvCt/ELAOnD1/eA6ctr
zZxA9Iedu11BdI6sYzCILpjrAqbVUuMiQfS75EQwbdfSHg+ie5ZPAtM6Dfuz
QbQhw2Ew3RC7qxBEsyxVLwfRMzgPMosC6XOp2mwgelPSDp4JQLouexeY1rOU
9J0BpN36zgaA6DXu9r+fAenpRk5guqRVke05kD6kzcQJol/NmyzJG/va0Whv
kQKIzlp3TAVEM/heBNN+e4vE3DJeOz7fdwBMp3hs+hWQ99rxTbrVPxANAFPl
m4s=
  "]],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxV1HlMkwccxvEKKGgBgWEV0CGgG0ctA+SG8ZSjcpTSkwKDBc0aibApAsPB
nJW4qds0gGTJcC5eAQeIQaOCCCIGvAIJsnXL4rItZQR1mzUwpMgxF3+/P/Ym
TfN5n36b5m37+mzbqTbYCASC914+/nt+dVgSBP8/8DR6diFRMk7nHSC0PV/1
+Ngzsgvt02R3hB3567m0z0peA5v1gbPC1jnyWujzQtt3+y6S16OsNTbh4mkB
XtmX3n8JeQNEusvdHcU25Dcgj9x31SyxJftj77ej10W/swOh+jIkyO5TO7IY
zd0/iu6tXUqWwDs1M1rUwn6LPv8ycgiq9s3eLG5hh+KzuuKYam97chjEl+yW
RRxlb0aduaw68Tk7HB3tOxsk7ziQI3BnIL6y/Bo7EpZLI/N7Vy0nR8Eqrv+4
uYQdTdePHYMhT8vjBpcV5FjUHrDt/LWAHQe/9K9MeefY8fBeGLofZWG/jeMm
obUpXEhOQF5QXerwHjZQfKezd7SLbARGOn+Y+mmGdymmnbr2z4U70i7FwORK
TV4pWZBI3y/viei5HfO3v5n3JJyT3hoY9HCiPQkmp0NFVgVZkAyn3aGxozW8
J0PRdjTFcJn3FGyKl2hvjPOeAtc/3UUWkTPtMiRp5yKWyshGGc7ePfOhsJz3
LShJrO1xPsX7Flyx1AZ7DvGeiopuZVzUDO+p9PtcSXsaLni1XX2QQTamYVGg
Wiws5z0dad+1t2z8hvd0tMb5Fvnf4j0Djq/1V+56xHsGJheu5dbYu9Auh7Ik
8P4/HmSjHLmN50+tEvOeiUzZ4MBYPO+Z+CjgttWQxbsCX4QaHh4v5F0BpxK3
J4dKec/Ck4dvHgiu4T0LXmvME3X1vCvp/0eGEhUBDcfqL/LrlWjyS/95cz+5
T4lNrv7PGke4VyF6uPvk4G/cq9Dt2XCi6yn3KvhItx+uWOBehbumDVMvHF2p
VyNBP5Wv8CJDjfFg37APAshGNda1zpnyI8l9auTbn270SuFeA7eJvv5WNfca
xIXKDzoXcq9BgMLPPeV97jUo67hwWFnFvRbJxj3zIQe519L9h3stDCeabKpP
cq9Fzdi2I2Nt3OvwvWF6uX8X9zqsODPzrmyAex1kPY92YIR7HR4k1Nut/oX7
bBSWFry4N8F9NqY/b19dMMV9NlzEIV7Di9xnozd/483XhW7U61Fe1NybJSJD
j12myf6tPmSjHl/faK7Uicl9epivzxuDIrnPwcxZ+0/GpNy/dMYfDvvl3Odg
R/nMlSV67nMQtE7ksX0r97l0f3bDv0cClCE=
       "]]}, {}}, {}}, {{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVkHs0lAkAxccjkma985o85tNDWydT1hblu6MY8pzx+qKshBkh8iisWrKJ
MIrT1KQ8yqvsEUOspJYTomya2qXRLtVWLKVNmS1N1v5xz/3nd37n3GsZFseL
UKbRaJ4L+b+ZhYpLpWadjoywZgabpyBbF1ubxwrKSPHrs2OeuxRkZ0p95WrB
VdIw9XBlUKSC7LE5wFcT3CL1TrqsTUpTkHfypa4f+PdJjZvDDjUXFWSffVbb
FH+UnDVWBNFnFGT/qZED4/xpUvrAWfy4+Au5o0Pd6yV/nsxhDxkk/DZPDtDt
NFR3a4NfEi4M4SjBqdD5lxpvIyxvoIVP5CsjYv0nOotugWOqPyXo3FOBp3XE
P8s4VpA9d8xxWbkIkkeHk/s2rQb7j/fToVFqcNBdc1X1h7UQ7SkKyelVB3+u
6EIVZYPzK0g1T3MNxPW82njVcwNaVLRo8u+W4ESQ2gpFjC1uxvTQ6ts1sbf3
+0iWwA5D0+W+O2h0dKobc6N3bsIlyYnRLMevwNLJEE0k2SOYtiuh/4wWQme2
rvWK2QJ929qv52K0UVHazZAXOCJ+najijKkOmoT2I1IeUNWj2azcq4Ok61t9
Lniw8XyqKG4sUhe3+qve5QY74exwQf12fT1EcTZ3RFHbEMg9JzJt0cP5Wta1
6H3bkV9oopwaoY9TMx2Z8YecIY5lLqnSMcDLK8kHBQkuaBx2aN8mMcBtl6Kz
R49yQGr0TQtCl0HJW/asMMMVQz38AZqKIWjsFqXyVDdwrIQc/kVD5BjKPaXH
d2AdZ7Wz38Lv8UF7u+RZ7jCTP5xsemuEp5m24eRpDxyLmTE4V2YM/WKxLLfC
E92Z5554uZugWntNam+JF+hWvh4HJ03QmWDuvKrOGwN5P5BWYlOUWpQztvr5
QJTRMbLdgYGO9E80waAPNhtk6dvKGLB0V/9MBHLhG3dj8HL2cjTft857/IiL
5AB1u6JVZsjv+WJjsZsHLZUeM6XfzVCcOLEv9AkPjVtEDc9SzJFuYKbF3OkL
Q81DcW5LLXDZelF/0pgvCmW77vwVZgG190rGnSF+EMbfTW5rskCNTeOR0ld+
4EzMhHM1LWEddsVLEeuPKVboRZ89lhhxa5P4T/pjGdvfNrfREtJLaevIxAB8
3qC6+NhiJv5t4m5hvgtA5KSDzfWdTMz/nHAte38gbiS2VgdcZsLdxsU5/UMg
fv1zKqRlnone3eujohMpRGrXRXv7ENDdK2i/kEzh4d8hXq1cAiGCCvrgIQrs
bl2WuS+B2QQ9iW06heVpabNv/AlY5cg/KX6k8Oi5W6YwmECG5Fb+SRGFba3j
ooFIAvbqPg3X2iiYh6zscj9MIHtprvJ4OwXhJlll0xECD3S6/ExuUpjTFR43
zSAgYNh+PNJFYaj3g8fkUQJnWEZOrncXeFb30IkcAu+Dxx7KnlBQqIa/7ism
gD3GK+mjFGJGDQdZpwnkRfJSyKcUhtvuSsQiAswDtxmVLyg079+YEiUmwM2u
jYh9s8APK6tolBE4n/e0tewthceSlhfx5QTGT5oskb6jwCnYd2e4YmFPSX69
nZwC4SQtqK0kcK+8mxb1kcIpRna8djUBw+ovvJI5CvOzm31TagiE1X1bNaBY
8D94/c1YLYH6hnj5/DwFWV2FkesVAv8BRGEaiw==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.02302585092994046},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{341., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 20}, {0., 
      Log[1000]}}, {{0, 20}, {0., 6.907755278982137}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, {{0., 
      FormBox["1", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
      FormBox["5", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {2.302585092994046, 
      FormBox["10", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {3.912023005428146, 
      FormBox["50", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {4.605170185988092, 
      FormBox["100", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {0.6931471805599453, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.791759469228055, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.995732273553991, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.0943445622221, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.248495242049359, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.382026634673881, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.499809670330265, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.298317366548036, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.703782474656201, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.991464547107982, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.214608098422191, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.396929655216146, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.551080335043404, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.684611727667927, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.802394763324311, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.907755278982137, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{{3.6817161995907717`*^9, 3.6817162110303235`*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability", "Subsection",
 CellChangeTimes->{{3.678629267700612*^9, 3.6786292760580015`*^9}, {
  3.6786293874283876`*^9, 3.678629389474581*^9}}],

Cell[CellGroupData[{

Cell["Introducing 1 allele", "Subsubsection",
 CellChangeTimes->{{3.678629328660799*^9, 3.678629344141075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "P"}], "==", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}], ",", "j"}], 
       "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "P"}], ")"}], "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.670852205882002*^9, 3.67085226610954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "P"}], "\[Equal]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "P"}], " ", "\[Lambda]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6708522171487627`*^9, 3.6708522665405903`*^9}, 
   3.671205594749379*^9, 3.678629321441132*^9, 3.681806101829399*^9}]
}, Open  ]],

Cell["\<\
Haldane (1927) argued that the resident population was stable (\[Lambda] ~ \
1), and he focused on a beneficial allele, whose \[Lambda] = 1+s when it \
first appeared (i.e., if as a heterozygote then s is the selection \
coefficient for the heterozygotes).  This assumes the \
allele\[CloseCurlyQuote]s fate is determined when rare and that the fate of \
all j offspring copies of the allele are independent.

We can define the expected number of kids per parent as 1+s (for an allele \
experiencing selection, s) or as 1+r (for a type growing at rate, r):\
\>", "Text",
 CellChangeTimes->{{3.670852270301004*^9, 3.670852348367107*^9}, {
  3.6708528709864817`*^9, 3.670852901902026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", 
   RowBox[{"1", "+", "s"}]}]}]], "Input",
 CellChangeTimes->{{3.6708524512626467`*^9, 3.670852455930913*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "P"}], "\[Equal]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "P"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "s"}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.670852456667925*^9, 3.67862932363571*^9}]
}, Open  ]],

Cell["\<\
s would be the selective coefficient for the rare allele in a haploid model \
and would be s = h s in a diploid model as long as the fate of the allele is \
decided while homozygotes remain rare (i.e., h isn\[CloseCurlyQuote]t too \
small and N isn\[CloseCurlyQuote]t too small)\
\>", "Text",
 CellChangeTimes->{{3.6772674133514414`*^9, 3.6772674663548155`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "P", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "P"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}]]}], "/.", 
      RowBox[{"P", "\[Rule]", 
       RowBox[{"P", " ", "\[Epsilon]"}]}]}], "/.", 
     RowBox[{"s", "\[Rule]", 
      RowBox[{"s", " ", "\[Epsilon]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.670852461446228*^9, 3.670852514937065*^9}, {
  3.6747619305186243`*^9, 3.6747619352167187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["P", "2"], "2"]}], "+", 
    RowBox[{"P", " ", "s"}]}], ")"}], " ", 
  SuperscriptBox["\[Epsilon]", "2"]}]], "Output",
 CellChangeTimes->{
  3.670852515439097*^9, {3.674761931125003*^9, 3.674761941418998*^9}, 
   3.674761996214738*^9, {3.6747620363093433`*^9, 3.6747620418078575`*^9}, 
   3.678629324743462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "0"}], ",", "P"}], "]"}]], "Input",
 CellChangeTimes->{{3.670852517104096*^9, 3.670852520399935*^9}, {
  3.674761983715312*^9, 3.674761997751313*^9}, {3.6747620341510706`*^9, 
  3.674762039572583*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"P", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"P", "\[Rule]", 
     RowBox[{"2", " ", "s"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670852520988957*^9, {3.674761974620558*^9, 3.6747619979102077`*^9}, {
   3.6747620370399246`*^9, 3.6747620425514407`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", "P"}], "\[Equal]", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "P"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}]}]]}], ",", "P"}], "]"}]], "Input",
 CellChangeTimes->{{3.670852536740158*^9, 3.670852538951167*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(Solve\\)\
\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6708525395503893`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"P", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", "s", "+", 
      RowBox[{"ProductLog", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], 
     RowBox[{"1", "+", "s"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6708525395509768`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "0.3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", "s", "+", 
       RowBox[{"ProductLog", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], 
      RowBox[{"1", "+", "s"}]], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "0.3"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670852542323443*^9, 3.670852577246163*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw90G9M1HUAx3HSWNvlfHBccs118kcSk0Q6iIKOjxb9QbqMCxvKkhKu0YEx
YS0fpIjQ0FpO2PyTqBiLkLQQ5E+QSOCdHMgF9/seAXked79fxq3m1jglR4uy
8ekevPd6/o7cWWIyLwkJCTHe7z8D0yvi2zNT0hbdnHa6clXEslVaLBqLkpiu
gxO6/30GOXNLDL1BX4HDExt+MWgOHhKpVc1BC7HaaEv5Kuge6FWqY18GPYhT
zjuh2VGH6Odwmdst1vO1tAFPrs/6pavpBD2HuSfU5ZUx9bQFm+pVpsSTDbQN
G1/Q3a2VG2kH/K9GR55Z2Uy7MftOhvrpxy7Qy0iseUDTk9dC+3DbvGuXOamV
9kPTaXok/VIbHUBOWIXtRFY7tcI4h0m9q4PasOPXlwPpH3bRQaQfspsuqLvp
EG60Tmm21/bQYRye0U/vfeoyHcFsg26Zv7OXOlBaZNpkz+2jo8gvK3+r/KMf
6BhuBU5fNxj6qRN3572G5OUDVIInvdj3hnOASkjw65vqjlylAmp1xG7d21bq
wsi+7GJrpI2OQ1P6TVFjwEbHce3K85+19l+jPyHrtQivt2KQTsBSEJWcabLT
SeT2FvdNaoboFLpKAu/ViCE6hS/OndF+3DBMf0b+6tp7dfnX6Q1cevxr9+3E
EeqGu0g1u/PeCHWjRNW0dul3DnoTR+ILzZ7qH6kHnxzfLbkzRuk0VFdHIx9e
Pka9eHCmqsjwwRj1whLnMVaMj1Evwjsy2uT7Xxf1YUPetpat9U7qw0JStcGz
4KQ+hL0+aKx6V6Iyjn56fi51UKIy9u+oFL/bJSrDkpB7sW5YojLSJlSWvxwS
leGPstzscUlURkpPrPVZWaIyPP7GmuS/JSrD/v3e92cWJCqj7fDWzOMhgiqo
TgwN/XOpoAo27C/Y06kSVMGB8Oi8JK2gCop/m0+99aigCt7slbRHVwqqYF3+
AemOTlAFrm99L7bHCKrgSkV3VMEaQRU0Z9f8E7ZWUAX75jd2l8UJqqDQoT0W
vV5QBaazf5SKeEEVPFdm31KZIKiCNS+djdPrBVXwL2MZUls=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk01AkAB3DlaN+wXovQek2MRMVIVCrTN2Vpkso4lmw6GDGUlbdb+5K7
Jh02sy/ZTUg0yVHGMWtyrHuIzMzP+RvGUbZJT3lGKmV264/P+1iciGaxl2po
aHh98XXVqLF9pef2nZpp++2+fidltbnealM01Ks27qPaINpKeHngy/590Y0+
q5wRML+UUUd1xh9h3yqqzPaiW2Fj8pi6F3uWraLkmwZgGbEjtYgagIbVlitv
GIRjjVfr9vvUcCRe9dWJ1zkHRwols4B6Dp9fCSLj33CRLZ3T9qWlYQnvuDtX
lIVediWnpZgH8yg7k8Vt+bCje78Q8rNgG8o3vjfBx/x6g4QUq1yMRJQYYroU
rrkUltNf+eivFdKVteXYtYf6jjdRCK5ZZNxvgkoo91ta5JgVofjtXLJ1uhCz
x5kGW1aVIFn8iLWSLoJTxhIj0dFHWDSi9MR8qsU0+9Qp9uZyZMbyi+vSG2BU
zVrhViHAgVRVYLN2IwIMk1qzvCth9L2J6FNgE7zmMejYWwUnxTWtHF4zgv/1
ULmdFeJk8WJl4FgL3NLErBKDGrj2HXYdpbVBXj5kdJgnApVHIe0925H+0nH0
wqZadJy3rergijGbT9VTVtdh18y94ecPO3AmkuUqDmpAlk3Ei+zxToTEJhxJ
iPsH5c6JfUv0uzCpuvOUwWiEaTHCrGndeLcwxtiq34Ty+G077ZjPoHCLGveR
NqHtiOOmrIAeOCgd+bdvNCPzeoNLnL0EBgbmMdRjLbDMUr9qfiJBV7xvVItF
KzjpwcFPXaQwOlMaWahqhYdk6s+8Nina6ndfL29sw+Hf9S/NesrgfcB8bCyp
HeyZLc7X2mTghNK2erLEcEiobc5jEgiqi2oYNOpAWPzr6d1NBITRqogMogMu
w/n86S29uPsgx/RificKGRc12yp6EbKG9+F2yFMkGHufLFjbh4q1D4ennbog
rR9l/Hy3D8ORlNkTH7rQap2tnWzQj2gKf53m390IVYkiXiT044Z9OFvBfYbF
02k603P9uHIrRjbM7EFJvGS66NgAKM09Frr6EohzJ4elxAC0XqZGMn6RgHe/
lL1vzyA4tgqvpD4JflTyRsaLBmFSxRRMMKSI7lSfvGsyhI1HAx/55Uph7Ccs
rY4bgnozl6FQS5HyROB+RTEEw0PtXqlhMpSd0jrr4UHi5tXi+R3tMliVMPxq
+CQSg1OI12IZwtp/pbOLSHAcgh7f7pRBT+n+dnkxiZ0DFM6nbhlYQRXW4WUk
lDTOiKhXhsdTb2JXVJHYLrJp2TYhQyk94XxkEwmFsjBj66IMfmS0j/YICfGT
C6dfqmWI6VqglSlICNL9PG9pEJhM9CP9x0hwnbS132sSSGMkaTx4TmJjYui5
agoBpv/z9cwpEskmlkc3mxJY1Prp46X3JKKmFnZMriRwyKPanf6RhH+dzPSm
GYG8qM/n+xZIbAhJls1RCZSd8MmxVJPoLRv/odKKQKH2kaZ6LTnqk2poodYE
RiM8DrJ15CjyzfjPcB0BXcGGFt1v5Ihf2FUTa0tA8lrJDtCVI7zbNNOSTkAQ
1MpT68nByps5Q9gTQEk+v0BfDpdY8cEUBwJu2ckF+5bLYe2eZ+voSMBrKixt
5js5/gdwkV5p
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 0.3}, {0., 0.599999987755102}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.670852565495241*^9, 3.670852577561954*^9}}]
}, Open  ]],

Cell["The probabilty of establishment:", "Text",
 CellChangeTimes->{{3.6708529437026033`*^9, 3.670852951085836*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soln", "=", 
   FractionBox[
    RowBox[{"1", "+", "s", "+", 
     RowBox[{"ProductLog", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], 
    RowBox[{"1", "+", "s"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.6708526084493523`*^9, 3.670852609956965*^9}}],

Cell["\<\
Probability that all k alleles would be lost if you start with k alleles \
would be: (full recombination)\
\>", "Text",
 CellChangeTimes->{{3.670852921036482*^9, 3.670852933886592*^9}, 
   3.670852965653071*^9, {3.6747623672415586`*^9, 3.6747623721492467`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "soln"}], ")"}], "k"], ";"}]], "Input",
 CellChangeTimes->{{3.670852953838546*^9, 3.6708529604549828`*^9}, 
   3.670853008076559*^9}],

Cell["\<\
So the probability that at least one survives when you start with k would be:\
\
\>", "Text",
 CellChangeTimes->{{3.670852967357006*^9, 3.670852978315586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solnk", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "a"}], ")"}], "k"]}], "/.", 
    RowBox[{"a", "->", "soln"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6708529821103277`*^9, 3.670853004715406*^9}, {
  3.6711945151720467`*^9, 3.671194590833239*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"ProductLog", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}], "]"}], 
      RowBox[{"1", "+", "s"}]]}], ")"}], "k"]}]], "Output",
 CellChangeTimes->{{3.671194544964085*^9, 3.671194591811865*^9}, 
   3.6773342921779385`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["k introduced alleles ", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.6773378055537415`*^9, 3.6773378190265107`*^9}, 
   3.6786293633412848`*^9, 3.678633400251256*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"P", "[", "k", "]"}]}], "==", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"PoissonDistribution", "[", 
         RowBox[{"\[Lambda]", " ", "k"}], "]"}], ",", "j"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"P", "[", "1", "]"}]}], ")"}], "j"]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.677266509430716*^9, 3.677266545195413*^9}, {
  3.6772669378748727`*^9, 3.67726696756557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"P", "[", "k", "]"}]}], "\[Equal]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "k"}], " ", "\[Lambda]", " ", 
     RowBox[{"P", "[", "1", "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6772665571082797`*^9, 3.677266991612915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", 
   RowBox[{"1", "+", "s"}]}]}]], "Input",
 CellChangeTimes->{{3.6708524512626467`*^9, 3.670852455930913*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"P", "[", "k", "]"}]}], "\[Equal]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "k"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "s"}], ")"}], " ", 
     RowBox[{"P", "[", "1", "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670852456667925*^9, 3.67726658598919*^9, {3.677266989553157*^9, 
   3.6772669921816607`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"P", "[", "k", "]"}], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"P", "[", "1", "]"}]}], " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "s"}], ")"}]}]]}], "/.", 
        RowBox[{
         RowBox[{"P", "[", "1", "]"}], "\[Rule]", 
         RowBox[{"2", " ", "s"}]}]}], "/.", 
       RowBox[{
        RowBox[{"P", "[", "k", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"P", "[", "k", "]"}], " ", "\[Epsilon]"}]}]}], "/.", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"s", " ", "\[Epsilon]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.670852461446228*^9, 3.670852514937065*^9}, {
  3.6747619305186243`*^9, 3.6747619352167187`*^9}, {3.677266593107083*^9, 
  3.6772666071619444`*^9}, {3.677266653446644*^9, 3.6772666728192616`*^9}, {
  3.6772670000072703`*^9, 3.6772670485326633`*^9}, {3.6774358232868433`*^9, 
  3.677435825366394*^9}}],

Cell[BoxData[
 RowBox[{"\[Epsilon]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "k", " ", "s"}], "-", 
    RowBox[{"P", "[", "k", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.670852515439097*^9, {3.674761931125003*^9, 3.674761941418998*^9}, 
   3.674761996214738*^9, {3.6747620363093433`*^9, 3.6747620418078575`*^9}, {
   3.677266609766596*^9, 3.6772666731690435`*^9}, {3.677267039491127*^9, 
   3.6772670492927694`*^9}, 3.6772671772755547`*^9, 3.6774358293391523`*^9, 
   3.677436353570259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"%", "\[Equal]", "0"}], ",", 
    RowBox[{"P", "[", "k", "]"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.670852517104096*^9, 3.670852520399935*^9}, {
  3.674761983715312*^9, 3.674761997751313*^9}, {3.6747620341510706`*^9, 
  3.674762039572583*^9}, {3.6772666138902445`*^9, 3.6772666283706136`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "k", "]"}], "\[Rule]", 
    RowBox[{"2", " ", "k", " ", "s"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.670852520988957*^9, {3.674761974620558*^9, 3.6747619979102077`*^9}, {
   3.6747620370399246`*^9, 3.6747620425514407`*^9}, {3.677266617314622*^9, 
   3.6772666767173424`*^9}, 3.6772670449274435`*^9, {3.6772671759909973`*^9, 
   3.6772671778294125`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"P", "[", "k", "]"}]}], "\[Equal]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], " ", 
       RowBox[{"P", "[", "1", "]"}]}]]}], "/.", 
    RowBox[{
     RowBox[{"P", "[", "1", "]"}], "->", 
     FractionBox[
      RowBox[{"1", "+", "s", "+", 
       RowBox[{"ProductLog", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], 
      RowBox[{"1", "+", "s"}]]}]}], ",", 
   RowBox[{"P", "[", "k", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6773535614709187`*^9, 3.677353592313637*^9}, {
  3.677961694101283*^9, 3.677961695332601*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "k", "]"}], "\[Rule]", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "+", 
         RowBox[{"ProductLog", "[", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], ")"}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.67796167189482*^9, 3.677961695796226*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"P", "[", "k", "]"}]}], "\[Equal]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "+", 
         RowBox[{"ProductLog", "[", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], ")"}]}]]}], ",", 
    RowBox[{"P", "[", "k", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.677353685911028*^9, 3.677353725025709*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"P", "[", "k", "]"}], "\[Rule]", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "+", 
         RowBox[{"ProductLog", "[", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "1"}], "-", "s"}]]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "s"}], ")"}]}], "]"}]}], ")"}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6773536888218403`*^9, 3.6773537255275087`*^9}}]
}, Open  ]],

Cell["\<\
Also Kimura (1957) used a diffusion approximation to show that the p of \
eventual fixation of an allele starting at f p with additive selective \
effects s is: \
\>", "Text",
 CellChangeTimes->{{3.6774373434697742`*^9, 3.67743737560317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "N", " ", "s", " ", "p"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "4"}], " ", "N", " ", "s"}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{"Log", "[", "1.01", "]"}]}]}], "/.", 
   RowBox[{"p", "\[Rule]", 
    RowBox[{"10", "/", "N"}]}]}], "/.", 
  RowBox[{"N", "\[Rule]", "100"}]}]], "Input",
 CellChangeTimes->{{3.678026801244045*^9, 3.678026843557667*^9}, {
  3.6780269017368884`*^9, 3.678026999632018*^9}}],

Cell[BoxData["0.3345982153477143`"], "Output",
 CellChangeTimes->{
  3.6774373845830784`*^9, {3.6780268091564183`*^9, 3.6780268447284884`*^9}, {
   3.678026902206142*^9, 3.678027000030184*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "s", " ", "k"}], "/.", 
        RowBox[{"k", "\[Rule]", "4"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
          RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], "/.", 
        RowBox[{"k", "\[Rule]", "4"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Selection strenght (s)\>\"", ",", "LabelSize"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Probability of fixation (P[4])\>\"", ",", "LabelSize"}],
          "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Placed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Tailor approximation\>\"", ",", "LabelSize"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Branching solution\>\"", ",", "LabelSize"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "0.8"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  " ", "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.670852542323443*^9, 3.670852577246163*^9}, {
   3.677266757722001*^9, 3.677266790823448*^9}, {3.677267186790778*^9, 
   3.677267199923195*^9}, 3.6772673470976906`*^9, {3.67733523260995*^9, 
   3.67733526317327*^9}, {3.677337717576913*^9, 3.6773377512061987`*^9}, {
   3.677337961255414*^9, 3.6773379996916027`*^9}, {3.677338079766179*^9, 
   3.677338079963024*^9}, {3.677338123769176*^9, 3.6773381362746367`*^9}, 
   3.6773381763546195`*^9, {3.67733824009348*^9, 3.6773382949475126`*^9}, 
   3.6773383492625*^9, {3.677353733698001*^9, 3.677353814687007*^9}, {
   3.677353912025876*^9, 3.677353946691436*^9}, {3.6774367577293572`*^9, 
   3.67743691224634*^9}, {3.6774370092064843`*^9, 3.6774370662841673`*^9}, {
   3.677437180380862*^9, 3.6774372705215397`*^9}, {3.677437331837074*^9, 
   3.677437333932373*^9}, {3.6774373907896576`*^9, 3.677437391429302*^9}, {
   3.6786334334437895`*^9, 3.678633480953163*^9}, {3.6805042220291023`*^9, 
   3.680504262744726*^9}, {3.680504435274211*^9, 3.6805048083231106`*^9}, {
   3.6805048448426285`*^9, 3.6805048868922434`*^9}, {3.680505092690821*^9, 
   3.6805051424150624`*^9}, {3.680505188710967*^9, 3.680505256532113*^9}, {
   3.6805053027562504`*^9, 3.680505339290894*^9}, {3.6805053764694157`*^9, 
   3.680505410203396*^9}, {3.680505450109294*^9, 3.6805054840579896`*^9}, {
   3.6805055167681923`*^9, 3.6805055880337095`*^9}, {3.6805058234042344`*^9, 
   3.680505943293465*^9}, {3.6805060428192964`*^9, 3.6805060731649284`*^9}, {
   3.681376069108245*^9, 3.6813760966131897`*^9}, {3.6817450261669884`*^9, 
   3.681745043503086*^9}, {3.681745371868189*^9, 3.6817453736266503`*^9}, {
   3.6817454092616787`*^9, 3.6817454759033756`*^9}, {3.681745514324233*^9, 
   3.681745533981577*^9}, {3.681745575384657*^9, 3.681745651630608*^9}, {
   3.6817921878322268`*^9, 3.6817921919592505`*^9}, {3.681792486557679*^9, 
   3.681792491458929*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], Dashing[Large], 
        LineBox[CompressedData["
1:eJwtzn9M1HUcx3F+eDEtWJ5XNwlKEpuywRymbmW8yLQtmMgPE8E1meVqtYvL
8SNh/KhMYeW4OQMJFETR4wI8Drjjo5koDmN1QagQx50gcJwfViBIPxYWfdu9
/njv8c/zvb3C9mcmH/Dz8fHZodz/1k2JLPvRsBivSTFH1qjbLRofeF0P9Zbc
+jLNkzQWe242hBZqVtFELDzRlZatdF4zYL/Y+6de6bzqscl3oPtDpfNajKl1
ac06pfNqgC7n9o5j1/S0FvsCy/pV7o+pEU1+cWO9mcXUjM70dbONXYdpGwyB
6oAqewntQHb1YPTKqGP0CmYizyzTXDHQTvi9vHdx9XfH6XWssvov5k+doDdQ
fXf9p87ZctqNvTXmDNXMSfo9wn96Ni5HW0V/QLxpuW0m+BS1o2B+LqrljRra
i0MfrPgk1FZL+7C/NbNx0nqG/ozE6NdcKT/W0X78FjC0c3vvWXoLZZrJmw7P
OXobKbpq3a6FenoH3SFPvZn86DwdQIy/auu82kh/wYFYmz5Y20CH0NSjtoc/
baIOLJS6o25FfEOH8VdtXr8qspE68ff0kXzntibqQmjpluSK1GZ6Fw8Otb0/
kHqRjmCiL+mGc5OZjmKtISLL0GGmoyj4ffAl6+YWeg+7/ohd0nythd7DZ89/
Mf3uVgsdw4tThuGHdgsdwyuuXPlqYisdR2rOhiC/vlY6jocm08YT6W10Ap5l
/oX3h9voBN56TNsT9F47dWPiwmLEhdl26kZXVk+T70ErnUS4K2FD1D9WOgmX
vn0opMhGPThvelBe8K+NejBX5NltLumg91FefHVz/VJBJfYNrV7qflxQibXR
JY7wIEElLo0nFpxTCyox8vrY9bPPCKr0gaqEukhBJS5Xxr1TkySoxOG55o0j
KYJKJMSvCHhut6ASo4+GG06nCyqxJEM3c+ptQZX+BUNedbagEtqi+XhnrqDK
/+Ce0JA8QSUOloZ1VhUKKlHxq0VVdVRQiYzt2kFHqaASEafzjcFfCirx7c5t
8V8bBJX43GgMcRwXVNnjGzi98itBlT3pH11NqxBU2WO5Y6isFFTiP6sjW+8=

         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1:eJwVj3s0lAkYxsdIchlrx8gqlFKLGkfa0tktjy6cjWIqUTplKl0OK8NK0rpU
ctsw2xbJuE0u0+R+/9iWYZOyo0mYjMF8JSRLptnaRdnZP97zPu85v+ec32t5
Inj/KSqFQtmrnv83f4IIEydYOqljqDhhn1P8GnptFYMCiuBh4AaGPehbLxSm
MQxBCSs3SzFyxqFH98yjGStBWf/12ot0Fub02w6fV3MUadXDQEM2xOVPP3IY
zqCw9ez89DnYrNHXfo7BQotbdDZrUSwmbA6XBTHYaMn5IE4ZT0NQeM/eFBEH
9pvimyx+yoMfLa1b63UEWlYUn/tljwClVLeXT4NjQXHtqlsjLUeLr81MSVsc
nJnbF7pmqsGl0bWzxIkYD1Pya+7W4zxP6mBql4Il3F6Z8c0mTDPzdRkPuGjo
TL4fcrwZ1O+OLKz+/QYM3Wj6J4NFWFmnuXBp4iZ41qwHI+5t4A3ZX5HPpMNe
/uuzaI2HOJJbwdaavg1W0I63XcXtsOqycAs3ycKI3DNOENABd+GX9dPLsiGf
3GCcvOQJolRKu8rdudgyZ6VSiDpxMdDosnl9HuZbt0S+ChTjRHVwyWhdPriL
/bdJlF1gOewcPPAnHxVrEk3nd0vwl3a/p8vTuxitGWNf1nmGNMboI9lYAejr
N9YV9D7DgSBekNdcIWZTRBsq73Sj3cz44P75IsTVHglJ9XwOJ02tHSq6AOOP
1nVFGPbglHM9Z5nJPdDjZ3SLRT0ofUwXWy0VooPaOFzwQy/mkl7bPbe9D0m4
A2G9ug//5EV2azFLkEgRORJP+jA7FX9JvqsUAuPrC35RUpgnbd2f4VMG5VSX
d7fNC7y7WBPQ51OOpalnSxkdLzAi2feHfHMFfH2ku6Y4/bDm2oZxGyrA13WJ
mNeTIepv6bd1jpWwT6cV5+bL4PXBeVGZqBLUheTSk9sHcHXVz1NndlRBNVPe
r9czgG8muAPvxVUY/+D1PpQjx7bBC2+2s6qRPBqYuZwyCJ/wjQZUSTVyXI0H
m5MH8V4o3HTTtwbcdtO8WoshjOlqRo8P1EDF3CNJKxrC0cUmjw3O1mLy6PAc
23EYI8ULtsUztbC4b8C3bRtGW9jjUo3QOpAnJm81WSpgNeix0e5THVLHZWM2
pxUY5NT2m8XUQ+U/F0ktVKBI+C496nM9js0SnwWkAsqYMe+KxAbsjNTLPrOK
RHpss2OhDgGLzw0l0qMk/PpX67zWI9Ap/KQaOkbC2iFRZmVA4M5Zke2oH4nG
V6yoAjoBpnvnMdVxEsOuL1vvLidANaS9+eK0mqdpefCZBBIDAhN2niPRlOnm
n7uPgOu6QhUvmkScsmzT8AEC3ts8p/NjSHi4G2mv8CZwW5IvLYoloZgfuJfj
q775LiEVV0gsYgdNZ58kML64pKM1Xs2v5UbyzhPgmzB0RlJJmMSo3OUXCHg1
KobG0tR96SFzs0gC/j8G8N9ySYQmWbZkRRNodWtUKm+QyJis0spKIHAoIriB
kkGC7WIilSURuNLw/bzmbRK2OZcEy64T+Mh6w9TOJPGb5y73O1wCFOE1X1oW
iWsCgZnsBoHZf68eNOSpfTRoU6a3COiLPJyMstU+viHNhzMIVLiOMZbmqH2q
ermZmer/uz36v8ol8R8bs2E0
         "]]}}, {}}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Tailor approximation\"", 25, StripOnInput -> False],
       StyleBox["\"Branching solution\"", 25, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.3, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"Selection strenght (s)\"", 25, StripOnInput -> False], 
      TraditionalForm], 
     FormBox[
      StyleBox[
      "\"Probability of fixation (P[4])\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0, 0.1}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0], 
           Dashing[Large]], 
          Line[CompressedData["
1:eJwtzn9M1HUcx3F+eDEtWJ5XNwlKEpuywRymbmW8yLQtmMgPE8E1meVqtYvL
8SNh/KhMYeW4OQMJFETR4wI8Drjjo5koDmN1QagQx50gcJwfViBIPxYWfdu9
/njv8c/zvb3C9mcmH/Dz8fHZodz/1k2JLPvRsBivSTFH1qjbLRofeF0P9Zbc
+jLNkzQWe242hBZqVtFELDzRlZatdF4zYL/Y+6de6bzqscl3oPtDpfNajKl1
ac06pfNqgC7n9o5j1/S0FvsCy/pV7o+pEU1+cWO9mcXUjM70dbONXYdpGwyB
6oAqewntQHb1YPTKqGP0CmYizyzTXDHQTvi9vHdx9XfH6XWssvov5k+doDdQ
fXf9p87ZctqNvTXmDNXMSfo9wn96Ni5HW0V/QLxpuW0m+BS1o2B+LqrljRra
i0MfrPgk1FZL+7C/NbNx0nqG/ozE6NdcKT/W0X78FjC0c3vvWXoLZZrJmw7P
OXobKbpq3a6FenoH3SFPvZn86DwdQIy/auu82kh/wYFYmz5Y20CH0NSjtoc/
baIOLJS6o25FfEOH8VdtXr8qspE68ff0kXzntibqQmjpluSK1GZ6Fw8Otb0/
kHqRjmCiL+mGc5OZjmKtISLL0GGmoyj4ffAl6+YWeg+7/ohd0nythd7DZ89/
Mf3uVgsdw4tThuGHdgsdwyuuXPlqYisdR2rOhiC/vlY6jocm08YT6W10Ap5l
/oX3h9voBN56TNsT9F47dWPiwmLEhdl26kZXVk+T70ErnUS4K2FD1D9WOgmX
vn0opMhGPThvelBe8K+NejBX5NltLumg91FefHVz/VJBJfYNrV7qflxQibXR
JY7wIEElLo0nFpxTCyox8vrY9bPPCKr0gaqEukhBJS5Xxr1TkySoxOG55o0j
KYJKJMSvCHhut6ASo4+GG06nCyqxJEM3c+ptQZX+BUNedbagEtqi+XhnrqDK
/+Ce0JA8QSUOloZ1VhUKKlHxq0VVdVRQiYzt2kFHqaASEafzjcFfCirx7c5t
8V8bBJX43GgMcRwXVNnjGzi98itBlT3pH11NqxBU2WO5Y6isFFTiP6sjW+8=

           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJwVj3s0lAkYxsdIchlrx8gqlFKLGkfa0tktjy6cjWIqUTplKl0OK8NK0rpU
ctsw2xbJuE0u0+R+/9iWYZOyo0mYjMF8JSRLptnaRdnZP97zPu85v+ec32t5
Inj/KSqFQtmrnv83f4IIEydYOqljqDhhn1P8GnptFYMCiuBh4AaGPehbLxSm
MQxBCSs3SzFyxqFH98yjGStBWf/12ot0Fub02w6fV3MUadXDQEM2xOVPP3IY
zqCw9ez89DnYrNHXfo7BQotbdDZrUSwmbA6XBTHYaMn5IE4ZT0NQeM/eFBEH
9pvimyx+yoMfLa1b63UEWlYUn/tljwClVLeXT4NjQXHtqlsjLUeLr81MSVsc
nJnbF7pmqsGl0bWzxIkYD1Pya+7W4zxP6mBql4Il3F6Z8c0mTDPzdRkPuGjo
TL4fcrwZ1O+OLKz+/QYM3Wj6J4NFWFmnuXBp4iZ41qwHI+5t4A3ZX5HPpMNe
/uuzaI2HOJJbwdaavg1W0I63XcXtsOqycAs3ycKI3DNOENABd+GX9dPLsiGf
3GCcvOQJolRKu8rdudgyZ6VSiDpxMdDosnl9HuZbt0S+ChTjRHVwyWhdPriL
/bdJlF1gOewcPPAnHxVrEk3nd0vwl3a/p8vTuxitGWNf1nmGNMboI9lYAejr
N9YV9D7DgSBekNdcIWZTRBsq73Sj3cz44P75IsTVHglJ9XwOJ02tHSq6AOOP
1nVFGPbglHM9Z5nJPdDjZ3SLRT0ofUwXWy0VooPaOFzwQy/mkl7bPbe9D0m4
A2G9ug//5EV2azFLkEgRORJP+jA7FX9JvqsUAuPrC35RUpgnbd2f4VMG5VSX
d7fNC7y7WBPQ51OOpalnSxkdLzAi2feHfHMFfH2ku6Y4/bDm2oZxGyrA13WJ
mNeTIepv6bd1jpWwT6cV5+bL4PXBeVGZqBLUheTSk9sHcHXVz1NndlRBNVPe
r9czgG8muAPvxVUY/+D1PpQjx7bBC2+2s6qRPBqYuZwyCJ/wjQZUSTVyXI0H
m5MH8V4o3HTTtwbcdtO8WoshjOlqRo8P1EDF3CNJKxrC0cUmjw3O1mLy6PAc
23EYI8ULtsUztbC4b8C3bRtGW9jjUo3QOpAnJm81WSpgNeix0e5THVLHZWM2
pxUY5NT2m8XUQ+U/F0ktVKBI+C496nM9js0SnwWkAsqYMe+KxAbsjNTLPrOK
RHpss2OhDgGLzw0l0qMk/PpX67zWI9Ap/KQaOkbC2iFRZmVA4M5Zke2oH4nG
V6yoAjoBpnvnMdVxEsOuL1vvLidANaS9+eK0mqdpefCZBBIDAhN2niPRlOnm
n7uPgOu6QhUvmkScsmzT8AEC3ts8p/NjSHi4G2mv8CZwW5IvLYoloZgfuJfj
q775LiEVV0gsYgdNZ58kML64pKM1Xs2v5UbyzhPgmzB0RlJJmMSo3OUXCHg1
KobG0tR96SFzs0gC/j8G8N9ySYQmWbZkRRNodWtUKm+QyJis0spKIHAoIriB
kkGC7WIilSURuNLw/bzmbRK2OZcEy64T+Mh6w9TOJPGb5y73O1wCFOE1X1oW
iWsCgZnsBoHZf68eNOSpfTRoU6a3COiLPJyMstU+viHNhzMIVLiOMZbmqH2q
ermZmer/uz36v8ol8R8bs2E0
           "]]}}}, {}}}, {Frame -> True, FrameLabel -> {
        Style["Selection strenght (s)", 25], 
        Style["Probability of fixation (P[4])", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 0.1}, {0, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.01], 
         GrayLevel[0], 
         Dashing[Large]], 
        Directive[
         Thickness[0.01], 
         GrayLevel[0]]}, {
        Style["Tailor approximation", 25], 
        Style["Branching solution", 25]}, LegendFunction -> "Frame", 
       LegendLayout -> "Column"]], {0.3, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.678633456714703*^9, 3.6786334815148764`*^9}, {
   3.680504223961104*^9, 3.680504263280243*^9}, {3.6805044658357534`*^9, 
   3.6805045540264072`*^9}, {3.6805045844328384`*^9, 3.68050463685602*^9}, 
   3.680504669990218*^9, {3.6805047261306844`*^9, 3.680504735702226*^9}, {
   3.68050476664427*^9, 3.6805048087400303`*^9}, 3.6805048914117813`*^9, 
   3.680505113590201*^9, 3.680505257062133*^9, {3.6805053249106197`*^9, 
   3.6805053397082243`*^9}, 3.680505411202092*^9, 3.6805054878784976`*^9, {
   3.680505518904665*^9, 3.680505588390484*^9}, {3.680505847619596*^9, 
   3.6805059435669527`*^9}, {3.681376075197215*^9, 3.681376097272728*^9}, {
   3.6817445320209527`*^9, 3.681744537263221*^9}, {3.6817450272152534`*^9, 
   3.6817450438711367`*^9}, 3.6817453741039076`*^9, {3.681745427474283*^9, 
   3.681745438485792*^9}, {3.681745469056219*^9, 3.681745476545958*^9}, {
   3.6817455865628357`*^9, 3.6817456693657207`*^9}, 3.681792197470269*^9, {
   3.6817924874440546`*^9, 3.6817924919114103`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<FixationProbability.eps\>\""}], ",", "%"}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6817439628354053`*^9, 3.6817439736263933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], "/.", 
        RowBox[{"s", "\[Rule]", 
         RowBox[{"1", "/", "100"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
          RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], "/.", 
        RowBox[{"s", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
          "Solid"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Number of invaders (\!\(\*SubscriptBox[\(N\), \(I\)]\)[0])\>\"",
           ",", "LabelSize"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Probability of fixation (P)\>\"", ",", "LabelSize"}], 
         "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Placed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<s = 0.01\>\"", ",", "LabelSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<s = 0.1\>\"", ",", "LabelSize"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.8", ",", "0.2"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  " ", "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6829396726385183`*^9, 3.6829397059102297`*^9}, {
  3.682939909990469*^9, 3.6829399741411257`*^9}, {3.6829403112430744`*^9, 
  3.682940394975675*^9}, {3.6829405566423535`*^9, 3.6829406017874846`*^9}, {
  3.6829406547733445`*^9, 3.682940710651099*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], Dashing[Large], 
        LineBox[CompressedData["
1:eJwVx3880wkcx/GhK4nqKFMhpKZud6mT2yV9PphymZ8xX3XKoczPpimRkPOI
fvKgH3cPZX4r1U2JB6H8qHTlmnb90FJsjG1ftPwMjXN/vB+v99M86JD3AU0K
heI2t/9rkakuyjNt2j53nzUqDmzfGVO2MIrDB0rFRJirERO8JPRMK44AKJ1m
b84a+gD7z09e8zkPgfKCp3Q3CAFizPPHsVAhpORZDUzoxoJ/kUbxQGgXNFo4
MoMoabBnyv9XeegnCHSaydvXnwPitacYfaGzkJX92aqjqghKjmvMaAUsRYb+
lVWxxvdAr5IvKPMwQhedE4aWbg1wdcdXzU16Zrh0vakbe7oZ8oJSewx3WqIV
NW3j1qRWsC/oD/mbYYXGjo7xvRnP4emF0tx5yXS0Sclh6DUIQXzwt+wSwhot
f/jZR9rxEvjU/TSB22Y87FjrfyjvXxDzF1LVkTb4LD6w9srR1xBcu8ZvE8cW
r0ZniEpN3sK145EY4c/AEINvtKJvdYDb8qA0RexWtOTt8lO5isEVW43cI7eh
rbpeur7xPTx0fLdg4vx2TKto8Tzs9AGGx3XbRd6Ife+qekjBR6AvP8C8xnLA
DSVLZHvHu8Ccb9B3eq8jUkd5qnUl3dDweVIQRjghnUYu49pLYFmFbVlEOBNL
Xy10aHsvgZZmHR43zhkvHgkYaedKYWWeYSjn8A6cOSOXssalQJcdy0hN3YnU
y4mOdid7QDaqL8pMcUEdZWF5jboHxgmmih//C9b5nh9cwuuFZqs2O1H6Lgwf
pUlYg72wpemsYOJ3V7y17mSAcI8Mgh8XeMIlFuoniHtq22SgNPF4crrADROS
jLoHf+oDI7AJac11x0F+5OzwlT7QaDu0kXbTA2mV30vI6T54mhXzrb2PJ9LX
1dQl+fZDvezoWGi7J+q2zowP3uiHC1yaao2fF5qkM7VJDTlUdo0kvXvlhR7W
QxoNnnKoTouwNAvwRl4Ia7qpUA56i2cDAju90XmjNsthQA5ZDh81LPx3Y9JQ
eHL6JgWoyjn1sd27UdtQMnQ7XgHFXxYvatrng+3q8B6v+wrYkhjIzev3wdPB
r43PqRUwckMN6ihfFEjlycJtSphXX13kS/ri6KI73yUcUcKI1ipT4LFxSv2o
5WiFErZY59IthtkYd7fL20umhKL5oSWnov1QS+C0dg2VhE/6H20Sx/wwM+v+
Vx1XEjK1YogIHoHLJJWvz8STwNQcLL92hECGncqXnUDCF0qYWhhHoNIg6q75
cRICZwILbRIJZO1zoNQkkrB50nNAnUZgeJ+WSppMwpsh65SsywRmFIWt3XyK
BFOxqqyqlkBLlrNBdTYJoo7Iqf46AluGSmknckhIfytnrXxAoKhnyQrmRRJU
r7o/JzUT+IG9NOflJRKahe12Ls8JzF8d16v8g4SDjyuE4k4Cn9y01aTySVj5
iG6h10VgjOuA4v2chc3XY0FC4I4FiwT5+SQwGvNXFMsIZJtdfbm+kASduqzg
qCECX1RXH9taQsKDWt1qvorALyb7WTNz5tVkaIuGCYxeXaBuKiWhsyrltu0E
gUbGOpMu10nIuvd1ljNJoP4GeyfdGyQ4Vx7zzp0mUDZhHiGc89Sd0eJ/1AS6
n3vAzS4n4a8K7sTsLIFTA0Y+vjdJ+A8Bdlyp
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1:eJwd1nk0VV0UAHDyFKWiJEUyD2WeQ842z7z3jBFJypApFFGRJArRnCFEhhQy
hEohoU+TsYiQIeN7ZhH6zu2vu37rrn3O3vvuc9YVcPGlHl/HwMDwi5GBgXgK
Xl/NfMBXo8nAkJ4r65qsaXAqh9XbPQ0xXHzVn812FlH6Ja+LuxciBlLyctvv
aGRzn05Z7/4GhackZVY330N282SFebfPKJ1xa1JJZC46lMmYNeHWi4qCDjYc
o5Uj++VDh0fc6MjqnRzjhi/1yL8+7PVNuSlkF3PKtjiwAVVcbzFXKJxCK0hk
0IG7EWkLBvv6P55G3c5FE4WH3yM7g7dFU+mzyH3NT+dKZxOKTDykMBm3iG49
XPc8k/oFdYlEqQ67/UWKfZn3kxva0KpwZC/XFPZKUfcUezti36b1VkiDAdZH
pBe/P9SO5DmQp1UdAxh3qbqwjrWj4K3qFWVtjJD7e/76V9JXRGJTsAqeZwJe
/tf5zsKdiJdZKHZVmQVSjiSEe7P3oALSw94doSxwhs3eotSkByGSgIL0Gxa4
sCHt6p2oHuTCtLfLyYAVSKHbp2T+9KBcRh7xatuNsK95fVdj7w+ksLatLiKY
DfRZ46wSTfrQo1DGNSZHdmjz0HRy7O9HEXMNsZ/OscP53HVaVYv9yNk7nud+
CjvYtIsVLm3+iXiP8ByQ7maHV3G/N7Oq/UQ3tJUC7Rw4gDuKY+hKwk8Uxuox
9uTQNtDj87FVUhlAh+5+6bC24YSlneV7K70GkTL73eP8ZzhBrfjdV/awQcQZ
4zg3dpsTqCeaL5gkDqIvIWMc4e2cYGjTRvEsG0T6TiSzx1Y7IKrZlslyZRAp
iKi+XaNywcaNwR6LkUNoc0laYY4FNzTZp/aXRgyjM1xL91p8uMHJPl0kIHEY
/ThLjViN4wbjs7UXd6cPoyJgtrb8wA3nXKPYRaqGEfWT5/Ka4S5oubnoJLUw
jO6NKunZaO+G14xL78RdfyFB/g9dJCVeWHN7YFwkO4KuXRKpk7Hihen7mpEt
GiNobvjCU/sAXphXHBzoNxxB757KhRc94wWW9ANXG51HkLv6XZHD0nvgocVa
csX1EfTUxsWvRIwPVC6OxmiMjaAU/ZV1cpv5wfLMQGjCjVHEduRCEjcfP7g8
dOx1TR1F54IY5Blk+MGuPodJLHcUHc4lHf1M5oeHG/xZT1eNIt6Nm9943+KH
9Xs32Kv/GkUpH/eEPuYRAHKO4PhVlTGUaoVmhfYJQlH3uerlpjG0xbvm6iZ1
QdCLjeZ40zaGLlzWEZw1EYRoG6HUwJ4x5PTcgFLrLQg3sjwaSmhjiI+bXOj8
TBAMRdu4LrOPowffnU+mqgpBgQ9/QjQF2yVigMtAGCL7TQ8Xvx9H9xavPO2x
EYZPUxwU6pdxdDM2LijrhDA02/t1/eoYR9HP722SjxKGRxleE7MD48h/Y6GC
2Tth8OWfak5cHUf6xd8vXdIRAb6b/KdnpCcQjVFJeAqJwortqedFVyfQyB01
2nMLUXDT+8EvkDCBBvZDxfkjojAobLYafXsCfbM2Md0UJgqWMKmF0idQbd7R
QNHXomD6vs7boGwC3aHE1x3WEIPLpNu5zT0T6GDGL9f3quLA+cbfSVhiEs2l
1FJ+GomD2eHyhWWpSfT4XqrmH3txeH3fifxefhJxJVhyS50XhxwzepiZxiSi
XXjTlFAjDizaDyznzSdR+uG78nbGEjDPPpfyyX8SreM2YPjlsA/MT0WmM5ZN
oortgpN/vfYBy6rCwGjFJPLZutrJfWEfBLxwO9/0ahJ9X19SYpy+DxbPPR4K
qZtEpfN8bgWD+8DzUsLra62T6HjrwsfT3vvh0eb3PGFTk6gxPjuZFCYJQofp
e+dFaKju739lH69LAokWpLZFgoaq/eif76RLglIGl6igJA2VU1VJErWSEDuv
clNNnoayuf7zMmOWgqwxs1JpTRq69GDy4J1rUsCkecNxvzUNaRYo9ondk4aW
s5sGnobRkNreQ8tTudLQftehXzaChpQTznO+qJQG55fD+YWRNCTlX29o+l0a
/DNratJjaIhX2e6ZH58MZIZFFlNu0tBSVWhEZZYMeIRevjH3iIa6Thy98chO
FgxfJzmebKShVMeyirPOsnBAx/gl5T8acrZi7TVzl4WpknoBpQ80NKz1bP9C
kCwkBmTyzH6moRlexnf6d2WhZ+6dtulXGtrUmr74q10W/rY46QcN0ZAG6ju8
z1IOEgNh5eNfGvqrpHhpzV4OJFkzhhwZ6ahWMjqvxUUOQnRqncbX0ZHhbtmF
EH85mPEO2fqXmY6s58OuNyXKQYt+fysrGx355O+t9foiB2cfXeYr2klHaTuP
iBWaycOY+EF9Oyk6qq7Zc0TSRh5cfBTfvJKmo76T3XfynORBqXe6m0+WjgSr
D63P8pWH09n5XN3ydJTtbjV0L1EedIV3T6up0lFBpVFmRLs8bGqxSonTpqNX
Dop7bRwVwMKa1Trdmo56mGdtWo8rAL9aZ2a1DR2tFT6LJ/sowK27jRt7bekI
SDJrxmEKQM4cluKyp6O6JxI9KEMBOsu4BH2c6KhplS9ZYkgBfLsTgxtO0FFX
GuvOVS9F2D31LlLxDI5n2TgyGqgI3nkCsCUI5+e3sbLjnCJcqfTPHMb219rk
UBSrCF+Z/DxvnqWjTQNsaceeKMJwTIhizzk60hBlF/tvXBG+SMlcUrhERw+e
cKnc9VQCpalvFb/j6Yi0YydLpL8SFGXOUPKv05Hn+Z2dfiFK0Fr09cvhBDpS
NucONb6qBMpvf0e9SqSjz/Rdb1bzlCB1QxHJ9xYdMSjsMXAdVQInxamqjPt0
dKxSyFbOXRkCcrmcjTLpyKu7UXPBVxkktNcxdGIH/vUWfRmkDCqVvjVuWXQU
pVcxr3tFGYo7ZAsiHtHR42bTW3bZyhDWFWpVkENHM6Onm8MGlYHJnnWxJ5+O
wnc3mnxyVgGhlE86OSV0FHPQW+Gmuwq8Ldgas6eUjm44b+Ox81OB6JBdO29i
Z2UfHusPUwHBljmOc2V01CA/HT3/QAXCf3tk6JXT0RaT3fW8PSpwwbaJq+IF
HaWGesHJQ6rQKv0oQqAG94d67kDnUVXQJ50Wu4btKR4rb+CpCspOb3bPYau2
5wsLharC2T7P6be1dNQqPc7yPUUVdi9ohznU0RHrT49m4z5VkOAc3nmygY5O
G7q57HM7AOu3HS/d/pGOuvmCHO75HoDYQCN9D2zt+Sir9cEHABUcM3yNzf4w
W/9n9AFYiF1LP/GJjvL/DO1LenwAdpG+VRV9pqP+AtdZVtoBuKVif2p/Cx2Z
7XCJHA1Ug/Tb7U3VHXT0O6+Eq+GcGqgnpYYyfsX90GTOy4pUgy6t2Xda2Ctu
uR+P3FKDtwO1kjXYT17QuDpK1OAa1x6rl9/oiM05NK92Rg1CT01cT+2iow+P
b31K9lOHzk1eVXt+0FEwGnY+G6wOUQ07+qnYwm0qszbh6iC23+PZFexzq107
tyWow/5hLvspbEmywNHoQnVQuZDTWdVLR7HzT2cDaepw3frbX6N+OjKBBm5z
Lw0Y0umV3zeI/xOjL71qC9SAU88pFw9hO31Bzg7nNUBP0SksGtvfuSLHPV4D
XBZPxA5hJ4XnKV8q0oC4J1O/k4foaKT6mlXFnAbkWDXGLw/T0WUtcoLg+YMA
srLcEaN0FB/Dpph3+SCwqv2g5GLfa278KhN/EG6Y3jb+hP3kqNbeg2kHYdL/
a8iuMTpquyhfYFtzELItEn8+wRas5fwQy6wJbp1F+xvH6eiNdueGxThNuP/t
iFvrJJ5/PbVa6zua8LDC78U0Nrdh8rnSB5pw/MZI11Yazt/McfpUoSZsOeR0
2QRb2K6/a+KLJlikhcZUY0d7jz79uR3BlrKo2xl0OqLeW7L8dB/B9m2SXVrT
+L5Jst8i9RCBwsDFAHvs/NSXjdceI9CnfBjwxyZlnj9o9BKBdATZOBO7/Cmj
WF03AnpLkPK6GVx/P2m1eyuAjsbPugrsmQW2Ly1UgHNh6NTGOTo6aftjqdIG
gOWqy5Y92IPlhUIZ9gBt47HxMtgdwdQgXxeAox/zVa2wK5fv8rH5Axz3paum
YIevCXrrJQKEjt/bKjZPR1vXH9hY8RkgU9lAVWIB13dio2JaK8AyS2q0KjZD
w3fHqK8AW3fsqTHAnrly4ZlVL8AcSXb8OHYHa53dNA1ApTdDLAP7wWaLnH1b
tODoY8aj2xfxfO04rptqqgUbf87V/cK2+jy+8I2sBac3HvSZxz4X45/HaY3d
e4aB6Tdx/4ZtiXXUgucz9n17sD2Hk76F+GiBqxzXDSp2XvkXL7sELXi4dfuP
cmxRe43b29u0gHLahSNgiY7MOd8aWHzTgr6gqL0XsM98Mlq+2o3z4VzHE4Nd
r217ZN0QXq/rfNcD7OP7/SWm57Vgn+HEhffYWSs5VZ92agN3KH8wzzIdCaRt
H45x0IbNfHfni7G9VNWPnz+iDaHJryxeYj9vdhn0O6YNSZqVKW+xjUnFP21P
agPp3dWtbdiBHuRekVBtkHdpsp/DblSI+1aTpA0uQ5r35f/QkW/j+qalTm3w
gyj1bOwXR6WNJ3u0gWfaiespNumP9fu+fm04Ueo5XIJ9T+pRQ8OoNhR4HDlR
g117Q6fu9pI2uIfc/PUdm8sxvEpulw7Mtoatblmho6rppUIPOx2oaNo85I39
fLCj/NlhHfAyM1gNwC76WvJmyVkHLOp2bQrBfljl/TnGQweag79siMKOjumn
5YXowKZKnyup2FSB91JjKTog0uBQ8B/2CPlevme/Dlzru8XGt0pHP3VOlxQP
6YDSD6Hfgtjflakvl0d14BuD2Xcx7E+8bE1XZ3TAeiY7Wg67ZCRs7DGTLnj8
JF3Uxb4Q7iYxLqILLO9Pz7ljcxYp55z01IWj6QNaT7CPMJx4keajC9o/dMWL
sB+Tb39s9deFR4u8LKXYaHp2Vj1UF1xCHEtfYnvKPwO2WF24M2VW/R92den+
ridPdUErXqjwF7ZXJf9m2pQudN5pk96zhs8jK5lfcF4XNK4v2PJjr7MPU7BZ
0oXumA+hQth3l3sOvWbUg+rf5SUS2LXqydnx2/Sg99HFISVs7tc7QEZRD5LW
29mZYb+t3RjgF6QHv7znS4KxZWe6qIdD9SBMq2tnKPYDgXx5wzA9uKC2Lvg8
dnC4yczeK3pQMScvFYEtrRl76vMdPQiYrzh5Dfte5WY/6ed6UGWgp5mK7VPE
7j0xpwel7zcfeY3d3dtn+u23HhR8ZbCpxjba+kyybkUPxtz6jWqxhX0oE8kk
fZBCF8TrsTv33zhpwqkPLWfyaz5i6+Zs93ysoA/eAf1u3di7H3C5ufvrg2tZ
6cNFbGWxlM+5Z/Shtv2jyxI2tUhAdTREH2R96Xv/YF+rlWT1vKQPpoLOiWvY
K8Pa+Sdv6cN37QgK8186+iHjS/d5rg/8JJLJNuzMmoag08v6QPeS1dmHXW1s
1le2pg89EWef7sfubm0xXFhnAJWXD++QwuYc7tkVtMkAquMZfshgR22cexnM
awB+HbKWStjulvwM5zQNYO/F1C8IW3IoODoiwgA6UwrlLLFPmqVVhUTh98Oq
OlbYj8vezfhfNYAsBQ5La2zxqG2Ox24YQEFspbcttpDYEzndhwZQIaRw3QF7
t0dvF3OtAeRVb7p8DJtlUk8qhtEQpgcSzPyxDay9XC4yG0IYR7dUAJFf1Y27
Z1kNIUupji0QmxTfy+jJYQgyooH1p7H/Sp/tMBYwBIr+dYmz2At+T8LYtAxh
1ia2KAx7aG5by/VwQ9il9e7zNewzL65tC4w0BAXajshY7PXhJEu7aENIfmeu
EoctummhlT/BENorw5LiiX4IdLY/SzOElhubrRKxx8zSOltfG4Klv8HtO9i0
7P39O1cNwS5IxCEd+4JXlsAKgxFErLtFJ7xFfo9LH8kI5uR5L2Vgy1RtGchl
M4KLO8NyHmL7tU4PHuA1ArmLZUNZ2DN/y0cc1I1gKWjbgTyiHjvdqbSzRvBK
6LruM2ylYP/Kb+eNwEGK8z3hwLvpERwRRuAo8cK0GHu2fYXz0lUjaGn1oZRg
T1HLDpxINoI97pnkMuxRU9FLklVGsMX+tFglMR/AwlXJYAwsZQJQjc3jrNw7
TTKG+haffML2Ya65+1iNgWy9gasGu7OqWi2Fwxje6e8dJdyhdvZImKAxvErd
dOUt9mfFsVw9XWOQ+tz+sB67VvyDessVY0joaDr6AVtYLLm59poxnLMcLCYc
JeLpVnLdGMTczzN9xDYSZLl5664xiAYrZhL+wqM7ZpNjDGH/NXV/wu7d8ure
93pj8GIxPNCMvTKXPz/IbALSg+Ep7dhOsyHX2llN4Kjrrl7C1dNGAvWbTYBf
10igA/sS7Zdpzg4TqCs+lUV444hQloeICcxsWHz0FZv7ezKVpmsCVfJOdzqJ
ftdcK1y8ZAKtP2pke7D1d7F/0og2geL7TF6EbU7dmrgYawK0wL5swsECqRJs
t01AVc2H5wf2i4sFmfzZJvA4fOIvYdBuvmvUaAJ7HEnlfdimb7nCk9lMIdN5
on8A25En+UEfuynM1b7nGMT2CdhbJbLDFPY/ttYifF1IfLlwjynIyoWmEW65
dCCwTtoUUraz2Q1h2+kedp8km8KVxsoXw9jH3mWQ0W1TmCl9ZTSKXR8SHOJ3
3xT8zYt9CYvLWmRlpJpC3Bn324QnklYWmbJNgXk3dx/hQD/btMbneH2eBP8x
7EiezTTKN1MIBY3YcezsU8HXXHnMoKFF8vYkcZ7FLMpu7zWDiYG5EsKe3SK9
9UJm8CkipoWwtEGrvISkGUjX7NpKwy7nle6a1DCDN5G9lwk3NgyIBzmZwaUw
Q086cd72WNTHZJjB+9By9mls3+L6V/6PzKD/J4M44Tl9zRKHPDOoWhZBhFd9
pdKlnplBDx/JmzB77aaQ5mozsLfiaiCsfKJRalcfjleuDZzBvligdTuXzxw4
prLKZ4n7QKfyWqKgORx+2fQf4atfZSNCRM2B9XFbD+FbDPy+ptLmcDE/jmmO
qJ+6Zjh10Bx6dDPMCH9YeLGi4mgORdxnuglzI0XXhmRzYIhaNzxPfG+powOk
dHNQ4uZaJBzGE++inWUO9h/YWBawhxd/OVc9MQdLxywJwmVFyY4lVeag6nrx
JGGqIJNtWq85qLPzjhGOZW4xChKyAA13trZFYt5n1xpLxSwg7kt3P+HZ/v2G
M/stIPPHbTph+9eX9b0VLeBNTO3G39gSQQd0julZQN3hjUC4fiRdw8LNAlQl
TmcTZvzgKyOWbwGrUqXHloj5un8wlLfQAvgMhXwIF5zY1MBRYgGKYxeDCdsz
5jitvLCAHdJb4ggXK/+Ia/7PAvwijpcRds0wnQgds4B6QxGmZcIvb1mNcJKB
uSbhJuGtD0OXf3KRIVyTP4Xwi2iX9B5uMsypPswizG4jO9HCS4bFpfNlhKum
mi5VCZOBvHSngzCXKFPJDUUyrI04c/0h5inhFMdBK2x6Tyxh3mzGKikbMrhl
VN8k7Pcy0Z3PjgwH8u8lEd45/OzNXwcyzLBK5BI+oT7jXXuMDLwvP9QSZh72
/88ggAwt7VILhLXVAy9Rb5Dhl3mN9Qr2HTJJRucWGfJFvB0Ijx2/1aVwhwzf
ldiPEk5MKJXbkUSGalUNL8J9Q3O9XzPIUICkIgiHJZzWcHxGhpiGC08Ivxo6
M+/2hQx3nFT+EP6Vc3QoooUMYUmGDKvY2zxN21PbyPDZisJM2IMmUNb6jQxZ
5422EuZa/BCI+nH++zoECfuxCM1xzZDBetrLkLDI/s8z77ZToKdyPI4webLy
Z98OCtQ9W3+D8LnCrJY/Oylw5t3uO4RbFEKK5XgpcNJH+gHhcA0R/1RhCjQy
MxcQ7jILnQ5UosAd5rMfCMf7iU0J2VIg/GQ9aQ3b+KFL/e5DFHjM1L+B8Ia2
1BQOBwpsebOwkXC4CqfRXycKTFVt5yDsv8bwsOsEBYIKOPcQto3tskw8QwFy
g6oiYf7cuPK12xTYMKN2hHB3Z2Pc/F0KGHY0HCV8fxPJdeI+Bd68JLsS3uYb
wt6VSgGLTBsPwszKbh5ljyjwMVEhgPDYW+DxKqPAEwWVKMIlvbMXOtsoID8Q
l0fY8HXM/eUOCoBxa/6//VL2lvJ0UkCxg7OAMMneZNSxhwLTZ2KLCVu1PbT8
OUSBQwnmLwnPNVLExxdwvVlCHwgrFhc2r3BT4YuK+jjhw77f16M9VPg9OEAj
HCm5QeOiABV2y4bPEG7Ldspm3kcFF4NbS4RPJ28O3aJOhYkJ6Q1/sZ9HnhTm
d6QC06wFP2FGAVXR3UepYCy+XYiwaRVJnPM4FfIzPooQ7p9P3c/iTYWOT+L7
CbO5fZGfOkeFN+tClQi7GClpVadQQQUeGRJ+OsSo8yKdCuLTI8aEf1/8pFua
RQX7syJmhONeuBnmPqFCnUcMhXDF/iSLhFdU2KTw9xDhzVv+Ojp34/imUg/C
+owHgyUHqSD3m+pN+MJcyI3f41R40dnlR5jWtVCf8IcKsd15QYQ/5dBkanZb
gjKvZSTh9cmSxnGClhAAZlcIa8Z7uh7aZwmsbEpXCRcGDt+bPmAJDfafrxNO
0PrBKHjIEoxj1ZIIi45ESd09agnd/D9TCL+KlznE5mkJkX+C0giPfA8vWgix
hDOH/LIIwxmhI00pliA0kfaUcAfvh6vwyBJMV94VEvZ6G/i87KklHC/peUb4
Hnv95vTXliB6c6CM8NRj91eBfZaQv0StIpwdeFBfc8oS3mRFVxN21Nz2ZQOD
FQjX3nlL+L/mlwNJe7G7dN4TDk9O8HaVsQI7p+EmwirHjy9KISvQ8XT/RDjr
95ZNNU5WEKPP0UqYS6KyvNvXCtZxu7cTjj50zPV3uBWsvUr7+i/fF+VVMplW
UDxa/p0wmYdtp9s7KwhoOt5LWOmcs9+DX1aQJVH689/6DQbCyqzWcCQ+bYgw
53aZbx/3WcNYEIwQjnTiij1uag3HqQ/GCM/mraJVb2u4/+HNBOEV+a5TeU+s
4ZeD5BRh0qvnmdbj1iCzbnXm3/veEWdjGRu4QA2Z/xfPxMOHAmyAp+T84r/9
djs8Kiq2Aa1A5qV/+ckmSwrO2MBatf7yv3p4GD2sZG3h0U2jP4Qz17s9ivKx
BeMCvhXC72MFvRmLbaEp+vs/07f9UDw3bwuhoYGrhNG1nPoARTtI/T7yz9eZ
TtmdDLADJX/DNcJ8XVM5ZZV2sMif9s8FRX44Lzu4WT74z/8DLQCFqQ==
         "]]}}, {}}},
     InsetBox[
     TemplateBox[{
      StyleBox["\"s = 0.01\"", 25, StripOnInput -> False],StyleBox[
       "\"s = 0.1\"", 25, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox[
      "\"Number of invaders (\\!\\(\\*SubscriptBox[\\(N\\), \
\\(I\\)]\\)[0])\"", 25, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox["\"Probability of fixation (P)\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 99.99999795918367}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0], 
           Dashing[Large]], 
          Line[CompressedData["
1:eJwVx3880wkcx/GhK4nqKFMhpKZud6mT2yV9PphymZ8xX3XKoczPpimRkPOI
fvKgH3cPZX4r1U2JB6H8qHTlmnb90FJsjG1ftPwMjXN/vB+v99M86JD3AU0K
heI2t/9rkakuyjNt2j53nzUqDmzfGVO2MIrDB0rFRJirERO8JPRMK44AKJ1m
b84a+gD7z09e8zkPgfKCp3Q3CAFizPPHsVAhpORZDUzoxoJ/kUbxQGgXNFo4
MoMoabBnyv9XeegnCHSaydvXnwPitacYfaGzkJX92aqjqghKjmvMaAUsRYb+
lVWxxvdAr5IvKPMwQhedE4aWbg1wdcdXzU16Zrh0vakbe7oZ8oJSewx3WqIV
NW3j1qRWsC/oD/mbYYXGjo7xvRnP4emF0tx5yXS0Sclh6DUIQXzwt+wSwhot
f/jZR9rxEvjU/TSB22Y87FjrfyjvXxDzF1LVkTb4LD6w9srR1xBcu8ZvE8cW
r0ZniEpN3sK145EY4c/AEINvtKJvdYDb8qA0RexWtOTt8lO5isEVW43cI7eh
rbpeur7xPTx0fLdg4vx2TKto8Tzs9AGGx3XbRd6Ife+qekjBR6AvP8C8xnLA
DSVLZHvHu8Ccb9B3eq8jUkd5qnUl3dDweVIQRjghnUYu49pLYFmFbVlEOBNL
Xy10aHsvgZZmHR43zhkvHgkYaedKYWWeYSjn8A6cOSOXssalQJcdy0hN3YnU
y4mOdid7QDaqL8pMcUEdZWF5jboHxgmmih//C9b5nh9cwuuFZqs2O1H6Lgwf
pUlYg72wpemsYOJ3V7y17mSAcI8Mgh8XeMIlFuoniHtq22SgNPF4crrADROS
jLoHf+oDI7AJac11x0F+5OzwlT7QaDu0kXbTA2mV30vI6T54mhXzrb2PJ9LX
1dQl+fZDvezoWGi7J+q2zowP3uiHC1yaao2fF5qkM7VJDTlUdo0kvXvlhR7W
QxoNnnKoTouwNAvwRl4Ia7qpUA56i2cDAju90XmjNsthQA5ZDh81LPx3Y9JQ
eHL6JgWoyjn1sd27UdtQMnQ7XgHFXxYvatrng+3q8B6v+wrYkhjIzev3wdPB
r43PqRUwckMN6ihfFEjlycJtSphXX13kS/ri6KI73yUcUcKI1ipT4LFxSv2o
5WiFErZY59IthtkYd7fL20umhKL5oSWnov1QS+C0dg2VhE/6H20Sx/wwM+v+
Vx1XEjK1YogIHoHLJJWvz8STwNQcLL92hECGncqXnUDCF0qYWhhHoNIg6q75
cRICZwILbRIJZO1zoNQkkrB50nNAnUZgeJ+WSppMwpsh65SsywRmFIWt3XyK
BFOxqqyqlkBLlrNBdTYJoo7Iqf46AluGSmknckhIfytnrXxAoKhnyQrmRRJU
r7o/JzUT+IG9NOflJRKahe12Ls8JzF8d16v8g4SDjyuE4k4Cn9y01aTySVj5
iG6h10VgjOuA4v2chc3XY0FC4I4FiwT5+SQwGvNXFMsIZJtdfbm+kASduqzg
qCECX1RXH9taQsKDWt1qvorALyb7WTNz5tVkaIuGCYxeXaBuKiWhsyrltu0E
gUbGOpMu10nIuvd1ljNJoP4GeyfdGyQ4Vx7zzp0mUDZhHiGc89Sd0eJ/1AS6
n3vAzS4n4a8K7sTsLIFTA0Y+vjdJ+A8Bdlyp
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJwd1nk0VV0UAHDyFKWiJEUyD2WeQ842z7z3jBFJypApFFGRJArRnCFEhhQy
hEohoU+TsYiQIeN7ZhH6zu2vu37rrn3O3vvuc9YVcPGlHl/HwMDwi5GBgXgK
Xl/NfMBXo8nAkJ4r65qsaXAqh9XbPQ0xXHzVn812FlH6Ja+LuxciBlLyctvv
aGRzn05Z7/4GhackZVY330N282SFebfPKJ1xa1JJZC46lMmYNeHWi4qCDjYc
o5Uj++VDh0fc6MjqnRzjhi/1yL8+7PVNuSlkF3PKtjiwAVVcbzFXKJxCK0hk
0IG7EWkLBvv6P55G3c5FE4WH3yM7g7dFU+mzyH3NT+dKZxOKTDykMBm3iG49
XPc8k/oFdYlEqQ67/UWKfZn3kxva0KpwZC/XFPZKUfcUezti36b1VkiDAdZH
pBe/P9SO5DmQp1UdAxh3qbqwjrWj4K3qFWVtjJD7e/76V9JXRGJTsAqeZwJe
/tf5zsKdiJdZKHZVmQVSjiSEe7P3oALSw94doSxwhs3eotSkByGSgIL0Gxa4
sCHt6p2oHuTCtLfLyYAVSKHbp2T+9KBcRh7xatuNsK95fVdj7w+ksLatLiKY
DfRZ46wSTfrQo1DGNSZHdmjz0HRy7O9HEXMNsZ/OscP53HVaVYv9yNk7nud+
CjvYtIsVLm3+iXiP8ByQ7maHV3G/N7Oq/UQ3tJUC7Rw4gDuKY+hKwk8Uxuox
9uTQNtDj87FVUhlAh+5+6bC24YSlneV7K70GkTL73eP8ZzhBrfjdV/awQcQZ
4zg3dpsTqCeaL5gkDqIvIWMc4e2cYGjTRvEsG0T6TiSzx1Y7IKrZlslyZRAp
iKi+XaNywcaNwR6LkUNoc0laYY4FNzTZp/aXRgyjM1xL91p8uMHJPl0kIHEY
/ThLjViN4wbjs7UXd6cPoyJgtrb8wA3nXKPYRaqGEfWT5/Ka4S5oubnoJLUw
jO6NKunZaO+G14xL78RdfyFB/g9dJCVeWHN7YFwkO4KuXRKpk7Hihen7mpEt
GiNobvjCU/sAXphXHBzoNxxB757KhRc94wWW9ANXG51HkLv6XZHD0nvgocVa
csX1EfTUxsWvRIwPVC6OxmiMjaAU/ZV1cpv5wfLMQGjCjVHEduRCEjcfP7g8
dOx1TR1F54IY5Blk+MGuPodJLHcUHc4lHf1M5oeHG/xZT1eNIt6Nm9943+KH
9Xs32Kv/GkUpH/eEPuYRAHKO4PhVlTGUaoVmhfYJQlH3uerlpjG0xbvm6iZ1
QdCLjeZ40zaGLlzWEZw1EYRoG6HUwJ4x5PTcgFLrLQg3sjwaSmhjiI+bXOj8
TBAMRdu4LrOPowffnU+mqgpBgQ9/QjQF2yVigMtAGCL7TQ8Xvx9H9xavPO2x
EYZPUxwU6pdxdDM2LijrhDA02/t1/eoYR9HP722SjxKGRxleE7MD48h/Y6GC
2Tth8OWfak5cHUf6xd8vXdIRAb6b/KdnpCcQjVFJeAqJwortqedFVyfQyB01
2nMLUXDT+8EvkDCBBvZDxfkjojAobLYafXsCfbM2Md0UJgqWMKmF0idQbd7R
QNHXomD6vs7boGwC3aHE1x3WEIPLpNu5zT0T6GDGL9f3quLA+cbfSVhiEs2l
1FJ+GomD2eHyhWWpSfT4XqrmH3txeH3fifxefhJxJVhyS50XhxwzepiZxiSi
XXjTlFAjDizaDyznzSdR+uG78nbGEjDPPpfyyX8SreM2YPjlsA/MT0WmM5ZN
oortgpN/vfYBy6rCwGjFJPLZutrJfWEfBLxwO9/0ahJ9X19SYpy+DxbPPR4K
qZtEpfN8bgWD+8DzUsLra62T6HjrwsfT3vvh0eb3PGFTk6gxPjuZFCYJQofp
e+dFaKju739lH69LAokWpLZFgoaq/eif76RLglIGl6igJA2VU1VJErWSEDuv
clNNnoayuf7zMmOWgqwxs1JpTRq69GDy4J1rUsCkecNxvzUNaRYo9ondk4aW
s5sGnobRkNreQ8tTudLQftehXzaChpQTznO+qJQG55fD+YWRNCTlX29o+l0a
/DNratJjaIhX2e6ZH58MZIZFFlNu0tBSVWhEZZYMeIRevjH3iIa6Thy98chO
FgxfJzmebKShVMeyirPOsnBAx/gl5T8acrZi7TVzl4WpknoBpQ80NKz1bP9C
kCwkBmTyzH6moRlexnf6d2WhZ+6dtulXGtrUmr74q10W/rY46QcN0ZAG6ju8
z1IOEgNh5eNfGvqrpHhpzV4OJFkzhhwZ6ahWMjqvxUUOQnRqncbX0ZHhbtmF
EH85mPEO2fqXmY6s58OuNyXKQYt+fysrGx355O+t9foiB2cfXeYr2klHaTuP
iBWaycOY+EF9Oyk6qq7Zc0TSRh5cfBTfvJKmo76T3XfynORBqXe6m0+WjgSr
D63P8pWH09n5XN3ydJTtbjV0L1EedIV3T6up0lFBpVFmRLs8bGqxSonTpqNX
Dop7bRwVwMKa1Trdmo56mGdtWo8rAL9aZ2a1DR2tFT6LJ/sowK27jRt7bekI
SDJrxmEKQM4cluKyp6O6JxI9KEMBOsu4BH2c6KhplS9ZYkgBfLsTgxtO0FFX
GuvOVS9F2D31LlLxDI5n2TgyGqgI3nkCsCUI5+e3sbLjnCJcqfTPHMb219rk
UBSrCF+Z/DxvnqWjTQNsaceeKMJwTIhizzk60hBlF/tvXBG+SMlcUrhERw+e
cKnc9VQCpalvFb/j6Yi0YydLpL8SFGXOUPKv05Hn+Z2dfiFK0Fr09cvhBDpS
NucONb6qBMpvf0e9SqSjz/Rdb1bzlCB1QxHJ9xYdMSjsMXAdVQInxamqjPt0
dKxSyFbOXRkCcrmcjTLpyKu7UXPBVxkktNcxdGIH/vUWfRmkDCqVvjVuWXQU
pVcxr3tFGYo7ZAsiHtHR42bTW3bZyhDWFWpVkENHM6Onm8MGlYHJnnWxJ5+O
wnc3mnxyVgGhlE86OSV0FHPQW+Gmuwq8Ldgas6eUjm44b+Ox81OB6JBdO29i
Z2UfHusPUwHBljmOc2V01CA/HT3/QAXCf3tk6JXT0RaT3fW8PSpwwbaJq+IF
HaWGesHJQ6rQKv0oQqAG94d67kDnUVXQJ50Wu4btKR4rb+CpCspOb3bPYau2
5wsLharC2T7P6be1dNQqPc7yPUUVdi9ohznU0RHrT49m4z5VkOAc3nmygY5O
G7q57HM7AOu3HS/d/pGOuvmCHO75HoDYQCN9D2zt+Sir9cEHABUcM3yNzf4w
W/9n9AFYiF1LP/GJjvL/DO1LenwAdpG+VRV9pqP+AtdZVtoBuKVif2p/Cx2Z
7XCJHA1Ug/Tb7U3VHXT0O6+Eq+GcGqgnpYYyfsX90GTOy4pUgy6t2Xda2Ctu
uR+P3FKDtwO1kjXYT17QuDpK1OAa1x6rl9/oiM05NK92Rg1CT01cT+2iow+P
b31K9lOHzk1eVXt+0FEwGnY+G6wOUQ07+qnYwm0qszbh6iC23+PZFexzq107
tyWow/5hLvspbEmywNHoQnVQuZDTWdVLR7HzT2cDaepw3frbX6N+OjKBBm5z
Lw0Y0umV3zeI/xOjL71qC9SAU88pFw9hO31Bzg7nNUBP0SksGtvfuSLHPV4D
XBZPxA5hJ4XnKV8q0oC4J1O/k4foaKT6mlXFnAbkWDXGLw/T0WUtcoLg+YMA
srLcEaN0FB/Dpph3+SCwqv2g5GLfa278KhN/EG6Y3jb+hP3kqNbeg2kHYdL/
a8iuMTpquyhfYFtzELItEn8+wRas5fwQy6wJbp1F+xvH6eiNdueGxThNuP/t
iFvrJJ5/PbVa6zua8LDC78U0Nrdh8rnSB5pw/MZI11Yazt/McfpUoSZsOeR0
2QRb2K6/a+KLJlikhcZUY0d7jz79uR3BlrKo2xl0OqLeW7L8dB/B9m2SXVrT
+L5Jst8i9RCBwsDFAHvs/NSXjdceI9CnfBjwxyZlnj9o9BKBdATZOBO7/Cmj
WF03AnpLkPK6GVx/P2m1eyuAjsbPugrsmQW2Ly1UgHNh6NTGOTo6aftjqdIG
gOWqy5Y92IPlhUIZ9gBt47HxMtgdwdQgXxeAox/zVa2wK5fv8rH5Axz3paum
YIevCXrrJQKEjt/bKjZPR1vXH9hY8RkgU9lAVWIB13dio2JaK8AyS2q0KjZD
w3fHqK8AW3fsqTHAnrly4ZlVL8AcSXb8OHYHa53dNA1ApTdDLAP7wWaLnH1b
tODoY8aj2xfxfO04rptqqgUbf87V/cK2+jy+8I2sBac3HvSZxz4X45/HaY3d
e4aB6Tdx/4ZtiXXUgucz9n17sD2Hk76F+GiBqxzXDSp2XvkXL7sELXi4dfuP
cmxRe43b29u0gHLahSNgiY7MOd8aWHzTgr6gqL0XsM98Mlq+2o3z4VzHE4Nd
r217ZN0QXq/rfNcD7OP7/SWm57Vgn+HEhffYWSs5VZ92agN3KH8wzzIdCaRt
H45x0IbNfHfni7G9VNWPnz+iDaHJryxeYj9vdhn0O6YNSZqVKW+xjUnFP21P
agPp3dWtbdiBHuRekVBtkHdpsp/DblSI+1aTpA0uQ5r35f/QkW/j+qalTm3w
gyj1bOwXR6WNJ3u0gWfaiespNumP9fu+fm04Ueo5XIJ9T+pRQ8OoNhR4HDlR
g117Q6fu9pI2uIfc/PUdm8sxvEpulw7Mtoatblmho6rppUIPOx2oaNo85I39
fLCj/NlhHfAyM1gNwC76WvJmyVkHLOp2bQrBfljl/TnGQweag79siMKOjumn
5YXowKZKnyup2FSB91JjKTog0uBQ8B/2CPlevme/Dlzru8XGt0pHP3VOlxQP
6YDSD6Hfgtjflakvl0d14BuD2Xcx7E+8bE1XZ3TAeiY7Wg67ZCRs7DGTLnj8
JF3Uxb4Q7iYxLqILLO9Pz7ljcxYp55z01IWj6QNaT7CPMJx4keajC9o/dMWL
sB+Tb39s9deFR4u8LKXYaHp2Vj1UF1xCHEtfYnvKPwO2WF24M2VW/R92den+
ridPdUErXqjwF7ZXJf9m2pQudN5pk96zhs8jK5lfcF4XNK4v2PJjr7MPU7BZ
0oXumA+hQth3l3sOvWbUg+rf5SUS2LXqydnx2/Sg99HFISVs7tc7QEZRD5LW
29mZYb+t3RjgF6QHv7znS4KxZWe6qIdD9SBMq2tnKPYDgXx5wzA9uKC2Lvg8
dnC4yczeK3pQMScvFYEtrRl76vMdPQiYrzh5Dfte5WY/6ed6UGWgp5mK7VPE
7j0xpwel7zcfeY3d3dtn+u23HhR8ZbCpxjba+kyybkUPxtz6jWqxhX0oE8kk
fZBCF8TrsTv33zhpwqkPLWfyaz5i6+Zs93ysoA/eAf1u3di7H3C5ufvrg2tZ
6cNFbGWxlM+5Z/Shtv2jyxI2tUhAdTREH2R96Xv/YF+rlWT1vKQPpoLOiWvY
K8Pa+Sdv6cN37QgK8186+iHjS/d5rg/8JJLJNuzMmoag08v6QPeS1dmHXW1s
1le2pg89EWef7sfubm0xXFhnAJWXD++QwuYc7tkVtMkAquMZfshgR22cexnM
awB+HbKWStjulvwM5zQNYO/F1C8IW3IoODoiwgA6UwrlLLFPmqVVhUTh98Oq
OlbYj8vezfhfNYAsBQ5La2zxqG2Ox24YQEFspbcttpDYEzndhwZQIaRw3QF7
t0dvF3OtAeRVb7p8DJtlUk8qhtEQpgcSzPyxDay9XC4yG0IYR7dUAJFf1Y27
Z1kNIUupji0QmxTfy+jJYQgyooH1p7H/Sp/tMBYwBIr+dYmz2At+T8LYtAxh
1ia2KAx7aG5by/VwQ9il9e7zNewzL65tC4w0BAXajshY7PXhJEu7aENIfmeu
EoctummhlT/BENorw5LiiX4IdLY/SzOElhubrRKxx8zSOltfG4Klv8HtO9i0
7P39O1cNwS5IxCEd+4JXlsAKgxFErLtFJ7xFfo9LH8kI5uR5L2Vgy1RtGchl
M4KLO8NyHmL7tU4PHuA1ArmLZUNZ2DN/y0cc1I1gKWjbgTyiHjvdqbSzRvBK
6LruM2ylYP/Kb+eNwEGK8z3hwLvpERwRRuAo8cK0GHu2fYXz0lUjaGn1oZRg
T1HLDpxINoI97pnkMuxRU9FLklVGsMX+tFglMR/AwlXJYAwsZQJQjc3jrNw7
TTKG+haffML2Ya65+1iNgWy9gasGu7OqWi2Fwxje6e8dJdyhdvZImKAxvErd
dOUt9mfFsVw9XWOQ+tz+sB67VvyDessVY0joaDr6AVtYLLm59poxnLMcLCYc
JeLpVnLdGMTczzN9xDYSZLl5664xiAYrZhL+wqM7ZpNjDGH/NXV/wu7d8ure
93pj8GIxPNCMvTKXPz/IbALSg+Ep7dhOsyHX2llN4Kjrrl7C1dNGAvWbTYBf
10igA/sS7Zdpzg4TqCs+lUV444hQloeICcxsWHz0FZv7ezKVpmsCVfJOdzqJ
ftdcK1y8ZAKtP2pke7D1d7F/0og2geL7TF6EbU7dmrgYawK0wL5swsECqRJs
t01AVc2H5wf2i4sFmfzZJvA4fOIvYdBuvmvUaAJ7HEnlfdimb7nCk9lMIdN5
on8A25En+UEfuynM1b7nGMT2CdhbJbLDFPY/ttYifF1IfLlwjynIyoWmEW65
dCCwTtoUUraz2Q1h2+kedp8km8KVxsoXw9jH3mWQ0W1TmCl9ZTSKXR8SHOJ3
3xT8zYt9CYvLWmRlpJpC3Bn324QnklYWmbJNgXk3dx/hQD/btMbneH2eBP8x
7EiezTTKN1MIBY3YcezsU8HXXHnMoKFF8vYkcZ7FLMpu7zWDiYG5EsKe3SK9
9UJm8CkipoWwtEGrvISkGUjX7NpKwy7nle6a1DCDN5G9lwk3NgyIBzmZwaUw
Q086cd72WNTHZJjB+9By9mls3+L6V/6PzKD/J4M44Tl9zRKHPDOoWhZBhFd9
pdKlnplBDx/JmzB77aaQ5mozsLfiaiCsfKJRalcfjleuDZzBvligdTuXzxw4
prLKZ4n7QKfyWqKgORx+2fQf4atfZSNCRM2B9XFbD+FbDPy+ptLmcDE/jmmO
qJ+6Zjh10Bx6dDPMCH9YeLGi4mgORdxnuglzI0XXhmRzYIhaNzxPfG+powOk
dHNQ4uZaJBzGE++inWUO9h/YWBawhxd/OVc9MQdLxywJwmVFyY4lVeag6nrx
JGGqIJNtWq85qLPzjhGOZW4xChKyAA13trZFYt5n1xpLxSwg7kt3P+HZ/v2G
M/stIPPHbTph+9eX9b0VLeBNTO3G39gSQQd0julZQN3hjUC4fiRdw8LNAlQl
TmcTZvzgKyOWbwGrUqXHloj5un8wlLfQAvgMhXwIF5zY1MBRYgGKYxeDCdsz
5jitvLCAHdJb4ggXK/+Ia/7PAvwijpcRds0wnQgds4B6QxGmZcIvb1mNcJKB
uSbhJuGtD0OXf3KRIVyTP4Xwi2iX9B5uMsypPswizG4jO9HCS4bFpfNlhKum
mi5VCZOBvHSngzCXKFPJDUUyrI04c/0h5inhFMdBK2x6Tyxh3mzGKikbMrhl
VN8k7Pcy0Z3PjgwH8u8lEd45/OzNXwcyzLBK5BI+oT7jXXuMDLwvP9QSZh72
/88ggAwt7VILhLXVAy9Rb5Dhl3mN9Qr2HTJJRucWGfJFvB0Ijx2/1aVwhwzf
ldiPEk5MKJXbkUSGalUNL8J9Q3O9XzPIUICkIgiHJZzWcHxGhpiGC08Ivxo6
M+/2hQx3nFT+EP6Vc3QoooUMYUmGDKvY2zxN21PbyPDZisJM2IMmUNb6jQxZ
5422EuZa/BCI+nH++zoECfuxCM1xzZDBetrLkLDI/s8z77ZToKdyPI4webLy
Z98OCtQ9W3+D8LnCrJY/Oylw5t3uO4RbFEKK5XgpcNJH+gHhcA0R/1RhCjQy
MxcQ7jILnQ5UosAd5rMfCMf7iU0J2VIg/GQ9aQ3b+KFL/e5DFHjM1L+B8Ia2
1BQOBwpsebOwkXC4CqfRXycKTFVt5yDsv8bwsOsEBYIKOPcQto3tskw8QwFy
g6oiYf7cuPK12xTYMKN2hHB3Z2Pc/F0KGHY0HCV8fxPJdeI+Bd68JLsS3uYb
wt6VSgGLTBsPwszKbh5ljyjwMVEhgPDYW+DxKqPAEwWVKMIlvbMXOtsoID8Q
l0fY8HXM/eUOCoBxa/6//VL2lvJ0UkCxg7OAMMneZNSxhwLTZ2KLCVu1PbT8
OUSBQwnmLwnPNVLExxdwvVlCHwgrFhc2r3BT4YuK+jjhw77f16M9VPg9OEAj
HCm5QeOiABV2y4bPEG7Ldspm3kcFF4NbS4RPJ28O3aJOhYkJ6Q1/sZ9HnhTm
d6QC06wFP2FGAVXR3UepYCy+XYiwaRVJnPM4FfIzPooQ7p9P3c/iTYWOT+L7
CbO5fZGfOkeFN+tClQi7GClpVadQQQUeGRJ+OsSo8yKdCuLTI8aEf1/8pFua
RQX7syJmhONeuBnmPqFCnUcMhXDF/iSLhFdU2KTw9xDhzVv+Ojp34/imUg/C
+owHgyUHqSD3m+pN+MJcyI3f41R40dnlR5jWtVCf8IcKsd15QYQ/5dBkanZb
gjKvZSTh9cmSxnGClhAAZlcIa8Z7uh7aZwmsbEpXCRcGDt+bPmAJDfafrxNO
0PrBKHjIEoxj1ZIIi45ESd09agnd/D9TCL+KlznE5mkJkX+C0giPfA8vWgix
hDOH/LIIwxmhI00pliA0kfaUcAfvh6vwyBJMV94VEvZ6G/i87KklHC/peUb4
Hnv95vTXliB6c6CM8NRj91eBfZaQv0StIpwdeFBfc8oS3mRFVxN21Nz2ZQOD
FQjX3nlL+L/mlwNJe7G7dN4TDk9O8HaVsQI7p+EmwirHjy9KISvQ8XT/RDjr
95ZNNU5WEKPP0UqYS6KyvNvXCtZxu7cTjj50zPV3uBWsvUr7+i/fF+VVMplW
UDxa/p0wmYdtp9s7KwhoOt5LWOmcs9+DX1aQJVH689/6DQbCyqzWcCQ+bYgw
53aZbx/3WcNYEIwQjnTiij1uag3HqQ/GCM/mraJVb2u4/+HNBOEV+a5TeU+s
4ZeD5BRh0qvnmdbj1iCzbnXm3/veEWdjGRu4QA2Z/xfPxMOHAmyAp+T84r/9
djs8Kiq2Aa1A5qV/+ckmSwrO2MBatf7yv3p4GD2sZG3h0U2jP4Qz17s9ivKx
BeMCvhXC72MFvRmLbaEp+vs/07f9UDw3bwuhoYGrhNG1nPoARTtI/T7yz9eZ
TtmdDLADJX/DNcJ8XVM5ZZV2sMif9s8FRX44Lzu4WT74z/8DLQCFqQ==
           
           "]]}}}, {}}}, {Frame -> True, FrameLabel -> {
        Style[
        "Number of invaders (\!\(\*SubscriptBox[\(N\), \(I\)]\)[0])", 25], 
        Style["Probability of fixation (P)", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 99.99999795918367}, {0, 1}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.01], 
         GrayLevel[0], 
         Dashing[Large]], 
        Directive[
         Thickness[0.01], 
         GrayLevel[0]]}, {
        Style["s = 0.01", 25], 
        Style["s = 0.1", 25]}, LegendFunction -> "Frame", LegendLayout -> 
       "Column"]], {0.8, 0.2}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.682939706598707*^9, 3.6829399114044867`*^9, {3.6829399431620917`*^9, 
   3.682939975112833*^9}, {3.6829403121397095`*^9, 3.6829403454404125`*^9}, {
   3.6829405517628946`*^9, 3.6829405681785793`*^9}, 3.6829406025230255`*^9, {
   3.6829406658091793`*^9, 3.682940711128437*^9}, {3.6829407435505147`*^9, 
   3.6829407573973894`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<FixationProbability2.eps\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6829407404322977`*^9, 3.682940746958971*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6805047843117785`*^9, 3.6805047855796566`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], "/.", 
   RowBox[{"k", "\[Rule]", "10"}]}], "/.", 
  RowBox[{"s", "\[Rule]", "0.05"}]}]], "Input",
 CellChangeTimes->{{3.678636052442851*^9, 3.6786361201845384`*^9}}],

Cell[BoxData["0.6321205588285577`"], "Output",
 CellChangeTimes->{{3.678636049729883*^9, 3.6786361206698875`*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtyn9M1HUcx/G778eQVcOtEDHt2tWQUMzO4wJx+PqQyAhGCWr+QIaKOmpr
WFfJIiGGzMi1IY6BUeIPwN8/SH4dE0Q6lOOH3H0/sMAI6hAYqUsBBQWOaJ/3
H889/nnqdyXH7lE0Gk30bP872ue1ojwqeI300zXhQYXzXn7DG9IIeN9dmfK7
7m1yC7QX0vxrdUFkEr4+Wux2VRdBpuDqoSrzudlP+j3atKFLS2c/aQF66rKy
imc/6VmcLKsb2/BmNmnBC5H3460XcskGaOcki6ozBWQTFrvXfZLpU0S2w++H
6HUBP50iVWys0A/mOkvITvRbH887vugc2Y30LvcZ0+sXyR4sO5LlsiRcIfsw
Ulq8c4+pjPwbGfsPuodd+5V0Iv+1/KqCmHLyHsoRbTN2VJAD2Br4Xn/Y/ipy
CO/qfwm9+IqFHIbHj2eUbbk15D8wt9xrObDyOvkAfYcbx4cqa8mHELruZU1x
N8h/MRVjik3/tp58hKOd7TdCQm6Sj/FZQ6Yh0KOBHEHkvuyODY4GcgShC+4c
K8z5jRxFqq9/om6HlRxD9cQf8VZ9I/kEwcaS7SWjjeQTdO69dKDs5i3yKcxx
c+1/Zdwmx7HJ8s2SqNgmcgLBXbjc5Wkjn2HVo7Vbjggb+Qypn+90yzrVTD5H
/TX7QGFiCzmJyISttocBreQUulqMvbsmWskppBmi57PqNnIaSZrv1vceukO6
8HHOnNqeD9rJGVjDHF4vedhJDR+uxY6Qr+yQanjOgs3vZ3TaIdXwbp/UUmeI
A1ItL/aMOL2pyAGplk+mBxh6XQ5ItXysaHnowb0qpApPPtE+vPq2CqnC3frv
3rrfpEKq8J99Bk8XNquQKrz5/FT8ZJsKqcKXVPipNR0qpAr/05ZZs8qpQqrw
qNHAw4HTKqQKd5rWJg25VEgVnpLy4bp8jYCU8dLp3TNPmYCUccU911z5ooCU
ccviB3EmbwEp4+sTxoMGFgpIGR88qXjlLRKQMu7pu9A+phOQMr7PEB5W7iMg
ZXzulzH63b4CUsaPV253veonIGW8dbW52uwvIGU8MS0t7613BKSMP6/P/kKs
EJAynsPyPso0CEgZ9w0/4W80CkgZ/w+YpUOH
       "]]}}, {}}, {{}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{0, Small}], LineBox[CompressedData["
1:eJwVx3840wkAx/FRRqHuLsmvWw89iFyl5dYvPvn5hFt+9lMOkaO6rBY5lalN
Tl09o0Qo0vB0uFLyoyKEzK/NvnYhiWHYvj2X5kkndLs/Ps/78zI/HON/RJNC
oTDV+7+qd4YbKry3OamvbYX3QSePLTnL9VYbgbJ4VplhtgtG/ZviX9PWgiJo
KFAa74dGSaJdLW0LKBpWS8YNohB3XUB9SNuFpPUueUt04/EwpYp9n7YfO4N8
utkzKejUcLYtokUhaWeF5KY4EwN1yckCWjxY0e5bp7jFuFteNx1gkYrPO4QW
st4qaHkpg5tK0hERHdhc7tEAjcUxRFVxFuZG81ImXFtgplMXzbXMw0NNveLA
X9phc5npvjm7APz6oxaN0yIEPjGXp8sKYcI0297nJ8FI09TyO6b30aUajG3g
9IDTq/PV4ftSONnuW7H7xN9Yl5a8UBPyAPkBIoOxY734WCQIO+JQjkBtaoR8
Qz8unOHpuD1+hKWGtTkfpW+QaZJZleVXgSz6NS1e6ltUgCmk9zzB7nxJrK7e
Oxxg/DjidqYKz5crT4M5hI3mt51Lv6tBUc1L/QXqMJZdLdY8mP4UA1prNeQl
w2C3j7af3/QcF1WPNlrvleHdleaZ8cpaEIJZbuR7GQha37rWoBfYm+B6IyR1
BHN+Dv6cc/U4Ff71uMJkFNeloheOjg0g3Qx4rrmj+LWRa89Y1ggl2+5Sv/kY
vFipPQHdjWjhy7KLssbgvKrrVg7/JeqtryVKteU4a20XTgttgqaCbiZNkKP6
85vgJvNmVHOG0i2G5dhGLzxUqGoGs+4GKfEahzSy7Hx5QwtYjNX0W2XjYAdp
i4cuvAIt91IPR2sCe2oSrLz9W3E5qVTFCp3Atl781WsgBN9oZdyx8gls/eC6
P40Q4p+4l7q+8xM4ezKMmlzQhsk66Z4p70nUPxaP5YS3w/5bl0+zaZPwCjkg
fL+5Aws9znqx/ZPobacPHv7cAdFGFUPfVIFEe+bKRdWdKHHN7sjfp0AUJcl3
MKULXdJmYeRNBfbyF9cOeIpw81GoY3CXAk1u3Ya6y8Q4qjDJ8dRRYrIWoY6x
YqxwT2v43UkJ/qp9LhekYvyc5y+YOKFEn+XZIpljN2Z5zxS6d5UQGOy6tyev
G4Vap4NbO5X4wtlsP7jQjcgHgwnCGSWm835w5kVKwI7q+SNsDYmYfNHk9lcS
9PnWVXp6kaCO9LcoWyWol5eVqdTOtZTfy2mTwKPTlHfbm0Tbn3PBXzolSLG6
KvrwEwmrJzaSpz0SnJviDGf4kHgr5D7dKpOgPIw10xdIwlvFuMKYlyC3lGfs
FUJC5uAaNb4gwf0OLf0PasfH73bPpBAI8H09lBFKomg+4uunRQT0jyTbDIeR
0NRJZ1cuJWBb3Ii4CBI1ZmSQgxGBK9SI5OxoEr4hM1vGjAk805xKcjpKQn5X
0zDDlMAlT4dgmdoG1sbiaRqBG5ivsjlOgmXv4VZhSeDcDseZyhMktE/7mUdY
E/iGyvj3QAyJO5WHFlbYEGBpmw7Mqd2xnV3NtiPQqP/MzeUkifDExIw16wmE
13LbRtWerU89RWwgsGrWxz7lFAn+ogwfrj2BVyutfrNhk7D2yLej0wkoQ/UK
2tX+D5LuYhA=
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVy3k41AkAxvExCk/JUc6OYVhE2mJGRHrD6AmPXaRDkiTV7LOldio2IY8s
0uF4bFlFYtCqJOQopRBjHDPzGyXHqMEwmd+TciRKa/94n+/z+eOlHwr3C6NS
KBTvhf3fiQG9DRVejlsTAs82ZGXxsN0hW1PdyADeoUsTt+XzYNBjG/mGthbh
4yar5Pd4UCqJsa6jOUAvqfYR6nk4m1Gg8pC2A5Riq8vUER4eJlZx7tL2Qhpy
zkvCbEW7kotVIe0YhrS65keFreh7lpBQQIuEkq37a7p2G/LKnk3uNEnGgdVr
28x7O7DYcyyosSQdyWpulZJXAigtCieqim7AwVmGchMRVqs9Y8eb5aK0Yp+J
XQEBy0ve7sx/7oA6MG14WbsL/pV0WbqUi6JQw20/5b3GYOMnzZxVd+FvfP6q
wKobsd1qP+zW3EN4f7GQlfUW69IS5muCS8GOsHESmPbic2FBSJhdGd5M9hqL
r/UhLuKiGqv8EaS98+OuH/txfeX1qhu+FbjE5hdbhQ2gAt48hrgSlOU5JSpB
7xBgv2mQFVGFFVrNFh+13mMj/ZbLveU14PgJyt2evofGlSLqvvRa+AwGJGnv
kYLDH+JH2z6Fe59f3e6vUgykNH0ZeVyHM0b2l8JSBkHQ3q5rCXyOZcFBc5Wm
Q/jma+cXe74e/Sd0728uH0JGV+dzZ+cXqHVdn9TAGMbxl/E29hovscWhujC4
ZhieJ5PFO4Uv8d2DxRZulMFFvyMrO7UBEWkX2Jp5MkRZWIfSDjbCkm2SmaQ7
guqZ3qBGehMmbLtLj0aPwJHB3c+daEJRQuyMbHQEXUfuR5e9eAXGXaeec96j
4ASqCt7FNSPJcrFYtWgUu2rOmXv5tcBYI4p/X1kOx2486Nbhgep8mmu6W47N
42570wgelAd/nAzMlyPqVIhKwp1W7FojC3WbkKO+XDCcHcpHQ9ZM807HD/AM
DuCRzDb4T6cV1cZ/QDefITk004bEXr8SpaYPiLHx1lWubsfWU52fdahjOEa5
4CNJ7MBfT7NfMF3GsDt1UV2fRyf4zhkUvz/H0MgS6i3VEEAQIYx2KB+DvA4H
nc8IcCtgWuoqH0Oq/h7XuC4BfpeEmHoYKvDWLKpQ6iwE2yV57p2nAgU6O/J3
5QrxW3fukamzCszFMm0k80KIJ1dqbrytwGTuepeLR0RwiFVXb29VIPx2p9yp
WQTam69bSsYVUBnseTXWIoLFLNfb55MCN81k+dmtIvDaM5ymFtz677eguXYR
am/6lm6dUMC80lJUKxYhxYj+pXNKgX5efO1mqQgh2mEailkFvCbsU+y/i6Bu
JbmyZDEJqZ3bsZF5EShGT/xLFhwZ+Yv7dQqB49znX71USBR+P/xjWpnA5/pA
yWVVElS1dM7jJQSYAYXLly0hUbNaEWhnQGBTQtl6VU0SPsFfHIYNCeSY7+nh
LliWR9XLXEVgcGVmGEuLhI6FoWCSRkB1dko/TpvESZvtrAozAkeZmuTMChKq
p33phy0IxBs4Xftbh0TO4/3zKywJuJjbazF1SbQ5cao51gSGrz55cEKPRGhM
TKbpzwT2dfi2LdUnMVuf/AexgUAqRdxSvOBU5cxf420W/joeBe4GJCy237Zm
MAjUTVcdkC74PyzPW/c=
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.3}, {0., 2.399999951020408}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.678632653788905*^9, 3.6786326550413904`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["2", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"100", "+", "1"}], ")"}]}]], "-", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "0"}], 
    RowBox[{"100", "-", "1"}]], 
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "j"}]], " ", "kRat"}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"eRRat", " ", "j"}]], "+", "kRat"}]]}]}]], "Text",
 CellChangeTimes->{{3.6782118282220793`*^9, 3.6782118459331193`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis probability * rescue ", "Subsection",
 CellChangeTimes->{{3.678629396232029*^9, 3.678629424958583*^9}, {
  3.6786332295617647`*^9, 3.678633232893426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], "/.", 
   RowBox[{"k", "\[Rule]", "kInv"}]}], "/.", 
  RowBox[{"s", "\[Rule]", "rInv"}]}]], "Input",
 CellChangeTimes->{{3.6786335451657743`*^9, 3.678633552713278*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "kInv", " ", "rInv"}]]}]], "Output",
 CellChangeTimes->{{3.6786335408841233`*^9, 3.678633553076522*^9}, 
   3.678633966839235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["kRes", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}]]}]}], "]"}], 
   
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.6786335689843154`*^9, 3.6786335701339397`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["kRes", 
       RowBox[{
        SqrtBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}]]}]}], "]"}], 
   
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.678633570475832*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowPlot", "[", 
   RowBox[{"s_", ",", "kRes_", ",", "rRes_"}], "]"}], ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"rRes", "-", "s"}]], "]"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"rRes", "-", "s"}]], "]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["kRes", 
            RowBox[{
             SqrtBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"rRes", "-", "s"}]]], " ", "k"}]]}]}], "]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Log", "[", "2", "]"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Black", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{"1", ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Log", "[", "2", "]"}], 
              RowBox[{"Log", "[", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"rRes", "-", "s"}]], "]"}]]}], ",", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"Log", "[", "2", "]"}], 
              RowBox[{"Log", "[", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"rRes", "-", "s"}]], "]"}]]}], ",", 
            RowBox[{"-", 
             FractionBox["kRes", 
              RowBox[{
               SqrtBox[
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"rRes", "-", "s"}]]], " ", "k"}]]}]}], "]"}], 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Log", "[", "2", "]"}]}]]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "s"}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Dotted"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6773540528104186`*^9, 3.67735421010161*^9}, {
   3.6773542623094053`*^9, 3.677354354626607*^9}, 3.677355017785247*^9, {
   3.67735505492397*^9, 3.6773551841571336`*^9}, {3.677355611751788*^9, 
   3.6773556235735826`*^9}, {3.6773560121862097`*^9, 
   3.6773560124285345`*^9}, {3.6773561916633263`*^9, 
   3.6773562048864512`*^9}, {3.6773562413461213`*^9, 3.677356241821742*^9}, {
   3.6773569155311985`*^9, 3.677356947842747*^9}, {3.677420400239035*^9, 
   3.6774204136755104`*^9}, {3.678629437641859*^9, 3.6786294748719854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowPlot", "[", 
  RowBox[{"0.01", ",", "10", ",", 
   RowBox[{"-", "0.5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677354272555005*^9, 3.677354276017311*^9}, {
  3.677354358979151*^9, 3.6773543645183187`*^9}, {3.677355041448301*^9, 
  3.6773550459075236`*^9}, {3.6773557871988297`*^9, 3.6773558636703806`*^9}, {
  3.6773562215612545`*^9, 3.6773562322931647`*^9}, {3.6773564319539814`*^9, 
  3.677356432048252*^9}, {3.67735670755604*^9, 3.6773567156746607`*^9}, {
  3.6773568960165405`*^9, 3.6773568963435545`*^9}, {3.6773569646052284`*^9, 
  3.677356971849246*^9}, {3.6773576634077024`*^9, 3.67735771894168*^9}, {
  3.67735793108919*^9, 3.677357960655341*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVx3880wkcx/GhK4nqKFMhpKZud6mT2yV9PphymZ8xX3XKoczPpimRkPOI
fvKgH3cPZX4r1U2JB6H8qHTlmnb90FJsjG1ftPwMjXN/vB+v99M86JD3AU0K
heI2t/9rkakuyjNt2j53nzUqDmzfGVO2MIrDB0rFRJirERO8JPRMK44AKJ1m
b84a+gD7z09e8zkPgfKCp3Q3CAFizPPHsVAhpORZDUzoxoJ/kUbxQGgXNFo4
MoMoabBnyv9XeegnCHSaydvXnwPitacYfaGzkJX92aqjqghKjmvMaAUsRYb+
lVWxxvdAr5IvKPMwQhedE4aWbg1wdcdXzU16Zrh0vakbe7oZ8oJSewx3WqIV
NW3j1qRWsC/oD/mbYYXGjo7xvRnP4emF0tx5yXS0Sclh6DUIQXzwt+wSwhot
f/jZR9rxEvjU/TSB22Y87FjrfyjvXxDzF1LVkTb4LD6w9srR1xBcu8ZvE8cW
r0ZniEpN3sK145EY4c/AEINvtKJvdYDb8qA0RexWtOTt8lO5isEVW43cI7eh
rbpeur7xPTx0fLdg4vx2TKto8Tzs9AGGx3XbRd6Ife+qekjBR6AvP8C8xnLA
DSVLZHvHu8Ccb9B3eq8jUkd5qnUl3dDweVIQRjghnUYu49pLYFmFbVlEOBNL
Xy10aHsvgZZmHR43zhkvHgkYaedKYWWeYSjn8A6cOSOXssalQJcdy0hN3YnU
y4mOdid7QDaqL8pMcUEdZWF5jboHxgmmih//C9b5nh9cwuuFZqs2O1H6Lgwf
pUlYg72wpemsYOJ3V7y17mSAcI8Mgh8XeMIlFuoniHtq22SgNPF4crrADROS
jLoHf+oDI7AJac11x0F+5OzwlT7QaDu0kXbTA2mV30vI6T54mhXzrb2PJ9LX
1dQl+fZDvezoWGi7J+q2zowP3uiHC1yaao2fF5qkM7VJDTlUdo0kvXvlhR7W
QxoNnnKoTouwNAvwRl4Ia7qpUA56i2cDAju90XmjNsthQA5ZDh81LPx3Y9JQ
eHL6JgWoyjn1sd27UdtQMnQ7XgHFXxYvatrng+3q8B6v+wrYkhjIzev3wdPB
r43PqRUwckMN6ihfFEjlycJtSphXX13kS/ri6KI73yUcUcKI1ipT4LFxSv2o
5WiFErZY59IthtkYd7fL20umhKL5oSWnov1QS+C0dg2VhE/6H20Sx/wwM+v+
Vx1XEjK1YogIHoHLJJWvz8STwNQcLL92hECGncqXnUDCF0qYWhhHoNIg6q75
cRICZwILbRIJZO1zoNQkkrB50nNAnUZgeJ+WSppMwpsh65SsywRmFIWt3XyK
BFOxqqyqlkBLlrNBdTYJoo7Iqf46AluGSmknckhIfytnrXxAoKhnyQrmRRJU
r7o/JzUT+IG9NOflJRKahe12Ls8JzF8d16v8g4SDjyuE4k4Cn9y01aTySVj5
iG6h10VgjOuA4v2chc3XY0FC4I4FiwT5+SQwGvNXFMsIZJtdfbm+kASduqzg
qCECX1RXH9taQsKDWt1qvorALyb7WTNz5tVkaIuGCYxeXaBuKiWhsyrltu0E
gUbGOpMu10nIuvd1ljNJoP4GeyfdGyQ4Vx7zzp0mUDZhHiGc89Sd0eJ/1AS6
n3vAzS4n4a8K7sTsLIFTA0Y+vjdJ+A8Bdlyp
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{0, Small}], LineBox[CompressedData["
1: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
IVRWBU3PzzMxe8SoSqm/EP4PUZfu4Q==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6773579315432043`*^9, 3.6773579611123543`*^9}, 
   3.677374313837604*^9, {3.6786294419578943`*^9, 3.6786294771911783`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["kRes", 
            RowBox[{
             SqrtBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}]]}]}], 
         "]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Log", "[", "2", "]"}]}]]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "kInv", " ", "rInv"}]]}], ")"}]}], ",", 
    "kInv"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6786336684946146`*^9, 3.6786337178799973`*^9}, {
  3.6786337558009443`*^9, 3.6786337624710345`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "kInv", " ", "rInv"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "rInv"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "kInv", " ", "rInv"}]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}], "+", 
           "kRes"}], ")"}], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]], "+", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "kInv", " ", "rInv"}]]}], ")"}], " ", 
            RowBox[{"Log", "[", "2", "]"}]}], "-", 
           RowBox[{"2", " ", "kInv", " ", "rInv", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]}], ")"}]}], 
        RowBox[{"kInv", " ", 
         RowBox[{"Log", "[", "2", "]"}], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]]}], ")"}]}], 
    "\[Equal]", "0"}], ",", "kInv"}], "]"}]], "Input",
 CellChangeTimes->{{3.678633793465926*^9, 3.6786338155257497`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], ":", 
  " ", "\<\"This system cannot be solved with the methods available to Solve. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678633802929639*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "kInv", " ", "rInv"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "rInv"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "kInv", " ", "rInv"}]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]]], " ", "kInv"}], "+", 
           "kRes"}], ")"}], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]], "+", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "kInv", " ", "rInv"}]]}], ")"}], " ", 
            RowBox[{"Log", "[", "2", "]"}]}], "-", 
           RowBox[{"2", " ", "kInv", " ", "rInv", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]}], ")"}]}], 
        RowBox[{"kInv", " ", 
         RowBox[{"Log", "[", "2", "]"}], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "rInv"}], "+", "rRes"}]], "]"}]}]]}], ")"}]}], 
    "\[Equal]", "0"}], ",", "kInv"}], "]"}]], "Output",
 CellChangeTimes->{3.6786338029356437`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis genetic rescue", "Section",
 CellChangeTimes->{{3.681314191024025*^9, 3.6813141943589916`*^9}, {
  3.6817153412266073`*^9, 3.6817153422897835`*^9}}],

Cell["Genomic swamping", "Text",
 CellChangeTimes->{{3.681314199206134*^9, 3.681314210169784*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        FractionBox["RRes", "RInv"], "]"}]]}], ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Log", "[", "2", "]"}], 
       RowBox[{"Log", "[", 
        FractionBox["RRes", "RInv"], "]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox["kRes", 
       RowBox[{"kInv", " ", 
        SqrtBox[
         FractionBox["RRes", "RInv"]]}]]}]}], "]"}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Log", "[", "2", "]"}]}]]}]], "Input",
 CellChangeTimes->{
  3.68131423744119*^9, {3.681314347021815*^9, 3.681314430425085*^9}, {
   3.681314478776923*^9, 3.6813144906598625`*^9}, 3.6813148176285887`*^9, {
   3.6813155942113247`*^9, 3.681315601071763*^9}, 3.6818337200450225`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["kRes", 
            RowBox[{"kInv", " ", 
             SqrtBox[
              FractionBox["RRes", "RInv"]]}]]}]}], "]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
      RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
     RowBox[{"RRes", "\[Rule]", "0.1"}]}], "/.", 
    RowBox[{"RInv", "\[Rule]", "1.01"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kInv", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681314532077245*^9, 3.681314666410427*^9}, {
  3.6813147867911463`*^9, 3.681314838548504*^9}, {3.6813156083670607`*^9, 
  3.6813156654898276`*^9}, {3.6813157854902678`*^9, 3.6813157895297637`*^9}, {
  3.681315822759478*^9, 3.681315837178619*^9}, {3.681315912850064*^9, 
  3.681315912963628*^9}, {3.681833737785231*^9, 3.6818337497795367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
nWWQN+8amQpilw3rT87Nie+f0sssH2bif9TMKV0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 9.999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681314632944969*^9, 3.6813146671713767`*^9}, 
   3.681314797764517*^9, {3.6813148353238754`*^9, 3.6813148389031663`*^9}, 
   3.681315669489027*^9, 3.6813157900296574`*^9, {3.6813158235583997`*^9, 
   3.681315843812501*^9}, 3.681315913254974*^9, {3.681833729575493*^9, 
   3.681833750127347*^9}}]
}, Open  ]],

Cell["Demographic swamping", "Text",
 CellChangeTimes->{{3.6813142427222333`*^9, 3.68131424883825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "-", 
      SuperscriptBox["RInv", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "kInv"}]]}], "/.", 
     RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"kInv", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681315684511323*^9, 3.6813157688536716`*^9}, {
  3.681315881767495*^9, 3.681315904720902*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVkHk41Akcxkcaba6MHIUZw68QJRPaQXy/XWQZui15ipwVZjPaUtaGJKJk
kk5aZNtattVkJdWgAzMj0eahQ845fqoRapKys3+8z/t+/vy8Vju5G6NmUCgU
jjr/96XUnVqsyONe6sm91h/pVRwy4h7E3AWU8aQwc9vV0M3JSWQyk4GSUtiZ
vnAT7PcJ1qcys4HC5j/Jt44A7wcY+snyHFCmDTokFjyoTHfJUFr+AcLUtKDt
tAzoC68yeWt5G4Si8qTSyQI4tGFPGGnZAu0FKdfPS0ph9ucLLXGOPXC25LKv
v8tN2Nv4a+5I4gAcsyn+PUSjHhzL+U8FVXKoT57O5tk1wlBArEUvWwkqMvPm
mdRHUGR2lP5b2BicfUffRYtoBbfE2r80xR+BzbcyTd/bBk1dF9ZzbSfh+Vow
3Wr9FFi537zm+X4FZTOLqO7uAJ9h916nIAq+23f//HjZM5AuqVk7PqKB9l84
20LgORyaynauP6iJHU9F0T1NXTCLJtu12Z6KpwuXmcYFdwNVQvXRuauFO93W
av30sAe+tFXGFez9Djf3GHnK8CUMBVXNZzC0UXAOBPUVr2DlsYT45kodbGc6
jD+TvobCb7WzV+/QQ8oM/ak48zewzaLJ/+WYPs5k3zAR/f0GdIUOI9ZbDDDB
u3F0X0AfRLmWTgQvpqE51W+OY38f7E89sJE5QcMli4gaYXQ/ZCr4nW1thqgf
/ESDMtoP/vZzruqen4uGXfUN9PgByKtcLvQPN8IUVTFjY/8AtG4qm0pyM8b1
BTquFaGDIJRwcxdrmuC4G8eJ1zoI1bvTUPzKBNevic8cWDEEDD9gJwhMMaDB
b5n46hCsng7NKEmZh0rpZ4/S2cMQ+fz+h9ot8zGNUzh5JWEYvNLSb4UzzVBx
hnN8c8swFHBH7+hKzfCgk2XyJ4YU+g9fGS65Z45im9e5YQekQEbdjmzMskCl
zcfWkmYpKOMNZ0nC6Xh21Z8KXwsZVPmKpqKXMLBcT+9uTIwMhmOdlmtOMNDj
1HbrrVUyMLvew8+SWOJgrCohRCWDjLDEUokfEwOLTM1F7nL4NDU/z+82E2V7
XlzUOiwHuztF51oXWGF16gPngAY5uEY8DKRlW2GU68HHA1/kILxoPE88YYVH
6ug+X9kKsBMa5wRss8atK/qyurgK4FBH6B33rHHSQE4rL1OA8sVgU4s9gXbt
OvSabgVwL+bNzT5JIPOWg6OXNglijQXvfzhF4KPThx8Z6pBgH1PXqssn8LKL
p4dUzYMsaVr+GQLzc6h1J/VI+PExKosuEchYmqzXa0DCqg9j4orrBB4xYtD2
m5Jgsi7k6IPHBJYa1wpyF5DAq1SGH20hUHTrl6HQhSS0G2Z5rhMRWNwbM7bY
hoTjr26Oi9oIPGTbUCG2JYHC04vo/JdAisA+TtuBBMUlIfQPEOj99v3Pv7JI
8NEMMi8fInBNaG0KZxkJ5bFvP0ZJCXyBM8LMnUnY4WxWJVeoOYN1v8aFhGfN
PIvRUQKNdpe8Ib8ngeWoraoeU/tRjTtr2SSc4F/uTJog8MZS97JMNxJ8t0ty
VCq1z6JrLxkeJFQ0RUTXTRL4gUfxJtU8c9HkypQpAj1X0fP+WUFC+Il8utc3
AjcEalVneJJwb8zm8/S0+u8tDYJALxL+A8oaP/M=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 9.999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6813157312314353`*^9, 3.6813157693968687`*^9}, {
  3.6813158823105364`*^9, 3.681315905004177*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "1"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "10"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "3"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "1"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.7", "]"}], ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "3"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "10"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["RInv", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"Log", "[", "4", "]"}]], 
                SqrtBox["2"], " ", 
                RowBox[{"Hypergeometric2F1", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{"Log", "[", "2", "]"}], 
                    RowBox[{"Log", "[", 
                    FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox["kRes", 
                    RowBox[{"kInv", " ", 
                    SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], ")"}]}], "/.", 
            RowBox[{"k", "\[Rule]", "3"}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black", ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Initial invaders (\!\(\*SubscriptBox[\(N\), \(I\)]\)[0])\>\"", 
           ",", "LabelSize"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Expected genetic rescue\>\"", ",", "LabelSize"}], 
          "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Black"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=1\>\"", ",", 
            "LabelSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=10\>\"", ",", 
            "LabelSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=100\>\"", ",", 
            "LabelSize"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   " ", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6813763421519375`*^9, 3.681376358576789*^9}, 
   3.6815733756027555`*^9, 3.6815734083796835`*^9, {3.681575083256487*^9, 
   3.681575094889657*^9}, {3.681575142900149*^9, 3.681575174861066*^9}, {
   3.6815753255474224`*^9, 3.6815753510887756`*^9}, {3.6815754533972263`*^9, 
   3.6815754645437717`*^9}, {3.681575539082*^9, 3.68157554433803*^9}, {
   3.681575934104492*^9, 3.681575964757004*^9}, {3.6815761172934713`*^9, 
   3.6815761211887946`*^9}, {3.6815790736298065`*^9, 3.68157908451663*^9}, {
   3.68157913470465*^9, 3.6815791540696697`*^9}, {3.681579190199363*^9, 
   3.6815792662556114`*^9}, {3.681579322149548*^9, 3.6815793295599747`*^9}, {
   3.6815799374218636`*^9, 3.681579988272689*^9}, {3.6815801083383484`*^9, 
   3.6815801450859766`*^9}, {3.681580178945764*^9, 3.6815803086299686`*^9}, {
   3.681746000360944*^9, 3.6817460083778577`*^9}, {3.6817461540592847`*^9, 
   3.6817462017556643`*^9}, {3.6817468121182027`*^9, 
   3.6817468494579463`*^9}, {3.6817468837079535`*^9, 
   3.6817468838019133`*^9}, {3.6817492809556465`*^9, 
   3.6817492930394583`*^9}, {3.681753459460883*^9, 3.6817534868927784`*^9}, {
   3.681753527635984*^9, 3.6817535279086275`*^9}, {3.6817922178413877`*^9, 
   3.681792219751018*^9}, {3.6818340117879086`*^9, 3.681834016285533*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0.7], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
         
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.3], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1:eJwV13c8Vu8bB3A7oUhIVvZ67JUo1xWFkmweURQikT0aKJQmWqisJCKrQXxT
9GS0RMZjZj0OGiIjIfzO76/zer/ucz6v132f+7rOfaSOBNh6sTAxMXEyMzH9
/yqdtPwgU+KN0bqYm7Z2oneNzILy1/r7ZIGxSz6/e3ME2AypJCn6lELWTPda
p7IEcLwzacPhUwNSK50mqeGpQJ2z1p7zbgZf1outVO58cH7AnPvTewDen4zJ
OGpaAVs984J1Swdh6uPV6KHrL4D2x+JmaOEQuEqWmhX1VEKXaGr7dDYD2F3v
Xbf2fAmsR1WdJq+NgZET7YWVSi0cWHR2HfeehGG285GXiToIboh5fVNzCuYK
LC8ciaiHyqTW/dqlU3BU/GSbIGcDGEtHBgQX/obTQYmvhOUbgWr2tmwqewZ2
c6Qc6rR/D/HXnbUnrs2DXK2lln1ME/TIXdAf9V6FT3ZLNxqutMKybPyA0NQq
fL4v5uv5vhX4+He+ldnOhG4izuXRHG2gtQF87euYsHLUTFQ1pg0ieQ0ry9uZ
0T92XXqSbzuw8WjbR86xosep5vMOynRI4X6an7yNDbkKv/7a5k4HBW7NpUdR
bCjaPWz6+DYd9nKp53Szs+NHxx/n9VfpkMxJmTIQ4sCbnAVcm5o6QYxd5uqy
Hide2X9T7rF9N5Sw5QwInubE3tiehA9x3QBsUtpqNZx4e+Bnf/zTbjjCuqXn
kNla5NiQk9u0vgceMYsq1jpx4cZxt/J6Wg9or/DXxUbyoJKN9LYl4T54eJp5
hfUgH/qPRZpHx/VD7Gzj1c9n+HDCM1WQ52E/uPsnit5J58NKmcAAh4Z+EHMT
3abWx4fTXil1YpwDcMNYN5TqsgFTgvTSr1wcgJi1x74XOfNjze5D3IVGg+Aa
q34y4iQ/3v6dyedrOQgGS3NrjO/wo0D1iXvcroPw52esXGcXPy6I5EvNRg6C
X0u6OzN1I0oeFPrr/mQQnFNb6A6OApgpEVXSJTYEenypXpLhArjaeMv/g9IQ
CFw6OPv9tgASEtos9/WGoOXU9w1nOwTwUrpZ8LLVEJgeYrMstBfEx2YrdZHn
hkBbTv/tiq0QJpt41+YMDMG6Z1ml+VbC+G9xMGHl0jCECy2ktZ4Qxk8O34in
N4eh/6Rt7PI1YawxnTxlmzEMZcjuYPdJGC3CPL/alQ2D7WffxRXzzShy52iU
R8cwpH3T3e1oLILsra5bOkQZwGSZpHbusAh6s98ospRlwLGy8U1FZ0UwVF/s
/jMVBhhE3PvOXCOCQ1w0E/MdDPjKxpxcbCiK0cW+S6kHGSAt+amHTVcMzbLG
On/eZcCVOLk6dXsxXGeY3rQ3hwGzo9HFB0LEkL92RiKtgAH1xZpny56IoSSP
8F7mSgb4GKbKuaqJYyRv1gRfOwOKHY8EPlOQQBmmK+JGa0cg3fQfi+Y6Sfzm
/fnNFZ8R4HGLvissIYkWL1m5z50YgTMRTFpM6pL4Y8gl72joCLg+YjvcbC2J
1fX+FqxnR0CMa12N/y1JtOMKunw+hcxrEj9dKCqFg0YBTI21ZN5oFv8NFSnc
+mz3muZ6Mm9FqvDkDinMtxFQeP+BzFOX7zZ3k0Jf5BW71U7mXVfbOpYjhcJO
T6sSxkYgwx5mZJSlMTroksA/LgLW+7+5zG0ojafC4l9r8hIQfd5EesZCGksD
NQRdNhJwqMLMhuYvjd+npRUuiRIgIWxd6v5EGlnGgo45UAjI7HU/nqEvg8fP
395GMyfzZodZzu+RQZ7C/T479pF5PF53/Q7IYHmdZWGxFZm349h7wzMyOBAl
Uu3vSOZlBSn01MjgWAwcOOFB5h2JZQiZyaLQy1jxuNMEpM0nFH91lMXKndwj
itEE3Lx6LSL3qCyWzksZNpwl4GJFGrfWBVl8Gl/ROXaegGCuUm3Leln0utXn
/y6JANOnvXFxJnJ4eJdLO3cOAWg2ZLnXTg7DwoWvauYSYNg3ummDhxz2TBS/
tMojQINj+nFmrBye+9VSGVZIgMgBzvaqN3IY/qEz59hTAn4x68pOgTy+ClAq
+FdLwHiKwa8KK3nU7PTgLaMRwKBgZZSbPP7QelftWkdAl4PFPu4YeVz40iue
00gAreBwqPxreQwMoeztbyKg2sjbaKJJHmul9xgebCbgRZsf5/Ov5P0aXG0d
LQQULUek71yWR6eQItnnbQSk2CTWuW5XQFu9a0ny3QQkj95MlNmngP+2Bc6F
9BBw5fQd6ncXBTwR7Ob6speAsw9zf0acVsAYJzln/X4CfBf+E7j5nwIORp3d
/nOYAM/E2n7nDwqYVBHVzTVCgJtMwyPJHgXMc5RrkiEIsLf8sr1kQQF/6xFD
u8YI2HF/zPO9viKq/nEa2PWDgNl0ms3wHkXUsTpwyOInAYVpGUZLBxRRzeRI
qsUEAULJdsKqUYq4xH782LZJcv2iaz4mv1FE5z1ZxMdpAnJP3a0saFXE2kvP
r92fIeBAeNhDGkMRvWmmNkGzBDT6U2Jm2ZVwNGbSeXWOgGzXVC3qXiXM9h0u
p/8lwJEavCXIRQlDaTwx0QsE8Nhb8lz2U8L8/rQayUUCIi1YR18mKiG/i3ab
/RIBamb9re1ZSlhjsr16lPSIcVXNRJkS6linm4f8I8DGIODOljYlnMkMCz+z
TACn3t4L+iNKKE41VV0g/VpTLsRmTgnFAsSfBq4QoKzUuy9ukzKum3lqZb1K
wKBsxbZ0RWX8eVE5qpJ0iuR1+fJtyhgqLJojyjQKLMJmTGMuysiqwL7USrpy
o/TEqp8ylmyRMFFgHoUTvMvdwtHKOLlvsjCctCx3V4NmkjLWxjtvf0O6l+PZ
s73ZykhspjCvYRmFGyyJ2R5PlLFjZQurOWnzFZ9rZ2jK6Do+ZBFPemXB5NTt
NmVcCeAkXpJ+PifhXTKijOx6m7t+kfb9vWDXOKeMVNaLauKsoyA50Y6DHBQU
/1Hx25Q0fbxUdWETBVn8/ij7kb46clmEX4mC9tfPM66SNh70WkMxoGDLxhuy
BaT/9uKsiQUFjU/pz9eSLukUHXJ1pSBtW7xnO2mvtj9NYf4UHOgICGOQFmv+
8l9iNAWDmAitX6RbPxTl5ydRkFJV/XCW9MWGhFu12RRc8quh/yFtRDtyrvsJ
BdUFH37+//jsqx0npmkU3OcomPL/5wurhF242ynYnJmvO0LavXzGTJagYNhu
RnkHaaEnn3V2/KFgXD5seUv6U1GBlOMaFWwwlT1VRDr2Ufz6AGEV1B0b/3yd
tH6u21KCkgpeLOqQCyE9mWUwnm2ggnFbZRKsSefdE+yoslBBlreLi0qkXVOn
3rS6quAnDL+0Sq7vu8S8e2wxKvhdOEwoi3Td6ofypiQVrJTyUvIlXRs42ZyS
rYIZV6/e0ST9wlafTYmmgtWpbKXl5Pt++tZVYrpVBY99nT0STLpE55z+S4YK
Mphdr1NI5wl98LNkV8U+bcNTN8n9lJPw64KQkCqOnh43Niad8Zf//oC8Kgqa
R+RMkPvxVo9LR5C5KqbxChobkI7LnNiRckUVy1wuvX1M7u9oXn6qW7oqdvV1
sCLpU2f1ghWLVXH6fvCGL2R9BB+Jyfvvsyr+6Bkv+UbWj7v8Bt6BDWqYmrft
0RxZf66pukqPpNXwCNHMGUSaynnAJEhbDbuZhX2/kfVq9T0ngtVBDWX2JJt9
mSfAqERnUCFNDX+bHN0cTda3wRbnxalHavisQ4oyTNa/XnKUwH9VanjYmveE
CWnV4Abzfb1qyC7wK3OZ7B9ietQngRLqqPjec7/NFAELr07HVuWqI7OUVPOp
72R/UstOjy1XR8ei9RnPvxEwlVVXYdGgjnP3KXM/xsn+fW7dj69j6ih+oY1q
R/a3HznNSucENZDIH4piJ/thz9HDNx5SNbDXIyp7qY+AjIPllSfdNZAF/lpJ
kna3Xztg6aOBN4IVJE3Ifju68wnlT4QGbrn2SjOO7M/TYsz1pqkaSJsRjp3o
IIC7LXt+rEMD5fPM2E98JmA7DLoq22liuLt6nd5rArI2uSmUWmrhub8KOil3
CKh9I+6m4qiFlS8ScozTyP5yvC+l4JAW6nV61k+kECBd68yRG6CF7Zd5dfEW
AXk+9kTadS1M+afET08koKRqz4PYDi2czv3i/i6O/N646GxxPKiNcm2iYr1+
5Pyy1m5a9tPBZbO3q6bbCfCoknHS9NFDeLAhfKqHPC+c9sPjzvoo+riiVCZi
BCwFj8R/CzXACye9Qm+R5x0LbBTe77cdGd9sCyCXATXG3WvmrxmhfgyD470+
A6b/8LS02iIeHt2ferJ1GFQEvXZl7NuJ/Gle0sbhwyCVtXH0kosxJnpWfhsQ
HIZXvxdKj1FNcLKxo9auhjyPlunlH/fdhRY8atVqXkPwlsYVEhixG/nndifq
8w2BSKaQt0+wKWJzfvLi20FQISIvxsaaYSetbD4wdBCIWf7WpLPmSAhWPpxT
Ic/H1F1TWSf3oN1QEN+T1gGgKX4ybE3Yi3K3qj7r7B4A3TdXSufjLFA3XuJg
U30/eNTft4bb+5AraYfWGeyH7+JWDZfuW+LQp5ZsRdpXEAYdz8Z7+7HgnPRO
NeuvwPwpQF3hsRUGPD5Uf62rD94lB23YYW+N462Hwv39+qCaCJ/zbrFGWZcz
UinsfZAYqDAl42SDJ6vFFg/c6YVnAzPR3e02eJePf9V9ay9UxB+XlTxoi8T4
mo17Wnpg3frVg+59tqi6GrK5JbgHknf2M0s72+G7YiHNos09MFXoUx06aIdr
UzsFHr3shty/67nfHLLHTJuPU1ZHu0H3jHtg5pg9HsoyuGbP0w0zBcuw7O+A
jQPdbscquoCtuuKBww8HNF1UNnL06YIZVlEJCHHEO0/3b+4W7AJdjXsq0tOO
uMP5zeUPHzrhAYf3wwsnnHDv+q0Of2M7YZK/X+fMnBPqFOWE/9brhCTWIOrx
ECpucvM+WPGbDrtYJgozwqgYx+ExEj9Fh79Mx5abI6h4I5rvit0kHdxX3HN0
zlDxF4ff1t8/6aC1YP1zOZ6KvO9vcquN04H+S+NscgoVXyeIZRT300GiZyq/
vIqK5H/EzrqPdGjt8lsce0nFUV395ykf6JDQOb5P5DUVz4RFmh57T4ep9sHf
0TQq+tzgebe+kQ605hZD849UDHgxZ+RCo8PR+rLmnj4qRkh6zC9U0kGkTkV6
3QAVNU6sc/78gg7NtEehMETF0+dDu3Mq6KBfm705l6AiIeylt+85HbheJnv4
/6Iii8Uu9+xSOryu4qnImqJioMOeF2EldAipvMjZOk1FVSeGikUxHfrKzxbr
zVPxmR8t5E8h+b/6/N+qzwIVL95Z3vWpgA67n0Xa3lsixyerdHIe0WHxyWxu
0zI5n+hp48h8OpSUBc6vrlLxgGNOwP48OvwPgA/QJQ==
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.7], Thickness[0.01], Opacity[1.], Dashing[Large], 
        LineBox[CompressedData["
1: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
HUNzBUXF0fhI/K26YQKC/dmU2RTFUcL3pXPQKAFjKRG1QyCO+UMOD6d/EOBw
h9O50VQcYzyW+NR+ElD/Jma+3FkcOwQK+XGcgH0dXKl5vuJ47TVDk3+CgPu/
aDIxkeLI1N3PU8bSwjy8pNcVcQyXclkpPklAokSKtdVNcRRdGi6xZul/ezeO
7ysXx1aTyRRblj5tkR4t9U4c7ZUXpHawdLcnv8jadnF8CxO/qln5jKKynkwP
i6N3CF+AEktXEFuNuv6Io4gHt4YHqx75Mno/g4eClVtaH3mz6iUaRIKKhCg4
cvLjCb0xFv/3fL40eQqewdLGnyze4CVK0cX9FAxgi/U+McLiFyg84GxCQd7P
D5n3hlj8its79B0pqGvWp88cZPHr3fFW8qag8KjMxYf9LH4nOS7BcAp6Pe5p
OtXH4r2ssHvoOgUFLNJ77btZvHdLPnwopaDk39aEyx0s3kpl13ImBTsU1+jS
21h8U+oZ0d8pWK8l/Ea+icW35rm81xwFYxtyzpbVs/gkNZmWXBL4INOQa3Mt
AVctYVpSTgK9XEtqLCsJWOdVSVujKYGmc3rtu1+x+jX6oMS0oQT2xHYVTD0j
4Fi5nhnDSwIhiiH1q5gAUUHTYqdHEjjsI6crShCQrNR8SJ8hgVML5mfrMln9
pW/5RfGTBJa2LH6wuEyw9hOVd3lGAiN9RL7ORROQ1+XkeVVDErvj+0ezvVj+
M984og0kMeBT0Zn/3Fj+a0/mnraTxHOPNc4TTiz//R61msGS+Jx/9w0h1nyL
5vvIdJKS+Fhuf3SOOiufS0S/gJ4UqjxI5BmZY+2rudgHPdZSuOdWzinKJB3S
E5P8C12l8LOt0dcDw3SIK89eoxwjhQU6v+T3tdPBl6dYxbhaCl14Rw+JPmXt
p8ddkZEHpbGkvli0zZsO4+xqUpOwHaPKE+YGW3NhOHPvePmR7ciYNfe8WZcL
/f/hsxDH7XidOSNlVZkL7VaGRmsubcdP1vwmMfdzgXHX2W/76+3Y8lSOrhaR
C5lmyUyHfTJonKP/aE4uF/ZfGzpRqyGLn/ZYXDpzLgdmCIbZNwNZNJAUqclz
Zd2H7KtaC3ayqJhl8qfKNgcEUi0Ed4bI4laInvgJrHsSStalVsoiz55Nq9+u
yYEChyxl6uEd6KMfwvHkWjZwCOqxDdnLYdy2oaDWd1lQk3yLznlJHq+zD7cL
r8qETlfntJtUJczenZcRkpwG+VscZYqNlTGy9UNb279k6Mzn3rJ4WhUfbbhU
unk6Do4/l7TZ5a6OG8XsbgaNR8LVoNPoaauBb3d+6X0veQmM+V2iRvz2Ypei
Ev/+DxfAEN8Jmpzeh/VPjHxdxs4Cqd2xei5JC0kDvvVH2lxg6vfapmZzxFMu
hPNtThOQ5z+pc9XoAOJAw8O+KwokJX/T93h7bbSwtZ103GpNvvr1p9iDehBt
e0Za3MpdyM0l6rc9T+nglSFGEU31FFnF4Dnn7a+Lt80F57W9vMlteQJu7r6H
MKMsIvknniPlBwPiIiL0UAElTpauu0AOzvA1p4Tpo8FPAf775wPI31SdyfyL
BuhYsSum83ogyZCt12yOPYy0MD2Xzo/BpFplQvFcpCEejPDmPlsWSh6vvmYK
GUboxBbZu98kjBwVOfI2/poxPqXo7QiXDycFQfXEO7oJVsmNaRuOh5Ps9WcV
Ze4dwZPtu9JESyPImlSfjfstTTFRO94lyDGSrBi8MOvWZIrvHgzVVixFksne
MpOSNmbYYPi+LudaFFn6dTq0o8UMN8Z89lxWiibLozylxI+a4yGDUunBqmiS
d93yUaduc/xrFJ5zTzeGTD3whV3C1gL1GqZehb+OISeL3Cv8ei3Qk/HbYHZv
LFk4v25N5TFLjDC6m2R7N5ZUC3byzhuyxIGS82Y7hOLI6buLsOhlhSt7lnzP
RseRnBXlN6x+WGFlcpwt1wArvkJIFM5ZY/J4y5tF3XhSTYkuLzFljQH7ox1O
Xo0nb6xyuxlzxgZ7gibiYifiyQm+L6rBszYYstjSMKxDI1NW+FA9z1FRemBn
3uHLNFKH42fR1fNU/L6lkZmdRiPn2TwWG/2peGvH6pLv6TTSacnpumowFZ33
BbWEZ9JI5T+mY4tRVBTV2mlTRqeRbeNKYamZVIx38DfbeItGinZO3i57TkWb
nf4xV1/QyOb203+HXlJR55PGsYGXNDL287DRttdUNA0O/yf3ikZOtvT+CmVQ
0cJ3IPEpSSMZjU2a+nVUDBvPWmpg0kjX6pLGzm4qBv7uUp78QCO3MeUleL9S
ceU74UCVJhrZyLjjB31UdMxtibvwkUZqvCnYWjhIxZiUgX8Ln2gkz8vU417j
VHyWLHmAs4NGvn6+tjx/koptZ15U63bSyHPP4riap6hoYK/FF9tFI7vLwh6o
z1FRbllvBfcXGpn65N+y+x8qWi+M3jb4SiN1SwPM6QtUtEwu20zrpZF/H80U
NixS8Y1JucH7Phr5sMR7bnmZilp1C4d4+mnk/wA44gDo
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.3], Thickness[0.01], Opacity[1.], Dashing[Large], 
        LineBox[CompressedData["
1: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
1OKYu3+e5sP/ALolwsc=
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], Dashing[Large], 
        LineBox[CompressedData["
1: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
3XbP1yqHBf8DhcBpuQ==
         "]]}}, {}}}, InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=1\"", 25, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=10\"", 25, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=100\"", 25, 
        StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.7]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.7], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox[
      "\"Initial invaders (\\!\\(\\*SubscriptBox[\\(N\\), \\(I\\)]\\)[0])\"", 
       25, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox["\"Expected genetic rescue\"", 25, StripOnInput -> False], 
      TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 99.99999795918367}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.7]], 
          Line[CompressedData["
1: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
           
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.3]], 
          Line[CompressedData["
1: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
           
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1: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
           
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.7], 
           Dashing[Large]], 
          Line[CompressedData["
1:eJwVlXc01f8fx5EKpaFImdeIfIWslPJ6JUJGtmuUURlJIUVW9rhmZN5PqLQ0
KNFSn1xXESIhswgZCRlRwu/+/nif93me1zmv5+txzmtQXM6an+RgY2MbY73/
/xIpizfyRCu1XkeZpMo6/dLU87nN7eWeD2xMC4rrQqyWWZ98iqx7MdS8aXS0
0SzXWuasMuJNfgoZh+22Cl/5qGWdM2G2yp2EtNria3irX6tNIPneckEVgEdt
zcDOKS0OZymFf0nvoPeNtWJt96LWznsvSuYD62C2QuNwfc4qoM6aqsy6NYKS
0rhNqMgGYORPdwYUfQTqlWmduN/88JmpJTxX8AnGBTITX30ThrGR+KPns1rB
+FrLgsZ5CeBY35o3nfQZ/OZqHv3mlgFBVfFen6gO+K3RS+naJQ8Ktp6UycAu
6Ey5xKY6pwQ6oeUuZ3x64GfM3KimuCrY3mAvHHP7CqPzbLvkruyG3Sdu+aoV
90KnQ8TwgLkmMH4bpvsV9YGx8sF8IQeAdqGslqmCftgUfEt3VFoHjj/cN7uL
GIDHLjah3tmHYBy/8ftkDUJe+4HVTAUDWOG602YiaQgO6D5WfsE0geT5Zn+F
+GG4GRIek9tnCoIJAdleUSPwlmi0zfYxB4WSqo4fgT+A383lZRjDCuz+2joM
u03AJuXpGEnRo+D79tLr9F2T4Pu62DFvqyM8S2k2USmeBLUknsLgy06gLRFw
1rfoFxiPECYDD12AqldVMlkwDbzqBccSVd0g6rKtys+kOdgy1SoXW+AN7+3u
VyWumYe4YyHrMwx9YL3UsoV8/Dzc37Z6d8G8D+SWF/p5Rv2Bzk3h92yo56C4
a6JsJHABSs58vrn03wXolI7R+O62DJdjtI37+IJhUSrqq8DkMkxEKx7OGQiG
DXwHqiT3sWE3d9nhfU9DQHkjnLJksmF4heLNyWOXIGC95rOyFnY8Q0bVzNiF
A+daFcuA2RWY4y7XI/k8CoRXSiYuqnOh8j0th4ajCfCQ8/pX/iAuLJA2OWdT
nQDASVFRILkwUvuUmbd8IrisEOs8pseN3LS/yvv/JMIddiHZNzY8+KTkzd/m
xGRQWeJjRgSsxfQRkyDP+lS4GcS+tOLoBpRLV+d9k50OETPvEj8Eb8Dne98r
PiTTwckrWSiH2IDlSslpet/TQdhRaI9C9wZczxF9NlD5CqRpq/lR7Teiw1gF
te3tFbjE7TF635YP99kWXN7xNQMcIhQv+l/kQw9jtk+32DJh78Lsau0cPmy0
6fCqo2TC77EI6c/tfLjsWu3NczwTTjcRTuzUTbgjRW7sWF8m2GY1tVlZb8bI
DFljj4YsUN+QdVL8wmbUVGYPPDqSBZvjj86MZmzGUI+13X84s6EpcHRjWOtm
1L/iM/WfZjYcOsZpXGTJj/3+YeOBN7JB6vP7Lj8/fnTZ3aNaXpEN7KaXT8EV
frTaLORIb82GigOicS2f+LHmxlr3E6tyQEVao2rJXABfrR/l/nM8BzbkLZnV
+grg3+VxoYTAHNZcVvempwng/R9sR2tTc6CIy3xJtlkAPwkFPjOsyAHxMc89
FmZbMMdu1shnfS7wluYX3z4iiG3Z9l9Sb+XCBYE/2c1nBLG6M3f986e58OWi
ecRikiDaxyXYZtbkQgmutLKoF0Qu0cdMn5FcMP9w6u+S/lZ8+iNl5VMZOrzc
xezf4b4Vj/sNcqSr00EqQ6TBMnYrOpou6cvo0mHWvim/qHor6qwJtQp0pkP2
iJqutfY2bJ7mFGrLpAObcYpCuPM2LFSa5gy7QQePkuEt98O2IV+fVNpgMR32
+tNH2clteLouw2jwHR16ONlTH2gKoaqmq1nVDB0OudtdbLcTwjIRURfrZTo8
rCt1WREohIwfGxPucBMQluaqZvtMCNdlcA8miBAgIV7fyakmjNcsMxbttAlI
iJRmKloK44vb83zThwmY+R76wO6cMC69YDKMLQiofrArrOSRMDJlJZ4YHSdA
YWOCR1eTMPbyLbb9OkVApt+A+apJYZQKem9t70uAu2aWtIOCCCqXhSiGhBHQ
lDe5LtZYBA2r7TzUYwnYw3F4/tFpEXS228AoSyKAp/bf+9X3RDCYayCVK5eA
B9Yu3qUyoijtmfuNp4QAgRcvbb8cEsVEQ1Nz9jICQkX4D3K7imLgdN6xyucE
mA6843csFMXvJXpcBQwCnulRluOrRPFsT1EE+ZYAyr3A4SffRLFm+LFF0XsC
pnx2vuShiGFM+nBJ/0cC7FtjCtVQDB/N/dui0koAU6M3yclRDB9TQxOOtBMg
T+zxTwgVwzuWYgF7ugjIWE5zKr8qhpwtePhXDwFLLmMGfRVimJo74eXfS4Dr
W12Vtd1iuDjSZ1L/jYDGHfnCuxfE0FvjPHVygADi0D+OXbziODh3b7b/OwFr
HUNzBUXF0fhI/K26YQKC/dmU2RTFUcL3pXPQKAFjKRG1QyCO+UMOD6d/EOBw
h9O50VQcYzyW+NR+ElD/Jma+3FkcOwQK+XGcgH0dXKl5vuJ47TVDk3+CgPu/
aDIxkeLI1N3PU8bSwjy8pNcVcQyXclkpPklAokSKtdVNcRRdGi6xZul/ezeO
7ysXx1aTyRRblj5tkR4t9U4c7ZUXpHawdLcnv8jadnF8CxO/qln5jKKynkwP
i6N3CF+AEktXEFuNuv6Io4gHt4YHqx75Mno/g4eClVtaH3mz6iUaRIKKhCg4
cvLjCb0xFv/3fL40eQqewdLGnyze4CVK0cX9FAxgi/U+McLiFyg84GxCQd7P
D5n3hlj8its79B0pqGvWp88cZPHr3fFW8qag8KjMxYf9LH4nOS7BcAp6Pe5p
OtXH4r2ssHvoOgUFLNJ77btZvHdLPnwopaDk39aEyx0s3kpl13ImBTsU1+jS
21h8U+oZ0d8pWK8l/Ea+icW35rm81xwFYxtyzpbVs/gkNZmWXBL4INOQa3Mt
AVctYVpSTgK9XEtqLCsJWOdVSVujKYGmc3rtu1+x+jX6oMS0oQT2xHYVTD0j
4Fi5nhnDSwIhiiH1q5gAUUHTYqdHEjjsI6crShCQrNR8SJ8hgVML5mfrMln9
pW/5RfGTBJa2LH6wuEyw9hOVd3lGAiN9RL7ORROQ1+XkeVVDErvj+0ezvVj+
M984og0kMeBT0Zn/3Fj+a0/mnraTxHOPNc4TTiz//R61msGS+Jx/9w0h1nyL
5vvIdJKS+Fhuf3SOOiufS0S/gJ4UqjxI5BmZY+2rudgHPdZSuOdWzinKJB3S
E5P8C12l8LOt0dcDw3SIK89eoxwjhQU6v+T3tdPBl6dYxbhaCl14Rw+JPmXt
p8ddkZEHpbGkvli0zZsO4+xqUpOwHaPKE+YGW3NhOHPvePmR7ciYNfe8WZcL
/f/hsxDH7XidOSNlVZkL7VaGRmsubcdP1vwmMfdzgXHX2W/76+3Y8lSOrhaR
C5lmyUyHfTJonKP/aE4uF/ZfGzpRqyGLn/ZYXDpzLgdmCIbZNwNZNJAUqclz
Zd2H7KtaC3ayqJhl8qfKNgcEUi0Ed4bI4laInvgJrHsSStalVsoiz55Nq9+u
yYEChyxl6uEd6KMfwvHkWjZwCOqxDdnLYdy2oaDWd1lQk3yLznlJHq+zD7cL
r8qETlfntJtUJczenZcRkpwG+VscZYqNlTGy9UNb279k6Mzn3rJ4WhUfbbhU
unk6Do4/l7TZ5a6OG8XsbgaNR8LVoNPoaauBb3d+6X0veQmM+V2iRvz2Ypei
Ev/+DxfAEN8Jmpzeh/VPjHxdxs4Cqd2xei5JC0kDvvVH2lxg6vfapmZzxFMu
hPNtThOQ5z+pc9XoAOJAw8O+KwokJX/T93h7bbSwtZ103GpNvvr1p9iDehBt
e0Za3MpdyM0l6rc9T+nglSFGEU31FFnF4Dnn7a+Lt80F57W9vMlteQJu7r6H
MKMsIvknniPlBwPiIiL0UAElTpauu0AOzvA1p4Tpo8FPAf775wPI31SdyfyL
BuhYsSum83ogyZCt12yOPYy0MD2Xzo/BpFplQvFcpCEejPDmPlsWSh6vvmYK
GUboxBbZu98kjBwVOfI2/poxPqXo7QiXDycFQfXEO7oJVsmNaRuOh5Ps9WcV
Ze4dwZPtu9JESyPImlSfjfstTTFRO94lyDGSrBi8MOvWZIrvHgzVVixFksne
MpOSNmbYYPi+LudaFFn6dTq0o8UMN8Z89lxWiibLozylxI+a4yGDUunBqmiS
d93yUaduc/xrFJ5zTzeGTD3whV3C1gL1GqZehb+OISeL3Cv8ei3Qk/HbYHZv
LFk4v25N5TFLjDC6m2R7N5ZUC3byzhuyxIGS82Y7hOLI6buLsOhlhSt7lnzP
RseRnBXlN6x+WGFlcpwt1wArvkJIFM5ZY/J4y5tF3XhSTYkuLzFljQH7ox1O
Xo0nb6xyuxlzxgZ7gibiYifiyQm+L6rBszYYstjSMKxDI1NW+FA9z1FRemBn
3uHLNFKH42fR1fNU/L6lkZmdRiPn2TwWG/2peGvH6pLv6TTSacnpumowFZ33
BbWEZ9JI5T+mY4tRVBTV2mlTRqeRbeNKYamZVIx38DfbeItGinZO3i57TkWb
nf4xV1/QyOb203+HXlJR55PGsYGXNDL287DRttdUNA0O/yf3ikZOtvT+CmVQ
0cJ3IPEpSSMZjU2a+nVUDBvPWmpg0kjX6pLGzm4qBv7uUp78QCO3MeUleL9S
ceU74UCVJhrZyLjjB31UdMxtibvwkUZqvCnYWjhIxZiUgX8Ln2gkz8vU417j
VHyWLHmAs4NGvn6+tjx/koptZ15U63bSyHPP4riap6hoYK/FF9tFI7vLwh6o
z1FRbllvBfcXGpn65N+y+x8qWi+M3jb4SiN1SwPM6QtUtEwu20zrpZF/H80U
NixS8Y1JucH7Phr5sMR7bnmZilp1C4d4+mnk/wA44gDo
           
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.3], 
           Dashing[Large]], 
          Line[CompressedData["
1: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
1OKYu3+e5sP/ALolwsc=
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0], 
           Dashing[Large]], 
          Line[CompressedData["
1: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
3XbP1yqHBf8DhcBpuQ==
           "]]}}}, {}}}, {Frame -> True, FrameLabel -> {
        Style["Initial invaders (\!\(\*SubscriptBox[\(N\), \(I\)]\)[0])", 25], 
        Style["Expected genetic rescue", 25]}, FrameStyle -> 
      Directive[FontSize -> 16], ImagePadding -> {{70, 25}, {70, 10}}, 
      ImageSize -> 650, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 99.99999795918367}, {0, 1}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.1], 
         GrayLevel[0.7]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.3]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0]]}, {
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=1", 25], 
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=10", 25], 
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=100", 25]}, 
       LegendFunction -> "Frame", LegendLayout -> "Column"]], {0.8, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.681376336554386*^9, 3.681376359548147*^9}, 
   3.681573376898696*^9, 3.681573409050255*^9, {3.6815750846331463`*^9, 
   3.6815750959599104`*^9}, 3.681575176535574*^9, {3.681575332171769*^9, 
   3.6815753529663754`*^9}, 3.681575465656683*^9, {3.6815759355028763`*^9, 
   3.6815759580808687`*^9}, {3.68157611040444*^9, 3.6815761229779816`*^9}, {
   3.681579078063268*^9, 3.6815790857190733`*^9}, 3.6815791562007875`*^9, {
   3.681579208898721*^9, 3.681579267573643*^9}, {3.6815793235201797`*^9, 
   3.681579330860146*^9}, {3.6815799781767325`*^9, 3.681579989921092*^9}, {
   3.6815801218468833`*^9, 3.6815801463302636`*^9}, {3.681580186388926*^9, 
   3.681580221167862*^9}, {3.6815803024612417`*^9, 3.681580309984798*^9}, 
   3.6817439950821996`*^9, {3.6817460030684624`*^9, 3.6817460101577826`*^9}, {
   3.6817461900743017`*^9, 3.6817462031206846`*^9}, 3.681746850865895*^9, 
   3.681746903060396*^9, 3.681749294433185*^9, 3.6817534897404146`*^9, 
   3.681753531549312*^9, 3.6817922216129985`*^9, 3.681792365687722*^9, 
   3.681792431388154*^9, 3.6818338573320866`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<GeneticRescue.eps\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.681744002210477*^9, 3.6817440048938265`*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["RInv", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["kRes", 
            RowBox[{"kInv", " ", 
             SqrtBox[
              FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}], 
       RowBox[{"Log", "[", "4", "]"}]]}], ")"}]}], ",", "kInv"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.681370060898431*^9, 3.6813700847458715`*^9}, {
   3.681370116920515*^9, 3.6813701223179255`*^9}, {3.6813701753439183`*^9, 
   3.681370182430805*^9}, {3.6813706002177773`*^9, 3.681370638697341*^9}, 
   3.6813706901869245`*^9}],

Cell["/.k\[Rule]1/.kRes\[Rule]100/.RRes\[Rule]0.5/.RInv\[Rule]1.1", "Text",
 CellChangeTimes->{3.681371068065006*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "k", " ", 
         SuperscriptBox["RInv", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "kInv"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["RInv", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "k"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"Log", "[", "4", "]"}]], 
            RowBox[{
             SqrtBox["2"], " ", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{"1", ",", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Log", "[", "2", "]"}], 
                 RowBox[{"Log", "[", 
                  FractionBox["RRes", "RInv"], "]"}]]}], ",", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"Log", "[", "2", "]"}], 
                 RowBox[{"Log", "[", 
                  FractionBox["RRes", "RInv"], "]"}]]}], ",", 
               RowBox[{"-", 
                FractionBox["kRes", 
                 RowBox[{"kInv", " ", 
                  SqrtBox[
                   FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}]}], ")"}], 
         " ", 
         RowBox[{"Log", "[", "RInv", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SqrtBox["2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["RInv", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               FractionBox["kRes", 
                RowBox[{"kInv", " ", 
                 SqrtBox[
                  FractionBox["RRes", "RInv"]]}]]}]], "-", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{"1", ",", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Log", "[", "2", "]"}], 
                 RowBox[{"Log", "[", 
                  FractionBox["RRes", "RInv"], "]"}]]}], ",", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"Log", "[", "2", "]"}], 
                 RowBox[{"Log", "[", 
                  FractionBox["RRes", "RInv"], "]"}]]}], ",", 
               RowBox[{"-", 
                FractionBox["kRes", 
                 RowBox[{"kInv", " ", 
                  SqrtBox[
                   FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}], ")"}], " ", 
           RowBox[{"Log", "[", "2", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"kInv", " ", 
           RowBox[{"Log", "[", "4", "]"}], " ", 
           RowBox[{"Log", "[", 
            FractionBox["RRes", "RInv"], "]"}]}], ")"}]}]}], "/.", 
       RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
     RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
    RowBox[{"RInv", "\[Rule]", "1.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kInv", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68137055815873*^9, 3.681370578477587*^9}, {
  3.681370645978377*^9, 3.6813706549502144`*^9}, {3.6813706994575377`*^9, 
  3.6813707106856747`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
lCplBLvSBLoZLWS/i4kb5+oYQVqVGqO6gfxeZF+qSeUawcRly1ztSgL5jF4W
wTeCt+aZ30+9InBDo+GYY4wRmNttP9tK9mPkXKusVKIR/P6fxnpeOYGaNuvZ
cblGIOdpJvAl+/bsxMOx4CEjWPfeySoxm0BLqJTbwzGGyv+mt3WcJtA+Lrak
MdgYRl0+jR0/RaBLHYPlHGUM+62OnlQ9QSCPVXjXK8EYONvGQ1gxBF6LyTKI
fWQMkt9az98OJbC/PN6+cNwYckurF3JdCTyxzSZROWorzFR+Vw4wJBC3tyya
OmcCna1KvhXNfOSY0Ssckk3Ae+pXct5HPsqZp0bmp5lAV/7q/Nv1fORZHxoJ
zDWBAxbZLeHVfNzA/NL6o84EWvuv81aV8zHOb+Dh11UMuDXgXzoo4KPd1Zl9
NSkMuP/kvcAxiI+jk5J19XYAcm0pmzXF+ai52sP0htU20BCLry0wDMP1N1f1
nnbeDg47cnM+2IZi6chMrjdzB9T4FV0TiQ5B6UcGd319TKFGfM3drJvB+KJC
IogbZgYb3ZzC6muCUD5NxtOLtxN6KwKcD60OQs0eftyxY7uA97ba5Y0jD3vG
perPx5hDpM7Z1RdzAnGSaTp8k9gNMp2tfkFS5P+lWrVR/SkLeHPpsjWHx0X9
5/G5U7GWwGZm1Oe+DUC3V7dsGJetIKBD1zAvyx8HFfe+Pn3LGnb06ww03fBD
OQbFvTJ1D3z60XlX7TEHF1QHaKne3wv3SxdUNpT6YlVi4Mqt9jZwfKL+kEOv
D5b0hE541tnAKvmi46Dogwlc1WGV/bbADnbd9cDaG/M6x6JbGm3B4q67s+Vl
Lyw47rth3SE7sN9r29ne5IlLl80fYrXZgavDEWvmZk9M3NaxQNlpH+zLjjnG
STiCw9leJcFd++BAvFPCwwEPzJhetuS5iz1E15wrz3T0QP1IFjetzx4U/jO5
p1PmjmNZc4w5PweQ07zHWqbljqIlBXccvjuA6Jn/LV2Y64ZjIgpKjCBHuPMt
5U6Tuhvqa6dqKo86QlJypM7RJ654Z6Fn5kn//VBIvBId2uaKv6Q6KJET+2Fa
YNsbVc3G8yKBTN8gJqSp9A6scmOjqfDP7BshTFjdcUZ8J5uN00Lec7VhTHiS
ohnEP8xG1l/WbUokE8JurdPscGaj7ozNj7njTKDOdmg8tGdj05B2TGIyE7LS
jlg57WSjUuvw3adFTIgrMhMMqLOxvpnzu6+YCQ+capX/VWPjqU/9VvJlTGBH
aA6wNrJxuLFrJLqCCZu4ivtalNlYUVtnZP6OCZ/Cha69V2DjkVePalvbmPD9
1rKeF0vZKP9SU3lpJxPO6fVPikiysbbiXjDjCxMe746zNZVgI7U8/Z+MHiZM
BLd0vVrIRoniRDe/ISbcmhnyqJ5nYVmRZMHNYSYElm0qWfaXhUGFceL1o0xw
52QfsP3DwranMQ8NpphQfmkT99M0CxPz/8x7zTChS2Vpn/wUC83y+Haps0wQ
vBrKdJlg4e/H4xnv55jwcUX5g9tjLMx5xJ2an2fCwlvc2d4RFv4f0U2dGg==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {-0.006352020355485439, 0.0028101940344759063`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.681370655401615*^9, 3.681370711788039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "k", " ", 
          SuperscriptBox["RInv", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "kInv"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["RInv", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "k"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"Log", "[", "4", "]"}]], 
             RowBox[{
              SqrtBox["2"], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"-", 
                 FractionBox["kRes", 
                  RowBox[{"kInv", " ", 
                   SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}]}], ")"}], 
          " ", 
          RowBox[{"Log", "[", "RInv", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox["2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["RInv", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"1", "+", 
                FractionBox["kRes", 
                 RowBox[{"kInv", " ", 
                  SqrtBox[
                   FractionBox["RRes", "RInv"]]}]]}]], "-", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"-", 
                 FractionBox["kRes", 
                  RowBox[{"kInv", " ", 
                   SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}], ")"}], " ", 
            
            RowBox[{"Log", "[", "2", "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"kInv", " ", 
            RowBox[{"Log", "[", "4", "]"}], " ", 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]}], ")"}]}]}], "\[Equal]", 
        "0"}], "/.", 
       RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
     RowBox[{"RRes", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}]}], "/.", 
    RowBox[{"RInv", "\[Rule]", "2"}]}], ",", "kInv"}], "]"}]], "Input",
 CellChangeTimes->{{3.6813194702097335`*^9, 3.681319525262028*^9}, {
  3.6813195808458405`*^9, 3.6813196119957294`*^9}, {3.681319829926874*^9, 
  3.681319889733904*^9}, {3.681323665968878*^9, 3.681323667493124*^9}, {
  3.681371161112991*^9, 3.6813712874171305`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6813198763049316`*^9, 3.681319890296812*^9}, 
   3.6813711657162876`*^9, {3.681371212798854*^9, 3.681371284297708*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "P"}], "]"}], 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "RInv", "]"}]}]]}], "/.", 
   RowBox[{"P", "\[Rule]", "0.999"}]}], "/.", 
  RowBox[{"RInv", "\[Rule]", "1.01"}]}]], "Input",
 CellChangeTimes->{{3.6813198965402913`*^9, 3.681319947892931*^9}}],

Cell[BoxData["347.11183883814135`"], "Output",
 CellChangeTimes->{{3.681319905898442*^9, 3.6813199482066627`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Log", "[", "2", "]"}]}]], 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"-", 
                 FractionBox["kRes", 
                  RowBox[{"kInv", " ", 
                   SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], "/.", 
            RowBox[{"kInv", "->", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "P"}], "]"}], 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "RInv", "]"}]}]]}]}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "1"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.01"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"P", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Log", "[", "2", "]"}]}]], 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"-", 
                 FractionBox["kRes", 
                  RowBox[{"kInv", " ", 
                   SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], "/.", 
            RowBox[{"kInv", "->", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "P"}], "]"}], 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "RInv", "]"}]}]]}]}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "10"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.01"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"P", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Log", "[", "2", "]"}]}]], 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"Log", "[", "2", "]"}], 
                  RowBox[{"Log", "[", 
                   FractionBox["RRes", "RInv"], "]"}]]}], ",", 
                RowBox[{"-", 
                 FractionBox["kRes", 
                  RowBox[{"kInv", " ", 
                   SqrtBox[
                    FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], "/.", 
            RowBox[{"kInv", "->", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "P"}], "]"}], 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "RInv", "]"}]}]]}]}]}], "/.", 
           RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
          RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
         RowBox[{"RInv", "\[Rule]", "1.01"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"P", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}]}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Probability of fixation\>\"", ",", "LabelSize"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Max genetic rescue (\!\(\*SubscriptBox[\(F\), \(I\)]\))\>\"", 
           ",", "LabelSize"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.7", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
            RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.1", "]"}], ",", "Black"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=1\>\"", ",", 
            "LabelSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=10\>\"", ",", 
            "LabelSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=100\>\"", ",", 
            "LabelSize"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.8"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
   " ", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681319971192322*^9, 3.6813200103074923`*^9}, {
  3.681320113533517*^9, 3.6813201882567105`*^9}, {3.6813204203447685`*^9, 
  3.6813204255947423`*^9}, {3.681320500221982*^9, 3.6813205183981037`*^9}, {
  3.681323066750123*^9, 3.6813232897420797`*^9}, {3.68137300817441*^9, 
  3.681373027151763*^9}, {3.681373059306215*^9, 3.6813730602473545`*^9}, {
  3.681834634919545*^9, 3.6818346395842314`*^9}, {3.6818346696621566`*^9, 
  3.681834676687348*^9}, {3.681834725491934*^9, 3.681834871984926*^9}, {
  3.681838010201391*^9, 3.681838010843878*^9}, {3.681842555849872*^9, 
  3.681842559861237*^9}, {3.6818426112796326`*^9, 3.681842616208596*^9}, {
  3.681842707967206*^9, 3.6818427174993286`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {GrayLevel[0.7], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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

         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0.3], Thickness[0.01], Opacity[1.], LineBox[CompressedData["

1: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
ATic0ZM=
         "]]}}, {}}, {{{}, {}, 
       {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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

         "]]}}, {}}}, InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=1\"", 25, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=10\"", 25, 
        StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(R\\)]\\)[0]=100\"", 25, 
        StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[1.8], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> Automatic, RoundingRadius -> 5, ContentPadding -> True,
          FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.7]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.7], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.1`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"Probability of fixation\"", 25, StripOnInput -> False], 
      TraditionalForm], 
     FormBox[
      StyleBox[
      "\"Max genetic rescue (\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\))\"", 
       25, StripOnInput -> False], TraditionalForm]},
   FrameStyle->Directive[FontSize -> 16],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 25}, {70, 10}},
   ImageSize->650,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.9999999795918367}, {0, 1}},
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.7]], 
          Line[CompressedData["
1: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

           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0.3]], 
          Line[CompressedData["
1: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
ATic0ZM=
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[0.01], 
           GrayLevel[0]], 
          Line[CompressedData["
1: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

           "]]}}}, {}}}, {Frame -> True, FrameLabel -> {
        Style["Probability of fixation", 25], 
        Style["Max genetic rescue (\!\(\*SubscriptBox[\(F\), \(I\)]\))", 25]},
       FrameStyle -> Directive[FontSize -> 16], 
      ImagePadding -> {{70, 25}, {70, 10}}, ImageSize -> 650, 
      PlotRangeClipping -> False, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Thickness[0.1], 
         GrayLevel[0.7]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0.3]], 
        Directive[
         Thickness[0.1], 
         GrayLevel[0]]}, {
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=1", 25], 
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=10", 25], 
        Style["\!\(\*SubscriptBox[\(N\), \(R\)]\)[0]=100", 25]}, 
       LegendFunction -> "Frame", LegendLayout -> "Column"]], {0.8, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6813200115424166`*^9, {3.681320114293117*^9, 3.6813201888154087`*^9}, {
   3.681320422895583*^9, 3.6813204262260804`*^9}, {3.6813205008387337`*^9, 
   3.6813205191890078`*^9}, 3.681321260172617*^9, {3.681323074293387*^9, 
   3.68132329074102*^9}, {3.6813730257636166`*^9, 3.6813730366807756`*^9}, 
   3.681573391115264*^9, {3.681834636049455*^9, 3.681834640525215*^9}, {
   3.6818346712928524`*^9, 3.681834677901985*^9}, 3.6818347412650394`*^9, {
   3.681834774649917*^9, 3.681834873250888*^9}, 3.6818349778373785`*^9, 
   3.6818380134337053`*^9, 3.6818425615289783`*^9, 3.681842617531901*^9, 
   3.6818427187276883`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<GeneticRescue2.eps\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.6818349734445367`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Log", "[", "2", "]"}]}]], 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{"1", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Log", "[", "2", "]"}], 
         RowBox[{"Log", "[", 
          FractionBox["RRes", "RInv"], "]"}]]}], ",", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Log", "[", "2", "]"}], 
         RowBox[{"Log", "[", 
          FractionBox["RRes", "RInv"], "]"}]]}], ",", 
       RowBox[{"-", 
        FractionBox["kRes", 
         RowBox[{"kInv", " ", 
          SqrtBox[
           FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}], "/.", 
   RowBox[{"kInv", "->", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "P"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "RInv", "]"}]}]]}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6818342919623795`*^9, 3.6818342941076856`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox["RRes", "RInv"], "]"}]]}], ",", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"Log", "[", "2", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox["RRes", "RInv"], "]"}]]}], ",", 
      FractionBox[
       RowBox[{"2", " ", "kRes", " ", 
        RowBox[{"Log", "[", "RInv", "]"}]}], 
       RowBox[{
        SqrtBox[
         FractionBox["RRes", "RInv"]], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "P"}], "]"}]}]]}], "]"}]}], 
   RowBox[{"Log", "[", "4", "]"}]]}]], "Output",
 CellChangeTimes->{{3.681834288367028*^9, 3.6818342967401905`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["RInv", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"Log", "[", "4", "]"}]], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"1", ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "2", "]"}], 
            RowBox[{"Log", "[", 
             FractionBox["RRes", "RInv"], "]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox["kRes", 
            RowBox[{"kInv", " ", 
             SqrtBox[
              FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}]}]}], ")"}]}], ",", 
   "kRes"}], "]"}]], "Input",
 CellChangeTimes->{{3.681369315419483*^9, 3.681369367161019*^9}, {
   3.6813694034145536`*^9, 3.681369425615249*^9}, 3.6813694807833014`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SqrtBox["2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["RInv", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        FractionBox["kRes", 
         RowBox[{"kInv", " ", 
          SqrtBox[
           FractionBox["RRes", "RInv"]]}]]}]], "-", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], 
          RowBox[{"Log", "[", 
           FractionBox["RRes", "RInv"], "]"}]]}], ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], 
          RowBox[{"Log", "[", 
           FractionBox["RRes", "RInv"], "]"}]]}], ",", 
        RowBox[{"-", 
         FractionBox["kRes", 
          RowBox[{"kInv", " ", 
           SqrtBox[
            FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}], ")"}], " ", 
    RowBox[{"Log", "[", "2", "]"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"kRes", " ", 
    RowBox[{"Log", "[", "4", "]"}], " ", 
    RowBox[{"Log", "[", 
     FractionBox["RRes", "RInv"], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.681369330473343*^9, 3.681369367978612*^9}, {
   3.6813694069778967`*^9, 3.6813694260828524`*^9}, 3.681369481270856*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F", "'"}], "[", "kInv_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["RInv", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "kInv"}]]}], ")"}], "k"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             FractionBox["kRes", 
              RowBox[{"kInv", " ", 
               SqrtBox[
                FractionBox["RRes", "RInv"]]}]]}]], "-", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], 
               RowBox[{"Log", "[", 
                FractionBox["RRes", "RInv"], "]"}]]}], ",", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"Log", "[", "2", "]"}], 
               RowBox[{"Log", "[", 
                FractionBox["RRes", "RInv"], "]"}]]}], ",", 
             RowBox[{"-", 
              FractionBox["kRes", 
               RowBox[{"kInv", " ", 
                SqrtBox[
                 FractionBox["RRes", "RInv"]]}]]}]}], "]"}]}], ")"}], " ", 
         RowBox[{"Log", "[", "2", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"kRes", " ", 
         RowBox[{"Log", "[", "4", "]"}], " ", 
         RowBox[{"Log", "[", 
          FractionBox["RRes", "RInv"], "]"}]}], ")"}]}], "/.", 
      RowBox[{"kRes", "\[Rule]", "100"}]}], "/.", 
     RowBox[{"RRes", "\[Rule]", "0.5"}]}], "/.", 
    RowBox[{"RInv", "\[Rule]", "1.1"}]}], "/.", 
   RowBox[{"k", "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.68136949142299*^9, 3.6813695042564697`*^9}, {
  3.6813696079244256`*^9, 3.6813696284639816`*^9}, {3.681369839147188*^9, 
  3.681369920200139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "'"}], "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.6813699329273453`*^9, 3.681369934035595*^9}}],

Cell[BoxData["0.00016443830269428155`"], "Output",
 CellChangeTimes->{3.681369934400047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"F", "'"}], "[", "kInv", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kInv", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681369936821973*^9, 3.6813700226440973`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
uAgcVRz5xUL/A7sfmjw=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681370007196747*^9, 3.681370023226921*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Simulation listplots manual input", "Section"]], \
"Section",
 CellChangeTimes->{{3.6813699036653585`*^9, 3.681369911038727*^9}, {
  3.681833622239911*^9, 3.6818336340935726`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "HAPLOIDS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.513046"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0359775", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.563185"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0359873", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.613274"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0337924", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.651559"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0310784", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.694475"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0265394", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.714826"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0263339", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.745588"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0222459", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.781247"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0172995", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.814127"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0142396", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.532602"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0251662", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.583251"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0236113", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.629031"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0265806", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.661419"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0224998", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.703267"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0205241", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.724778"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0199775", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.768755"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0157577", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.800482"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0117161", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.818699"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0109792", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.320403"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0841093", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.361823"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.091837", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.399748"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0910838", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.444715"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0935371", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.488809"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0928564", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.533417"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0853627", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.559548"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0759159", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.597386"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0675406", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.674047"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0583348", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.0573324"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0328555", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.0686867"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.037404", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.094562"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.054382", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.0938591"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.050292", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.0897132"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0455834", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.128539"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0634337", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.136306"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0656726", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.180347"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0785448", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.253699"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0950139", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"kRat", " ", 
              SqrtBox["RRat"]}]]}]}], "]"}], 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
       RowBox[{"kRat", "\[Rule]", 
        RowBox[{"1", "/", "10"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"kRat", " ", 
              SqrtBox["RRat"]}]]}]}], "]"}], 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
       RowBox[{"kRat", "\[Rule]", 
        RowBox[{"10", "/", "10"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\>\"", ",", "LabelSize"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<1-\!\(\*SubscriptBox[\(F\), \(I\)]\)[20]\>\"", ",", 
         "LabelSize"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.681727336788187*^9, 3.6817273724640884`*^9}, {
   3.6817274643725944`*^9, 3.6817274650984387`*^9}, {3.6817275360056477`*^9, 
   3.681727573809435*^9}, {3.6817277605453863`*^9, 3.6817280558162513`*^9}, {
   3.6817280891089993`*^9, 3.6817281137226133`*^9}, {3.681728317640273*^9, 
   3.6817287282362337`*^9}, {3.6817287828832536`*^9, 
   3.6817287951478148`*^9}, {3.681728850547335*^9, 3.6817288674390807`*^9}, {
   3.681728936792102*^9, 3.6817290114837165`*^9}, {3.68172911702174*^9, 
   3.6817291505815988`*^9}, 3.6817292058141575`*^9, {3.6817292762692833`*^9, 
   3.6817293639404306`*^9}, {3.6817341555451155`*^9, 3.681734160799675*^9}, {
   3.681734215869251*^9, 3.681734216018279*^9}, {3.6817344183317056`*^9, 
   3.6817344522439704`*^9}, {3.6817345725775433`*^9, 3.681734591889969*^9}, {
   3.6817352802725444`*^9, 3.6817352830015726`*^9}, {3.6817353338653917`*^9, 
   3.681735337306783*^9}, {3.6817464069031897`*^9, 3.6817464720358415`*^9}, {
   3.681746587797762*^9, 3.6817466028256607`*^9}, 3.6817467159045362`*^9, 
   3.681747103373444*^9, {3.681747209061635*^9, 3.681747224890625*^9}, {
   3.6817476129089613`*^9, 3.681747662024774*^9}, {3.6817477962293034`*^9, 
   3.6817478257854056`*^9}, {3.681747866320883*^9, 3.6817479038664417`*^9}, {
   3.6817480116805687`*^9, 3.681748015396822*^9}, {3.681748072994712*^9, 
   3.6817480731947403`*^9}, {3.681748108341988*^9, 3.6817481587624035`*^9}, {
   3.68174827198761*^9, 3.6817482752620406`*^9}, {3.6817483212102957`*^9, 
   3.681748368024184*^9}, {3.6817924090350113`*^9, 3.681792420031315*^9}, {
   3.6817963579932942`*^9, 3.6817963886346846`*^9}, {3.681796446885377*^9, 
   3.6817964470860987`*^9}, {3.68182032861773*^9, 3.6818203334364552`*^9}, {
   3.685006181204047*^9, 3.685006192319708*^9}, {3.685006222837332*^9, 
   3.6850062243916597`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.513046}, {0.2, 0.563185}, {0.3, 0.613274}, {0.4, 
       0.651559}, {0.5, 0.694475}, {0.6, 0.714826}, {0.7, 0.745588}, {0.8, 
       0.781247}, {0.9, 
       0.814127}}], {{LineBox[{{0.1, 0.5490235}, {0.1, 0.4770685}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.5490235}], 
          Offset[{-1.5, 0}, {0.1, 0.5490235}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.4770685}], 
          Offset[{-1.5, 0}, {0.1, 0.4770685}]}]}, {
        LineBox[{{0.2, 0.5991723}, {0.2, 0.5271977000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.5991723}], 
          Offset[{-1.5, 0}, {0.2, 0.5991723}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.5271977000000001}], 
          Offset[{-1.5, 0}, {0.2, 0.5271977000000001}]}]}, {
        LineBox[{{0.3, 0.6470663999999999}, {0.3, 0.5794816}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.6470663999999999}], 
          Offset[{-1.5, 0}, {0.3, 0.6470663999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.5794816}], 
          Offset[{-1.5, 0}, {0.3, 0.5794816}]}]}, {
        LineBox[{{0.4, 0.6826374}, {0.4, 0.6204806}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.6826374}], 
          Offset[{-1.5, 0}, {0.4, 0.6826374}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.6204806}], 
          Offset[{-1.5, 0}, {0.4, 0.6204806}]}]}, {
        LineBox[{{0.5, 0.7210143999999999}, {0.5, 0.6679356}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.7210143999999999}], 
          Offset[{-1.5, 0}, {0.5, 0.7210143999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.6679356}], 
          Offset[{-1.5, 0}, {0.5, 0.6679356}]}]}, {
        LineBox[{{0.6, 0.7411599}, {0.6, 0.6884920999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.7411599}], 
          Offset[{-1.5, 0}, {0.6, 0.7411599}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.6884920999999999}], 
          Offset[{-1.5, 0}, {0.6, 0.6884920999999999}]}]}, {
        LineBox[{{0.7, 0.7678339000000001}, {0.7, 0.7233421}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.7678339000000001}], 
          Offset[{-1.5, 0}, {0.7, 0.7678339000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.7233421}], 
          Offset[{-1.5, 0}, {0.7, 0.7233421}]}]}, {
        LineBox[{{0.8, 0.7985465}, {0.8, 0.7639475}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.7985465}], 
          Offset[{-1.5, 0}, {0.8, 0.7985465}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.7639475}], 
          Offset[{-1.5, 0}, {0.8, 0.7639475}]}]}, {
        LineBox[{{0.9, 0.8283666000000001}, {0.9, 0.7998874}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.8283666000000001}], 
          Offset[{-1.5, 0}, {0.9, 0.8283666000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.7998874}], 
          Offset[{-1.5, 0}, {0.9, 0.7998874}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.532602}, {0.2, 0.583251}, {0.3, 0.629031}, {0.4, 
       0.661419}, {0.5, 0.703267}, {0.6, 0.724778}, {0.7, 0.768755}, {0.8, 
       0.800482}, {0.9, 
       0.818699}}], {{LineBox[{{0.1, 0.5577682}, {0.1, 0.5074358}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.5577682}], 
          Offset[{-1.5, 0}, {0.1, 0.5577682}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.5074358}], 
          Offset[{-1.5, 0}, {0.1, 0.5074358}]}]}, {
        LineBox[{{0.2, 0.6068623}, {0.2, 0.5596397}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.6068623}], 
          Offset[{-1.5, 0}, {0.2, 0.6068623}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.5596397}], 
          Offset[{-1.5, 0}, {0.2, 0.5596397}]}]}, {
        LineBox[{{0.3, 0.6556116}, {0.3, 0.6024504}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.6556116}], 
          Offset[{-1.5, 0}, {0.3, 0.6556116}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.6024504}], 
          Offset[{-1.5, 0}, {0.3, 0.6024504}]}]}, {
        LineBox[{{0.4, 0.6839187999999999}, {0.4, 0.6389192}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.6839187999999999}], 
          Offset[{-1.5, 0}, {0.4, 0.6839187999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.6389192}], 
          Offset[{-1.5, 0}, {0.4, 0.6389192}]}]}, {
        LineBox[{{0.5, 0.7237911}, {0.5, 0.6827428999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.7237911}], 
          Offset[{-1.5, 0}, {0.5, 0.7237911}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.6827428999999999}], 
          Offset[{-1.5, 0}, {0.5, 0.6827428999999999}]}]}, {
        LineBox[{{0.6, 0.7447555}, {0.6, 0.7048005}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.7447555}], 
          Offset[{-1.5, 0}, {0.6, 0.7447555}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.7048005}], 
          Offset[{-1.5, 0}, {0.6, 0.7048005}]}]}, {
        LineBox[{{0.7, 0.7845127}, {0.7, 0.7529973}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.7845127}], 
          Offset[{-1.5, 0}, {0.7, 0.7845127}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.7529973}], 
          Offset[{-1.5, 0}, {0.7, 0.7529973}]}]}, {
        LineBox[{{0.8, 0.8121981}, {0.8, 0.7887659}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.8121981}], 
          Offset[{-1.5, 0}, {0.8, 0.8121981}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.7887659}], 
          Offset[{-1.5, 0}, {0.8, 0.7887659}]}]}, {
        LineBox[{{0.9, 0.8296781999999999}, {0.9, 0.8077198}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.8296781999999999}], 
          Offset[{-1.5, 0}, {0.9, 0.8296781999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.8077198}], 
          Offset[{-1.5, 0}, {0.9, 0.8077198}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.320403}, {0.2, 0.361823}, {0.3, 0.399748}, {0.4, 
       0.444715}, {0.5, 0.488809}, {0.6, 0.533417}, {0.7, 0.559548}, {0.8, 
       0.597386}, {0.9, 
       0.674047}}], {{LineBox[{{0.1, 0.4045123}, {0.1, 0.2362937}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.4045123}], 
          Offset[{-1.5, 0}, {0.1, 0.4045123}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.2362937}], 
          Offset[{-1.5, 0}, {0.1, 0.2362937}]}]}, {
        LineBox[{{0.2, 0.45366}, {0.2, 0.269986}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.45366}], 
          Offset[{-1.5, 0}, {0.2, 0.45366}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.269986}], 
          Offset[{-1.5, 0}, {0.2, 0.269986}]}]}, {
        LineBox[{{0.3, 0.4908318}, {0.3, 0.3086642}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.4908318}], 
          Offset[{-1.5, 0}, {0.3, 0.4908318}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.3086642}], 
          Offset[{-1.5, 0}, {0.3, 0.3086642}]}]}, {
        LineBox[{{0.4, 0.5382521}, {0.4, 0.35117790000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.5382521}], 
          Offset[{-1.5, 0}, {0.4, 0.5382521}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.35117790000000004`}], 
          Offset[{-1.5, 0}, {0.4, 0.35117790000000004`}]}]}, {
        LineBox[{{0.5, 0.5816654}, {0.5, 0.3959526}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.5816654}], 
          Offset[{-1.5, 0}, {0.5, 0.5816654}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.3959526}], 
          Offset[{-1.5, 0}, {0.5, 0.3959526}]}]}, {
        LineBox[{{0.6, 0.6187797}, {0.6, 0.4480543}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.6187797}], 
          Offset[{-1.5, 0}, {0.6, 0.6187797}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.4480543}], 
          Offset[{-1.5, 0}, {0.6, 0.4480543}]}]}, {
        LineBox[{{0.7, 0.6354639000000001}, {0.7, 0.48363210000000006`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.6354639000000001}], 
          Offset[{-1.5, 0}, {0.7, 0.6354639000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.48363210000000006`}], 
          Offset[{-1.5, 0}, {0.7, 0.48363210000000006`}]}]}, {
        LineBox[{{0.8, 0.6649266}, {0.8, 0.5298453999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.6649266}], 
          Offset[{-1.5, 0}, {0.8, 0.6649266}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.5298453999999999}], 
          Offset[{-1.5, 0}, {0.8, 0.5298453999999999}]}]}, {
        LineBox[{{0.9, 0.7323818}, {0.9, 0.6157121999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.7323818}], 
          Offset[{-1.5, 0}, {0.9, 0.7323818}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.6157121999999999}], 
          Offset[{-1.5, 0}, {0.9, 
           0.6157121999999999}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.0573324}, {0.2, 0.0686867}, {0.3, 0.094562}, {0.4, 
       0.0938591}, {0.5, 0.0897132}, {0.6, 0.128539}, {0.7, 0.136306}, {0.8, 
       0.180347}, {0.9, 
       0.253699}}], {{
        LineBox[{{0.1, 0.0901879}, {0.1, 0.024476899999999996`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.0901879}], 
          Offset[{-1.5, 0}, {0.1, 0.0901879}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.024476899999999996`}], 
          Offset[{-1.5, 0}, {0.1, 0.024476899999999996`}]}]}, {
        LineBox[{{0.2, 0.10609070000000001`}, {0.2, 0.031282700000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.10609070000000001`}], 
          Offset[{-1.5, 0}, {0.2, 0.10609070000000001`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.031282700000000004`}], 
          Offset[{-1.5, 0}, {0.2, 0.031282700000000004`}]}]}, {
        LineBox[{{0.3, 0.148944}, {0.3, 0.040179999999999993`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.148944}], 
          Offset[{-1.5, 0}, {0.3, 0.148944}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.040179999999999993`}], 
          Offset[{-1.5, 0}, {0.3, 0.040179999999999993`}]}]}, {
        LineBox[{{0.4, 0.1441511}, {0.4, 0.0435671}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.1441511}], 
          Offset[{-1.5, 0}, {0.4, 0.1441511}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.0435671}], 
          Offset[{-1.5, 0}, {0.4, 0.0435671}]}]}, {
        LineBox[{{0.5, 0.13529660000000002`}, {0.5, 0.044129800000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.13529660000000002`}], 
          Offset[{-1.5, 0}, {0.5, 0.13529660000000002`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.044129800000000004`}], 
          Offset[{-1.5, 0}, {0.5, 0.044129800000000004`}]}]}, {
        LineBox[{{0.6, 0.1919727}, {0.6, 0.06510529999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.1919727}], 
          Offset[{-1.5, 0}, {0.6, 0.1919727}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.06510529999999999}], 
          Offset[{-1.5, 0}, {0.6, 0.06510529999999999}]}]}, {
        LineBox[{{0.7, 0.2019786}, {0.7, 0.07063340000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.2019786}], 
          Offset[{-1.5, 0}, {0.7, 0.2019786}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.07063340000000001}], 
          Offset[{-1.5, 0}, {0.7, 0.07063340000000001}]}]}, {
        LineBox[{{0.8, 0.2588918}, {0.8, 0.10180220000000001`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.2588918}], 
          Offset[{-1.5, 0}, {0.8, 0.2588918}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.10180220000000001`}], 
          Offset[{-1.5, 0}, {0.8, 0.10180220000000001`}]}]}, {
        LineBox[{{0.9, 0.3487129}, {0.9, 0.15868510000000002`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.3487129}], 
          Offset[{-1.5, 0}, {0.9, 0.3487129}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.15868510000000002`}], 
          Offset[{-1.5, 0}, {0.9, 
           0.15868510000000002`}]}]}}}, {}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.005], Opacity[1.], LineBox[CompressedData["
1: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
D1quwv8DSxv5Ig==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
nfBgjMYk8ey4fBiNK4HfM533IeYk/g8Kt7oz
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", 25, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"1-\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\)[20]\"", 25, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{70, 25}, {70, 10}},
  ImageSize->650,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6817275621563787`*^9, 3.681727574408965*^9}, {
   3.6817278275814486`*^9, 3.6817278500555797`*^9}, 3.681727904303172*^9, 
   3.6817279655102043`*^9, {3.681728056883999*^9, 3.6817280788135867`*^9}, 
   3.6817281161672745`*^9, {3.681728334539065*^9, 3.681728357763095*^9}, 
   3.6817285601521826`*^9, 3.68172872887568*^9, {3.6817287848667793`*^9, 
   3.6817287961424384`*^9}, {3.6817288611973577`*^9, 
   3.6817288678969135`*^9}, {3.6817289614537096`*^9, 3.681729012574681*^9}, 
   3.681729170103059*^9, 3.6817292081167927`*^9, {3.681729316413992*^9, 
   3.68172936448949*^9}, {3.6817342115872793`*^9, 3.681734217898281*^9}, {
   3.681734445485341*^9, 3.6817344531905036`*^9}, {3.6817345744240003`*^9, 
   3.681734592465083*^9}, 3.681735283554385*^9, 3.681735338981262*^9, 
   3.6817440169220314`*^9, {3.681746412398718*^9, 3.6817464345645814`*^9}, 
   3.6817464726216507`*^9, 3.6817467501495256`*^9, 3.6817471064641485`*^9, {
   3.681747217071483*^9, 3.6817472259706135`*^9}, {3.681747629101405*^9, 
   3.6817476629791436`*^9}, {3.6817478103799596`*^9, 3.681747817689023*^9}, 
   3.6817479082823987`*^9, 3.681748016069413*^9, 3.68174807383574*^9, 
   3.681748125592394*^9, 3.681748159950243*^9, 3.6817482765772*^9, 
   3.681748330910471*^9, 3.681748368667653*^9, {3.6817924119481387`*^9, 
   3.681792421293925*^9}, 3.681796366930087*^9, {3.681796447851553*^9, 
   3.681796466182623*^9}, 3.685006255435587*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<Simulation1.eps\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6817440207050915`*^9, 3.681744027996286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "HAPLOIDS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.598844"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.068707", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.670572"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0590695", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.746954"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0406857", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.79172"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0293246", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.833575"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0221356", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.872904"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.01222", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.908928"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00652701", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.934157"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00292066", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.947041"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00194316", "]"}]}], "}"}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.124904"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0679469", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.171003"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0825718", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.19698"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0898352", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.235088"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0959802", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.288497"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.101999", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.358405"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.107495", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.424284"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0995503", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.516108"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0818168", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.55168"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.071582", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"kRat", " ", 
              SqrtBox["RRat"]}]]}]}], "]"}], 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
       RowBox[{"kRat", "\[Rule]", 
        RowBox[{"1", "/", "1000"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"Log", "[", "2", "]"}], 
             RowBox[{"Log", "[", "RRat", "]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"kRat", " ", 
              SqrtBox["RRat"]}]]}]}], "]"}], 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Log", "[", "2", "]"}]}]]}], "/.", 
       RowBox[{"kRat", "\[Rule]", 
        RowBox[{"10", "/", "1000"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"RRat", ",", "0", ",", "0.99"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.832742"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00872175", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.893034"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00441898", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.935316"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0025233", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.955873"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00131179", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.973962"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000627735", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.983722"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000298806", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.990539"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000122489", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.99397"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"4.35", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.995807"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"2.24", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.852004"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00372432", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.913735"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.00182244", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.950223"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000918692", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.4", ",", "0.971311"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000458062", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.983837"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.000232059", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.991473"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"8.72", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.995211"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"3.95", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.996937"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"1.54", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "5"}]]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.997735"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"7.68", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(R\)], \
SubscriptBox[\(W\), \(I\)]]\)\>\"", ",", "LabelSize"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<1-\!\(\*SubscriptBox[\(F\), \(I\)]\)[20]\>\"", ",", 
         "LabelSize"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6817295190445366`*^9, 3.6817300832713633`*^9}, {
  3.6817301526564693`*^9, 3.6817302132596693`*^9}, {3.681730798015195*^9, 
  3.681730850779053*^9}, {3.6817342234101973`*^9, 3.681734223677148*^9}, {
  3.6817343954568863`*^9, 3.6817344037791843`*^9}, {3.681734509619748*^9, 
  3.681734532765295*^9}, {3.681734605415934*^9, 3.681734605613832*^9}, {
  3.681735109118348*^9, 3.6817351487326827`*^9}, {3.681735267905764*^9, 
  3.6817352734306912`*^9}, {3.6817467241813393`*^9, 3.681746741251551*^9}, {
  3.6818203412266145`*^9, 3.6818203488812227`*^9}, {3.6850062415203137`*^9, 
  3.685006268539282*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.598844}, {0.2, 0.670572}, {0.3, 0.746954}, {0.4, 
       0.79172}, {0.5, 0.833575}, {0.6, 0.872904}, {0.7, 0.908928}, {0.8, 
       0.934157}, {0.9, 
       0.947041}}], {{LineBox[{{0.1, 0.667551}, {0.1, 0.5301370000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.667551}], 
          Offset[{-1.5, 0}, {0.1, 0.667551}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.5301370000000001}], 
          Offset[{-1.5, 0}, {0.1, 0.5301370000000001}]}]}, {
        LineBox[{{0.2, 0.7296414999999999}, {0.2, 0.6115025}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.7296414999999999}], 
          Offset[{-1.5, 0}, {0.2, 0.7296414999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.6115025}], 
          Offset[{-1.5, 0}, {0.2, 0.6115025}]}]}, {
        LineBox[{{0.3, 0.7876397}, {0.3, 0.7062683}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.7876397}], 
          Offset[{-1.5, 0}, {0.3, 0.7876397}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.7062683}], 
          Offset[{-1.5, 0}, {0.3, 0.7062683}]}]}, {
        LineBox[{{0.4, 0.8210446}, {0.4, 0.7623954}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.8210446}], 
          Offset[{-1.5, 0}, {0.4, 0.8210446}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.7623954}], 
          Offset[{-1.5, 0}, {0.4, 0.7623954}]}]}, {
        LineBox[{{0.5, 0.8557106}, {0.5, 0.8114393999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.8557106}], 
          Offset[{-1.5, 0}, {0.5, 0.8557106}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.8114393999999999}], 
          Offset[{-1.5, 0}, {0.5, 0.8114393999999999}]}]}, {
        LineBox[{{0.6, 0.885124}, {0.6, 0.860684}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.885124}], 
          Offset[{-1.5, 0}, {0.6, 0.885124}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.860684}], 
          Offset[{-1.5, 0}, {0.6, 0.860684}]}]}, {
        LineBox[{{0.7, 0.91545501}, {0.7, 0.90240099}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.91545501}], 
          Offset[{-1.5, 0}, {0.7, 0.91545501}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.90240099}], 
          Offset[{-1.5, 0}, {0.7, 0.90240099}]}]}, {
        LineBox[{{0.8, 0.93707766}, {0.8, 0.93123634}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.93707766}], 
          Offset[{-1.5, 0}, {0.8, 0.93707766}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.93123634}], 
          Offset[{-1.5, 0}, {0.8, 0.93123634}]}]}, {
        LineBox[{{0.9, 0.9489841600000001}, {0.9, 0.94509784}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9489841600000001}], 
          Offset[{-1.5, 0}, {0.9, 0.9489841600000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.94509784}], 
          Offset[{-1.5, 0}, {0.9, 0.94509784}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.124904}, {0.2, 0.171003}, {0.3, 0.19698}, {0.4, 
       0.235088}, {0.5, 0.288497}, {0.6, 0.358405}, {0.7, 0.424284}, {0.8, 
       0.516108}, {0.9, 
       0.55168}}], {{LineBox[{{0.1, 0.1928509}, {0.1, 0.0569571}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.1928509}], 
          Offset[{-1.5, 0}, {0.1, 0.1928509}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.0569571}], 
          Offset[{-1.5, 0}, {0.1, 0.0569571}]}]}, {
        LineBox[{{0.2, 0.2535748}, {0.2, 0.08843119999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.2535748}], 
          Offset[{-1.5, 0}, {0.2, 0.2535748}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.08843119999999999}], 
          Offset[{-1.5, 0}, {0.2, 0.08843119999999999}]}]}, {
        LineBox[{{0.3, 0.2868152}, {0.3, 0.10714479999999998`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.2868152}], 
          Offset[{-1.5, 0}, {0.3, 0.2868152}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.10714479999999998`}], 
          Offset[{-1.5, 0}, {0.3, 0.10714479999999998`}]}]}, {
        LineBox[{{0.4, 0.3310682}, {0.4, 0.1391078}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.3310682}], 
          Offset[{-1.5, 0}, {0.4, 0.3310682}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.1391078}], 
          Offset[{-1.5, 0}, {0.4, 0.1391078}]}]}, {
        LineBox[{{0.5, 0.390496}, {0.5, 0.186498}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.390496}], 
          Offset[{-1.5, 0}, {0.5, 0.390496}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.186498}], 
          Offset[{-1.5, 0}, {0.5, 0.186498}]}]}, {
        LineBox[{{0.6, 0.4659}, {0.6, 0.25090999999999997`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.4659}], Offset[{-1.5, 0}, {0.6, 0.4659}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.25090999999999997`}], 
          Offset[{-1.5, 0}, {0.6, 0.25090999999999997`}]}]}, {
        LineBox[{{0.7, 0.5238343}, {0.7, 0.3247337}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.5238343}], 
          Offset[{-1.5, 0}, {0.7, 0.5238343}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.3247337}], 
          Offset[{-1.5, 0}, {0.7, 0.3247337}]}]}, {
        LineBox[{{0.8, 0.5979248}, {0.8, 0.4342912}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.5979248}], 
          Offset[{-1.5, 0}, {0.8, 0.5979248}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.4342912}], 
          Offset[{-1.5, 0}, {0.8, 0.4342912}]}]}, {
        LineBox[{{0.9, 0.623262}, {0.9, 0.4800979999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.623262}], 
          Offset[{-1.5, 0}, {0.9, 0.623262}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.4800979999999999}], 
          Offset[{-1.5, 0}, {0.9, 
           0.4800979999999999}]}]}}}, {}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.005], Opacity[1.], LineBox[CompressedData["
1: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
I64SvwpaGUgroFBp6WhwjfhfPvEuug==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
QtU=
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.832742}, {0.2, 0.893034}, {0.3, 0.935316}, {0.4, 
       0.955873}, {0.5, 0.973962}, {0.6, 0.983722}, {0.7, 0.990539}, {0.8, 
       0.99397}, {0.9, 
       0.995807}}], {{LineBox[{{0.1, 0.84146375}, {0.1, 0.82402025}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.84146375}], 
          Offset[{-1.5, 0}, {0.1, 0.84146375}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.82402025}], 
          Offset[{-1.5, 0}, {0.1, 0.82402025}]}]}, {
        LineBox[{{0.2, 0.89745298}, {0.2, 0.88861502}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.89745298}], 
          Offset[{-1.5, 0}, {0.2, 0.89745298}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.88861502}], 
          Offset[{-1.5, 0}, {0.2, 0.88861502}]}]}, {
        LineBox[{{0.3, 0.9378393}, {0.3, 0.9327927}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.9378393}], 
          Offset[{-1.5, 0}, {0.3, 0.9378393}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.9327927}], 
          Offset[{-1.5, 0}, {0.3, 0.9327927}]}]}, {
        LineBox[{{0.4, 0.95718479}, {0.4, 0.9545612099999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.95718479}], 
          Offset[{-1.5, 0}, {0.4, 0.95718479}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.9545612099999999}], 
          Offset[{-1.5, 0}, {0.4, 0.9545612099999999}]}]}, {
        LineBox[{{0.5, 0.974589735}, {0.5, 0.973334265}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.974589735}], 
          Offset[{-1.5, 0}, {0.5, 0.974589735}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.973334265}], 
          Offset[{-1.5, 0}, {0.5, 0.973334265}]}]}, {
        LineBox[{{0.6, 0.984020806}, {0.6, 0.983423194}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.984020806}], 
          Offset[{-1.5, 0}, {0.6, 0.984020806}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.983423194}], 
          Offset[{-1.5, 0}, {0.6, 0.983423194}]}]}, {
        LineBox[{{0.7, 0.990661489}, {0.7, 0.9904165109999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.990661489}], 
          Offset[{-1.5, 0}, {0.7, 0.990661489}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.9904165109999999}], 
          Offset[{-1.5, 0}, {0.7, 0.9904165109999999}]}]}, {
        LineBox[{{0.8, 0.9940135}, {0.8, 0.9939265}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9940135}], 
          Offset[{-1.5, 0}, {0.8, 0.9940135}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9939265}], 
          Offset[{-1.5, 0}, {0.8, 0.9939265}]}]}, {
        LineBox[{{0.9, 0.9958294}, {0.9, 0.9957846}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9958294}], 
          Offset[{-1.5, 0}, {0.9, 0.9958294}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9957846}], 
          Offset[{-1.5, 0}, {0.9, 0.9957846}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 0.852004}, {0.2, 0.913735}, {0.3, 0.950223}, {0.4, 
       0.971311}, {0.5, 0.983837}, {0.6, 0.991473}, {0.7, 0.995211}, {0.8, 
       0.996937}, {0.9, 
       0.997735}}], {{LineBox[{{0.1, 0.85572832}, {0.1, 0.84827968}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.85572832}], 
          Offset[{-1.5, 0}, {0.1, 0.85572832}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.1, 0.84827968}], 
          Offset[{-1.5, 0}, {0.1, 0.84827968}]}]}, {
        LineBox[{{0.2, 0.91555744}, {0.2, 0.91191256}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.91555744}], 
          Offset[{-1.5, 0}, {0.2, 0.91555744}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.2, 0.91191256}], 
          Offset[{-1.5, 0}, {0.2, 0.91191256}]}]}, {
        LineBox[{{0.3, 0.9511416920000001}, {0.3, 0.949304308}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.9511416920000001}], 
          Offset[{-1.5, 0}, {0.3, 0.9511416920000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.3, 0.949304308}], 
          Offset[{-1.5, 0}, {0.3, 0.949304308}]}]}, {
        LineBox[{{0.4, 0.971769062}, {0.4, 0.970852938}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.971769062}], 
          Offset[{-1.5, 0}, {0.4, 0.971769062}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.4, 0.970852938}], 
          Offset[{-1.5, 0}, {0.4, 0.970852938}]}]}, {
        LineBox[{{0.5, 0.984069059}, {0.5, 0.983604941}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.984069059}], 
          Offset[{-1.5, 0}, {0.5, 0.984069059}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.5, 0.983604941}], 
          Offset[{-1.5, 0}, {0.5, 0.983604941}]}]}, {
        LineBox[{{0.6, 0.9915602}, {0.6, 0.9913858000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.9915602}], 
          Offset[{-1.5, 0}, {0.6, 0.9915602}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.6, 0.9913858000000001}], 
          Offset[{-1.5, 0}, {0.6, 0.9913858000000001}]}]}, {
        LineBox[{{0.7, 0.9952504999999999}, {0.7, 0.9951715}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.9952504999999999}], 
          Offset[{-1.5, 0}, {0.7, 0.9952504999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.9951715}], 
          Offset[{-1.5, 0}, {0.7, 0.9951715}]}]}, {
        LineBox[{{0.8, 0.9969524}, {0.8, 0.9969216}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9969524}], 
          Offset[{-1.5, 0}, {0.8, 0.9969524}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9969216}], 
          Offset[{-1.5, 0}, {0.8, 0.9969216}]}]}, {
        LineBox[{{0.9, 0.99774268}, {0.9, 0.9977273200000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.99774268}], 
          Offset[{-1.5, 0}, {0.9, 0.99774268}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9977273200000001}], 
          Offset[{-1.5, 0}, {0.9, 0.9977273200000001}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(R\\)], \
SubscriptBox[\\(W\\), \\(I\\)]]\\)\"", 25, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"1-\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\)[20]\"", 25, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->650,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6817300847318215`*^9, {3.6817301805278077`*^9, 3.6817302140584993`*^9}, {
   3.6817307986620502`*^9, 3.6817308513168335`*^9}, {3.6817343966645575`*^9, 
   3.6817344046374907`*^9}, {3.681734516471464*^9, 3.6817345507769127`*^9}, 
   3.681734606128378*^9, {3.6817351344262953`*^9, 3.6817351495938454`*^9}, 
   3.6817352740129676`*^9, 3.6817440367917433`*^9, {3.6817467434184713`*^9, 
   3.681746752904236*^9}, {3.6850062619206347`*^9, 3.6850062754992056`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<Simulation2.eps\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.68174404036239*^9, 3.6817440415220976`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1.0000000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2.015707"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2.853403"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3.895288"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4.717277"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5.685864"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "6.471204"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "6.910995"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "7.602094"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "8.041885"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "8.638743"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "8.979058"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "9.691099"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "9.973822"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "10.450262"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "11.198953"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "11.340314"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "11.455497"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"18", ",", "11.973822"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "12.073298"}], "}"}], ","}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Blue"}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"1.01", "^", "t"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "19"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.0025", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"10", " ", 
      RowBox[{"1.01", "^", "t"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "19"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Generation (t)\>\"", ",", "LabelSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(N\), \(I\)]\)[t]\>\"", ",", "LabelSize"}], 
       "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{{3.6817311010744085`*^9, 3.6817313814062614`*^9}, {
  3.6817315544833755`*^9, 3.6817316082599373`*^9}, {3.681731653559822*^9, 
  3.6817316570144634`*^9}, {3.681731712690899*^9, 3.681731804197999*^9}, {
  3.6817319086632547`*^9, 3.681731999592091*^9}, {3.681732061827346*^9, 
  3.6817320624682984`*^9}, {3.6817329717949796`*^9, 3.681732973827571*^9}, {
  3.6817330089626684`*^9, 3.681733026165933*^9}, {3.6817330621582613`*^9, 
  3.6817330666081395`*^9}, {3.681733326031597*^9, 3.681733408717492*^9}, {
  3.6818142681518316`*^9, 3.6818142703377323`*^9}, {3.6818204555118084`*^9, 
  3.6818204742407937`*^9}, {3.6850091136960773`*^9, 3.6850091317431307`*^9}, {
  3.685009174523875*^9, 3.685009193527072*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQjR18sO+YWLgkIu+ZPVTA4eGqLze3HPsA5XM4sN8s
3zD74FcoX8Bh1eRL0Tcu/oDyRRyinRtjjp/7DeVLOPy279Da/uAvlC/jkO/R
2sPx7h+Ur+DQutjC0syKwQHCV3KwmrSfP2UtjK/iwOUoup3ZgRHKV3MwVGGR
VO2H8TUcFpZXMedrM0H5Wg7vrt4oDk6D8XUcyjZJpD85CuPrOTB8vThtZjAz
lG/g4K2sKemVC+MbOvxoN0//0wjjGzmwubAenHsHxjd28F6eld//ltkBACzk
THg=
       "]]}, {}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.0025], Opacity[1.], LineBox[CompressedData["
1:eJwVjns0lAkYh5mzLULDknUJKSYlY3ytUHhfUa02ap2sbmOnMKl1aZkGW0OF
aJ2NTZJLodYiuYTMmilh8H1uiVKyNS5buVWimJGw+uM5v/P89XtMDod4+tMU
FBTcF/my38tdZi4tyXAKK+dHO1xkOaVYGXtVS8NBpN/L7+cuA1XHKbc4aTwM
jA5ZXuMaAenCcf1FmgaChmAVAZcJZmSqs480H87vIMIDuU7wOIFV6y0VQjZN
m+nH9YBbI4LoPVIS/J/HqnC4PqCbYdrnKX0KazwcZWxu8KInPXTvGwa2Qa5C
UXE0hFi99fkUOQl7Tz7q35kQDwcVMv+S+8thMEJiuUorCZh52q28rnmoyJl1
7shJgfGzvQbpATQU++isWBeaBvZXk+s3FixBNdqj3/amZgL1ruVhYY8yDlo2
ddjkZYPrNd2zjl2qGKT3YiRNmAsVtm2rNdTo2LrMvCSq8QacT3OrPKOkiR3H
PzSHleVBLzNkKffMNyjV6eXU/pkPpmKy56iBNv5XqimaziwE7nShfC59OZ6/
03xsc0wR5DLuJ9+2+xbnirteHE0phqjQy887OnTx9Oh063h6KXgGySKjftDH
vuZ25fqaMljJTkzaOWSAw2mUmmLjbXg1WzB984ghbs+KcSCry+FG0ky3ubIx
0vWPuNMkFXDW+Fxlwu6V+NK+x+AoWQklHo8ZW+kmaJSsouMtugPe8s1emlIT
vPOz70R1XRWcigy4ZZa9CnP9BfIbQiGEKvPZIQdXY7a62b3qgn/gpebVFmqt
KSpaTR12LamGrskEzrERU7x7Lu67n66LwNHjQrlBtRlOeDsNPb8phkghz4cW
x0Dj1ljvpJK7wJIbb7B2WYOlvMQPVM498Kt4KQnRNMfsNNHx8Pwa0N4WLJju
NMfx94V6xVn3IfV1T3L5hbW4iq+F8dtqIUWRzYk6sA5jWK99J6laUPuYt/ei
vgXSv043zN1SB7RDyupVIxb4o27/9t+b6iAsz2rUpGg9SrYqKQud66FKZmsi
CbBEwnXq70hRPZxo2KfN28hETnR4Fd9RAmUByAqaZmJZ97MDQqEEjsSjMr/J
CsUBD38lHBpA9kzDcL8bCzva/uC61DTAzL++O64WsHDJTouJNNtGsM+UeA3T
rXFGif2GIW4E26a4E97HrVGnL1gwY9MERhF2WwYeWKNt/Pa3h0qawGVI9ibU
hkC1wMr2r6xJYNTr3TJPJVA9UNF17CYJCV67VB5fJvAYzTBFtZiEseFYbvQV
Auuv2A1alJJQRn+/8kkmgbzGkNOBFSRsYjelxlwnsM9IevetmAR3eWi0tJTA
gk6Rzfs2EnjMNs9LLQSCLW/N1DsSntQplkEbgZfbk/jLJ0iw97JVH2sncMK3
qNHmAwnzJ6+Tzp0E5icP+vJliz3NEQ7jTxf7RnfnyBZIyPQzY+x4RWB3lqXe
Jw0K5mX7Y6ZeE8ja4Bagr0UBJzG5P2eYwMRmP+Gm5RSYls9myMYIdJrO9Dqp
R0HJQic9b5LA3F1LL342oUAjRSlo90cCP78yG1hhSkEYw7FldorAfaecWY4M
CuzcC2I9ZwhULYx4IFhHQUb/i4G5TwRy4JLhtfUUzIVpQeFnAkXdpYE1zMV/
JbesPfME6gS2iqUsCuozomYWFggMpg0tXSAo+B/mKkwZ
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0], Thickness[0.015], Opacity[1.], LineBox[CompressedData["
1:eJwV0Hs0lHkcBnC9v+2YlmI27bpsmBoTEePtuExl52m1u6m0EUmlMxuVtqZh
TGWajdy2Ue3QZVxGaolF6xTq6L42bBNRsRGpKRWmJEUYKfbdP77nOZ9znj+e
8+VskgRupoyMjPyZ+z+XGnxHj0/WfDPaLbhWvp3CMTe74Mu6PcK3t9Wz7jE2
8RnyS9EdEHaVvVO+Yaz1FS3ZrssUNu0tCXbeQcFBq168UVckLJ5m1V/A+L6S
/3eI7qJwjaeBkyWmUPpyX3yQTissT6k8ECehYKnhPgnUPRBu485fvTzmf6fd
83+iF54u9DiiVFCQuPVt/CAfEB5xzGAtSKKwwSinwLDZIFRZPn9ce5CCa6HF
bVnzuDBkhWDd4FEK/YkPbbIjKfyb0GeWoaEgyE2v9iyeDOuxMzse5VO49ab+
XkkbC9GdQXM+nqGw5KRlok+zCRR1G2zSKyic92qYbW5qhoAhcaX2CoXUTL8L
CcZstM96fDCmmsJDV8nnWxK+QPR17+uGOgrcq9q2bTYWaMnJzeA0U9gyXGL4
lD0DrxWikr/aKeTxqtLLvb9C4ymX8IlOCnHSjEd371qiit+11+oVhUDxiDxu
uTUiasZuF72jYB92KG1Fjw1asm1q20cpdI0VD5/ZOhOG6Oyh+EkEp9NGWxxZ
duj+zf5O3RSCRLtfLyhX2aPry+Of9bEJzq68z/vOjIOMvM2yZCuCEMPCYLaO
g+lROFTFIfhFHlnqcGoWfCHv2OlEIGXtDpNsmI2kfSdTR/gEL9i59becuFCN
N+hmCwiaB5Sin19ysTwhVFwLAp+Vqgqbyw5o+aE/n+VHIL8o20il8LBTEe3J
CyDgG+zmu/vOwdWyAHJpLUHE+Rc1ErYjmp0W7ukTEVh8v3PfcJMjcgsSuZmR
BOrutvQKlRNiD1e6WUcRHJsUJopbPxe2lwY7EUtg+r5w7VFrZ+zpUjV2xBNQ
P7GmVr50hmbNfJG1kiCm0O0V508XSOs8XBrTCCpHvDg1kfOwtoS7JjSTYFdt
qIXM0xWmjV/PST1FUBYJvnjYFVEDUvd5RQRbD4C1+6Yb8tY3P5OdIxhpN5+5
zo+PZ+62A+qLBKMd4ctyi/lonXJrgXMVgSCnJlhv5g61g2JuhJbA62bKrpAo
dxj7Hl7NvktgG+v9becdd6Q2pj7MbCXw7Rl5LfWg0ZqTzqrWEfCqrUod1Yy3
D0lE3QTK4B+n3M+gscihR5bIuFefvCU+i0a+rk1ewLjM7K19aw4NccC1JD3j
BWE31Un5NIhXUmZUD4G/QRqvO0eDT7Gr9usJZK4NgcfraRzMcpmW94qg9cak
MmEDjf4A2+k1jAXBXlN7G2kEmZhbdjEeV+RrFzfRsI8b5Dj1MnvqYhf1P6BR
GX7Fo5xxToQDb1kXjeeuS8NuvGb6I+uShrpp+OkFm54zFh1Kf/q7nsbZPOet
k/sIuBVjmpFeGnILs2g/xmcnmswKB2iYf2hJbmJsfsxYvOo9jV3ntamDjGN4
PvVjQzQ6dlxWzXhD4O1fnBw4SuOPJyeyQhlrnj7u/PSBhmm2KlfB+FPMdGHJ
RxrRgfvzcxmLjP1OBI3TeGAiLapiXK2JG52YYP75T3hpJ+P/AB5VJwI=
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.1807981139919893},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"Generation (t)\"", 25, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(I\\)]\\)[t]\"", 25, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4849066497880004`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5649493574615367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.6390573296152584`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.70805020110221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{70, 25}, {70, 10}},
  ImageSize->650,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 19.}, {-0.1383886798457202, 2.4909962372229635`}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{0., 
      FormBox["1", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {0.6931471805599453, 
      FormBox["2", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
      FormBox["5", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {2.302585092994046, 
      FormBox["10", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {0.4054651081081644, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.791759469228055, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.4849066497880004`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.5649493574615367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.6390573296152584`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.70805020110221, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{{3.681731642844308*^9, 3.681731657518021*^9}, {
   3.681731770082492*^9, 3.681731805579082*^9}, {3.6817319122808533`*^9, 
   3.681731929332156*^9}, {3.6817319708192697`*^9, 3.681731999829547*^9}, 
   3.6817320628682747`*^9, 3.6817329744386826`*^9, 3.6817330096937847`*^9, 
   3.6817330680666037`*^9, 3.6817333267024765`*^9, {3.6817333673592453`*^9, 
   3.6817334090613194`*^9}, 3.68174404652619*^9, 3.681814272062676*^9, {
   3.6850091194875193`*^9, 3.6850091328779573`*^9}, {3.685009170370902*^9, 
   3.685009199828473*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<SimvsNum.eps\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6817440546203747`*^9, 3.6817440655883026`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"testData1", ",", "testData2", ",", "testData3"}], "}"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FilledCircle]", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledUpTriangle]", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledSquare]", ",", "10"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.11", ",", "0.513046"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0359775", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.21", ",", "0.563185"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0359873", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.31", ",", "0.613274"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0337924", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.41", ",", "0.651559"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0310784", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.51", ",", "0.694475"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0265394", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.61", ",", "0.714826"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0263339", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.71", ",", "0.745588"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0222459", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.81", ",", "0.781247"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0172995", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.91", ",", "0.814127"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", "0.0142396", "]"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", 
       RowBox[{"Green", ",", "0.5"}], "]"}], ",", 
      RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6850087536943502`*^9, 3.6850087750720797`*^9}, {
  3.6850088425928307`*^9, 3.6850089372983027`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.5, 1., 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0.11, 0.513046}, {0.21, 0.563185}, {0.31, 0.613274}, {0.41, 
      0.651559}, {0.51, 0.694475}, {0.61, 0.714826}, {0.71, 0.745588}, {0.81, 
      0.781247}, {0.91, 
      0.814127}}], {{LineBox[{{0.11, 0.5490235}, {0.11, 0.4770685}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.11, 0.5490235}], 
         Offset[{-1.5, 0}, {0.11, 0.5490235}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.11, 0.4770685}], 
         Offset[{-1.5, 0}, {0.11, 0.4770685}]}]}, {
       LineBox[{{0.21, 0.5991723}, {0.21, 0.5271977000000001}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.21, 0.5991723}], 
         Offset[{-1.5, 0}, {0.21, 0.5991723}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.21, 0.5271977000000001}], 
         Offset[{-1.5, 0}, {0.21, 0.5271977000000001}]}]}, {
       LineBox[{{0.31, 0.6470663999999999}, {0.31, 0.5794816}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.31, 0.6470663999999999}], 
         Offset[{-1.5, 0}, {0.31, 0.6470663999999999}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.31, 0.5794816}], 
         Offset[{-1.5, 0}, {0.31, 0.5794816}]}]}, {
       LineBox[{{0.41, 0.6826374}, {0.41, 0.6204806}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.41, 0.6826374}], 
         Offset[{-1.5, 0}, {0.41, 0.6826374}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.41, 0.6204806}], 
         Offset[{-1.5, 0}, {0.41, 0.6204806}]}]}, {
       LineBox[{{0.51, 0.7210143999999999}, {0.51, 0.6679356}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.51, 0.7210143999999999}], 
         Offset[{-1.5, 0}, {0.51, 0.7210143999999999}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.51, 0.6679356}], 
         Offset[{-1.5, 0}, {0.51, 0.6679356}]}]}, {
       LineBox[{{0.61, 0.7411599}, {0.61, 0.6884920999999999}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.61, 0.7411599}], 
         Offset[{-1.5, 0}, {0.61, 0.7411599}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.61, 0.6884920999999999}], 
         Offset[{-1.5, 0}, {0.61, 0.6884920999999999}]}]}, {
       LineBox[{{0.71, 0.7678339000000001}, {0.71, 0.7233421}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.71, 0.7678339000000001}], 
         Offset[{-1.5, 0}, {0.71, 0.7678339000000001}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.71, 0.7233421}], 
         Offset[{-1.5, 0}, {0.71, 0.7233421}]}]}, {
       LineBox[{{0.81, 0.7985465}, {0.81, 0.7639475}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.81, 0.7985465}], 
         Offset[{-1.5, 0}, {0.81, 0.7985465}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.81, 0.7639475}], 
         Offset[{-1.5, 0}, {0.81, 0.7639475}]}]}, {
       LineBox[{{0.91, 0.8283666000000001}, {0.91, 0.7998874}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.91, 0.8283666000000001}], 
         Offset[{-1.5, 0}, {0.91, 0.8283666000000001}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.91, 0.7998874}], 
         Offset[{-1.5, 0}, {0.91, 0.7998874}]}]}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685008931814376*^9, 3.6850089377456427`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"HAPLOIDSvsDIPLOIDS", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"testData1", ",", "testData2", ",", "testData3"}], "}"}], ",", 
      
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[FilledCircle]", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[FilledUpTriangle]", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[FilledSquare]", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.11", ",", "0.513046"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0359775", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.21", ",", "0.563185"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0359873", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.31", ",", "0.613274"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0337924", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.41", ",", "0.651559"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0310784", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.51", ",", "0.694475"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0265394", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.61", ",", "0.714826"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0263339", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.71", ",", "0.745588"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0222459", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.81", ",", "0.781247"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0172995", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.91", ",", "0.814127"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0142396", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Green", ",", "0.5"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0.1"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.11", ",", "0.532602"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0251662", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.21", ",", "0.583251"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0236113", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.31", ",", "0.629031"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0265806", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.41", ",", "0.661419"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0224998", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.51", ",", "0.703267"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0205241", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.61", ",", "0.724778"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0199775", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.71", ",", "0.768755"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0157577", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.81", ",", "0.800482"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0117161", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.91", ",", "0.818699"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0109792", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Blue", ",", ".5"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.11", ",", "0.320403"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0841093", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.21", ",", "0.361823"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.091837", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.31", ",", "0.399748"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0910838", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.41", ",", "0.444715"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0935371", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.51", ",", "0.488809"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0928564", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.61", ",", "0.533417"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0853627", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.71", ",", "0.559548"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0759159", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.81", ",", "0.597386"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0675406", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.91", ",", "0.674047"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0583348", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Red", ",", ".5"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.11", ",", "0.0573324"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0328555", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.21", ",", "0.0686867"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.037404", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.31", ",", "0.094562"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.054382", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.41", ",", "0.0938591"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.050292", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.51", ",", "0.0897132"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0455834", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.61", ",", "0.128539"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0634337", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.71", ",", "0.136306"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0656726", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.81", ",", "0.180347"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0785448", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.91", ",", "0.253699"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0950139", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Purple", ",", ".5"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.09", ",", "0.467542"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0356149", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.19", ",", "0.512674"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0349405", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.29", ",", "0.575275"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.034197", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.39", ",", "0.621984"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.026727", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.49", ",", "0.676819"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0238624", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.59", ",", "0.704487"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0220144", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.69", ",", "0.747003"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0184656", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.788167"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0139775", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.89", ",", "0.814233"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0121484", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.09", ",", "0.452947"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0416762", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.19", ",", "0.502782"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0409243", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.29", ",", "0.559552"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.04278", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.39", ",", "0.618929"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0350555", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.49", ",", "0.664916"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0294758", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.59", ",", "0.71345"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0231087", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.69", ",", "0.739841"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0203134", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.772394"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.018793", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.89", ",", "0.806177"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0135045", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.09", ",", "0.314579"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0787097", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.19", ",", "0.359514"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0761455", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.29", ",", "0.390063"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0781205", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.39", ",", "0.452843"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0768475", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.49", ",", "0.487888"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0751037", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.59", ",", "0.518019"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0711282", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.69", ",", "0.597039"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0672876", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.644942"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0544734", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.89", ",", "0.688085"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0458834", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.09", ",", "0.0571124"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0312194", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.19", ",", "0.0734142"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0370664", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.29", ",", "0.0907734"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0465685", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.39", ",", "0.109875"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0513698", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.49", ",", "0.118939"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0555848", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.59", ",", "0.172753"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0762544", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.69", ",", "0.210194"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0857007", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.23927"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0821213", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.89", ",", "0.317342"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", "0.0937329", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(R\)], \
SubscriptBox[\(W\), \(I\)]]\)\>\"", ",", "LabelSize"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<1-\!\(\*SubscriptBox[\(F\), \(I\)]\)[20]\>\"", ",", 
         "LabelSize"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "TickSize"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "FigureSize"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6817295190445366`*^9, 3.6817300832713633`*^9}, {
   3.6817301526564693`*^9, 3.6817302132596693`*^9}, {3.681730798015195*^9, 
   3.681730850779053*^9}, {3.6817342234101973`*^9, 3.681734223677148*^9}, {
   3.6817343954568863`*^9, 3.6817344037791843`*^9}, {3.681734509619748*^9, 
   3.681734532765295*^9}, {3.681734605415934*^9, 3.681734605613832*^9}, {
   3.681735109118348*^9, 3.6817351487326827`*^9}, {3.681735267905764*^9, 
   3.6817352734306912`*^9}, {3.6817467241813393`*^9, 3.681746741251551*^9}, {
   3.6818203412266145`*^9, 3.6818203488812227`*^9}, {3.6818213029947886`*^9, 
   3.681821305160683*^9}, {3.6818214433870916`*^9, 3.6818214555376434`*^9}, {
   3.681821501673966*^9, 3.6818215539919786`*^9}, {3.681822065221196*^9, 
   3.681822104300579*^9}, {3.6818221972873273`*^9, 3.6818221995986724`*^9}, 
   3.6818222363506613`*^9, {3.6818223068083076`*^9, 3.681822363695831*^9}, {
   3.6818224610072937`*^9, 3.6818224791476235`*^9}, {3.681835150413785*^9, 
   3.6818351508192306`*^9}, {3.6850063619108*^9, 3.6850063702038507`*^9}, {
   3.6850080382553377`*^9, 3.6850080384962883`*^9}, {3.685008072577447*^9, 
   3.6850081137084913`*^9}, {3.685008146701858*^9, 3.6850081656702375`*^9}, {
   3.6850082521707687`*^9, 3.68500833736024*^9}, {3.685008405033207*^9, 
   3.6850085482441025`*^9}, {3.685008585539856*^9, 3.685008585696516*^9}, {
   3.68500872143332*^9, 3.6850087345262947`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.5, 1., 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.11, 0.513046}, {0.21, 0.563185}, {0.31, 0.613274}, {0.41, 
       0.651559}, {0.51, 0.694475}, {0.61, 0.714826}, {0.71, 0.745588}, {0.81,
        0.781247}, {0.91, 
       0.814127}}], {{LineBox[{{0.11, 0.5490235}, {0.11, 0.4770685}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.5490235}], 
          Offset[{-1.5, 0}, {0.11, 0.5490235}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.4770685}], 
          Offset[{-1.5, 0}, {0.11, 0.4770685}]}]}, {
        LineBox[{{0.21, 0.5991723}, {0.21, 0.5271977000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.5991723}], 
          Offset[{-1.5, 0}, {0.21, 0.5991723}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.5271977000000001}], 
          Offset[{-1.5, 0}, {0.21, 0.5271977000000001}]}]}, {
        LineBox[{{0.31, 0.6470663999999999}, {0.31, 0.5794816}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.6470663999999999}], 
          Offset[{-1.5, 0}, {0.31, 0.6470663999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.5794816}], 
          Offset[{-1.5, 0}, {0.31, 0.5794816}]}]}, {
        LineBox[{{0.41, 0.6826374}, {0.41, 0.6204806}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.6826374}], 
          Offset[{-1.5, 0}, {0.41, 0.6826374}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.6204806}], 
          Offset[{-1.5, 0}, {0.41, 0.6204806}]}]}, {
        LineBox[{{0.51, 0.7210143999999999}, {0.51, 0.6679356}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.7210143999999999}], 
          Offset[{-1.5, 0}, {0.51, 0.7210143999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.6679356}], 
          Offset[{-1.5, 0}, {0.51, 0.6679356}]}]}, {
        LineBox[{{0.61, 0.7411599}, {0.61, 0.6884920999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.7411599}], 
          Offset[{-1.5, 0}, {0.61, 0.7411599}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.6884920999999999}], 
          Offset[{-1.5, 0}, {0.61, 0.6884920999999999}]}]}, {
        LineBox[{{0.71, 0.7678339000000001}, {0.71, 0.7233421}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.7678339000000001}], 
          Offset[{-1.5, 0}, {0.71, 0.7678339000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.7233421}], 
          Offset[{-1.5, 0}, {0.71, 0.7233421}]}]}, {
        LineBox[{{0.81, 0.7985465}, {0.81, 0.7639475}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.7985465}], 
          Offset[{-1.5, 0}, {0.81, 0.7985465}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.7639475}], 
          Offset[{-1.5, 0}, {0.81, 0.7639475}]}]}, {
        LineBox[{{0.91, 0.8283666000000001}, {0.91, 0.7998874}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.8283666000000001}], 
          Offset[{-1.5, 0}, {0.91, 0.8283666000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.7998874}], 
          Offset[{-1.5, 0}, {0.91, 0.7998874}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.5, 0.5, 1.], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.11, 0.532602}, {0.21, 0.583251}, {0.31, 0.629031}, {0.41, 
       0.661419}, {0.51, 0.703267}, {0.61, 0.724778}, {0.71, 0.768755}, {0.81,
        0.800482}, {0.91, 
       0.818699}}], {{LineBox[{{0.11, 0.5577682}, {0.11, 0.5074358}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.5577682}], 
          Offset[{-1.5, 0}, {0.11, 0.5577682}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.5074358}], 
          Offset[{-1.5, 0}, {0.11, 0.5074358}]}]}, {
        LineBox[{{0.21, 0.6068623}, {0.21, 0.5596397}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.6068623}], 
          Offset[{-1.5, 0}, {0.21, 0.6068623}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.5596397}], 
          Offset[{-1.5, 0}, {0.21, 0.5596397}]}]}, {
        LineBox[{{0.31, 0.6556116}, {0.31, 0.6024504}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.6556116}], 
          Offset[{-1.5, 0}, {0.31, 0.6556116}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.6024504}], 
          Offset[{-1.5, 0}, {0.31, 0.6024504}]}]}, {
        LineBox[{{0.41, 0.6839187999999999}, {0.41, 0.6389192}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.6839187999999999}], 
          Offset[{-1.5, 0}, {0.41, 0.6839187999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.6389192}], 
          Offset[{-1.5, 0}, {0.41, 0.6389192}]}]}, {
        LineBox[{{0.51, 0.7237911}, {0.51, 0.6827428999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.7237911}], 
          Offset[{-1.5, 0}, {0.51, 0.7237911}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.6827428999999999}], 
          Offset[{-1.5, 0}, {0.51, 0.6827428999999999}]}]}, {
        LineBox[{{0.61, 0.7447555}, {0.61, 0.7048005}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.7447555}], 
          Offset[{-1.5, 0}, {0.61, 0.7447555}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.7048005}], 
          Offset[{-1.5, 0}, {0.61, 0.7048005}]}]}, {
        LineBox[{{0.71, 0.7845127}, {0.71, 0.7529973}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.7845127}], 
          Offset[{-1.5, 0}, {0.71, 0.7845127}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.7529973}], 
          Offset[{-1.5, 0}, {0.71, 0.7529973}]}]}, {
        LineBox[{{0.81, 0.8121981}, {0.81, 0.7887659}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.8121981}], 
          Offset[{-1.5, 0}, {0.81, 0.8121981}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.7887659}], 
          Offset[{-1.5, 0}, {0.81, 0.7887659}]}]}, {
        LineBox[{{0.91, 0.8296781999999999}, {0.91, 0.8077198}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.8296781999999999}], 
          Offset[{-1.5, 0}, {0.91, 0.8296781999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.8077198}], 
          Offset[{-1.5, 0}, {0.91, 0.8077198}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[1., 0.5, 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.11, 0.320403}, {0.21, 0.361823}, {0.31, 0.399748}, {0.41, 
       0.444715}, {0.51, 0.488809}, {0.61, 0.533417}, {0.71, 0.559548}, {0.81,
        0.597386}, {0.91, 
       0.674047}}], {{LineBox[{{0.11, 0.4045123}, {0.11, 0.2362937}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.4045123}], 
          Offset[{-1.5, 0}, {0.11, 0.4045123}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.2362937}], 
          Offset[{-1.5, 0}, {0.11, 0.2362937}]}]}, {
        LineBox[{{0.21, 0.45366}, {0.21, 0.269986}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.45366}], 
          Offset[{-1.5, 0}, {0.21, 0.45366}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.269986}], 
          Offset[{-1.5, 0}, {0.21, 0.269986}]}]}, {
        LineBox[{{0.31, 0.4908318}, {0.31, 0.3086642}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.4908318}], 
          Offset[{-1.5, 0}, {0.31, 0.4908318}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.3086642}], 
          Offset[{-1.5, 0}, {0.31, 0.3086642}]}]}, {
        LineBox[{{0.41, 0.5382521}, {0.41, 0.35117790000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.5382521}], 
          Offset[{-1.5, 0}, {0.41, 0.5382521}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.35117790000000004`}], 
          Offset[{-1.5, 0}, {0.41, 0.35117790000000004`}]}]}, {
        LineBox[{{0.51, 0.5816654}, {0.51, 0.3959526}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.5816654}], 
          Offset[{-1.5, 0}, {0.51, 0.5816654}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.3959526}], 
          Offset[{-1.5, 0}, {0.51, 0.3959526}]}]}, {
        LineBox[{{0.61, 0.6187797}, {0.61, 0.4480543}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.6187797}], 
          Offset[{-1.5, 0}, {0.61, 0.6187797}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.4480543}], 
          Offset[{-1.5, 0}, {0.61, 0.4480543}]}]}, {
        LineBox[{{0.71, 0.6354639000000001}, {0.71, 0.48363210000000006`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.6354639000000001}], 
          Offset[{-1.5, 0}, {0.71, 0.6354639000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.48363210000000006`}], 
          Offset[{-1.5, 0}, {0.71, 0.48363210000000006`}]}]}, {
        LineBox[{{0.81, 0.6649266}, {0.81, 0.5298453999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.6649266}], 
          Offset[{-1.5, 0}, {0.81, 0.6649266}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.5298453999999999}], 
          Offset[{-1.5, 0}, {0.81, 0.5298453999999999}]}]}, {
        LineBox[{{0.91, 0.7323818}, {0.91, 0.6157121999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.7323818}], 
          Offset[{-1.5, 0}, {0.91, 0.7323818}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.6157121999999999}], 
          Offset[{-1.5, 0}, {0.91, 
           0.6157121999999999}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.75, 0.5, 0.75], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.11, 0.0573324}, {0.21, 0.0686867}, {0.31, 0.094562}, {0.41,
        0.0938591}, {0.51, 0.0897132}, {0.61, 0.128539}, {0.71, 0.136306}, {
       0.81, 0.180347}, {0.91, 
       0.253699}}], {{
        LineBox[{{0.11, 0.0901879}, {0.11, 0.024476899999999996`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.0901879}], 
          Offset[{-1.5, 0}, {0.11, 0.0901879}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.11, 0.024476899999999996`}], 
          Offset[{-1.5, 0}, {0.11, 0.024476899999999996`}]}]}, {
        LineBox[{{0.21, 0.10609070000000001`}, {0.21, 
         0.031282700000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.10609070000000001`}], 
          Offset[{-1.5, 0}, {0.21, 0.10609070000000001`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.21, 0.031282700000000004`}], 
          Offset[{-1.5, 0}, {0.21, 0.031282700000000004`}]}]}, {
        LineBox[{{0.31, 0.148944}, {0.31, 0.040179999999999993`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.148944}], 
          Offset[{-1.5, 0}, {0.31, 0.148944}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.31, 0.040179999999999993`}], 
          Offset[{-1.5, 0}, {0.31, 0.040179999999999993`}]}]}, {
        LineBox[{{0.41, 0.1441511}, {0.41, 0.0435671}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.1441511}], 
          Offset[{-1.5, 0}, {0.41, 0.1441511}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.41, 0.0435671}], 
          Offset[{-1.5, 0}, {0.41, 0.0435671}]}]}, {
        LineBox[{{0.51, 0.13529660000000002`}, {0.51, 
         0.044129800000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.13529660000000002`}], 
          Offset[{-1.5, 0}, {0.51, 0.13529660000000002`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.51, 0.044129800000000004`}], 
          Offset[{-1.5, 0}, {0.51, 0.044129800000000004`}]}]}, {
        LineBox[{{0.61, 0.1919727}, {0.61, 0.06510529999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.1919727}], 
          Offset[{-1.5, 0}, {0.61, 0.1919727}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.61, 0.06510529999999999}], 
          Offset[{-1.5, 0}, {0.61, 0.06510529999999999}]}]}, {
        LineBox[{{0.71, 0.2019786}, {0.71, 0.07063340000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.2019786}], 
          Offset[{-1.5, 0}, {0.71, 0.2019786}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.71, 0.07063340000000001}], 
          Offset[{-1.5, 0}, {0.71, 0.07063340000000001}]}]}, {
        LineBox[{{0.81, 0.2588918}, {0.81, 0.10180220000000001`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.2588918}], 
          Offset[{-1.5, 0}, {0.81, 0.2588918}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.81, 0.10180220000000001`}], 
          Offset[{-1.5, 0}, {0.81, 0.10180220000000001`}]}]}, {
        LineBox[{{0.91, 0.3487129}, {0.91, 0.15868510000000002`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.3487129}], 
          Offset[{-1.5, 0}, {0.91, 0.3487129}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.91, 0.15868510000000002`}], 
          Offset[{-1.5, 0}, {0.91, 
           0.15868510000000002`}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.09, 0.467542}, {0.19, 0.512674}, {0.29, 0.575275}, {0.39, 
       0.621984}, {0.49, 0.676819}, {0.59, 0.704487}, {0.69, 0.747003}, {0.79,
        0.788167}, {0.89, 
       0.814233}}], {{LineBox[{{0.09, 0.5031569}, {0.09, 0.4319271}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.5031569}], 
          Offset[{-1.5, 0}, {0.09, 0.5031569}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.4319271}], 
          Offset[{-1.5, 0}, {0.09, 0.4319271}]}]}, {
        LineBox[{{0.19, 0.5476145}, {0.19, 0.4777335}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.5476145}], 
          Offset[{-1.5, 0}, {0.19, 0.5476145}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.4777335}], 
          Offset[{-1.5, 0}, {0.19, 0.4777335}]}]}, {
        LineBox[{{0.29, 0.609472}, {0.29, 0.541078}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.609472}], 
          Offset[{-1.5, 0}, {0.29, 0.609472}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.541078}], 
          Offset[{-1.5, 0}, {0.29, 0.541078}]}]}, {
        LineBox[{{0.39, 0.648711}, {0.39, 0.5952569999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.648711}], 
          Offset[{-1.5, 0}, {0.39, 0.648711}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.5952569999999999}], 
          Offset[{-1.5, 0}, {0.39, 0.5952569999999999}]}]}, {
        LineBox[{{0.49, 0.7006813999999999}, {0.49, 0.6529566}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.7006813999999999}], 
          Offset[{-1.5, 0}, {0.49, 0.7006813999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.6529566}], 
          Offset[{-1.5, 0}, {0.49, 0.6529566}]}]}, {
        LineBox[{{0.59, 0.7265014}, {0.59, 0.6824726}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.7265014}], 
          Offset[{-1.5, 0}, {0.59, 0.7265014}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.6824726}], 
          Offset[{-1.5, 0}, {0.59, 0.6824726}]}]}, {
        LineBox[{{0.69, 0.7654685999999999}, {0.69, 0.7285374}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.7654685999999999}], 
          Offset[{-1.5, 0}, {0.69, 0.7654685999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.7285374}], 
          Offset[{-1.5, 0}, {0.69, 0.7285374}]}]}, {
        LineBox[{{0.79, 0.8021444999999999}, {0.79, 0.7741895}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.8021444999999999}], 
          Offset[{-1.5, 0}, {0.79, 0.8021444999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.7741895}], 
          Offset[{-1.5, 0}, {0.79, 0.7741895}]}]}, {
        LineBox[{{0.89, 0.8263813999999999}, {0.89, 0.8020846}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.8263813999999999}], 
          Offset[{-1.5, 0}, {0.89, 0.8263813999999999}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.8020846}], 
          Offset[{-1.5, 0}, {0.89, 0.8020846}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.09, 0.452947}, {0.19, 0.502782}, {0.29, 0.559552}, {0.39, 
       0.618929}, {0.49, 0.664916}, {0.59, 0.71345}, {0.69, 0.739841}, {0.79, 
       0.772394}, {0.89, 
       0.806177}}], {{LineBox[{{0.09, 0.4946232}, {0.09, 0.4112708}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.4946232}], 
          Offset[{-1.5, 0}, {0.09, 0.4946232}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.4112708}], 
          Offset[{-1.5, 0}, {0.09, 0.4112708}]}]}, {
        LineBox[{{0.19, 0.5437063}, {0.19, 0.4618576999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.5437063}], 
          Offset[{-1.5, 0}, {0.19, 0.5437063}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.4618576999999999}], 
          Offset[{-1.5, 0}, {0.19, 0.4618576999999999}]}]}, {
        LineBox[{{0.29, 0.6023320000000001}, {0.29, 0.516772}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.6023320000000001}], 
          Offset[{-1.5, 0}, {0.29, 0.6023320000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.516772}], 
          Offset[{-1.5, 0}, {0.29, 0.516772}]}]}, {
        LineBox[{{0.39, 0.6539845}, {0.39, 0.5838734999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.6539845}], 
          Offset[{-1.5, 0}, {0.39, 0.6539845}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.5838734999999999}], 
          Offset[{-1.5, 0}, {0.39, 0.5838734999999999}]}]}, {
        LineBox[{{0.49, 0.6943918}, {0.49, 0.6354401999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.6943918}], 
          Offset[{-1.5, 0}, {0.49, 0.6943918}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.6354401999999999}], 
          Offset[{-1.5, 0}, {0.49, 0.6354401999999999}]}]}, {
        LineBox[{{0.59, 0.7365587}, {0.59, 0.6903413}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.7365587}], 
          Offset[{-1.5, 0}, {0.59, 0.7365587}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.6903413}], 
          Offset[{-1.5, 0}, {0.59, 0.6903413}]}]}, {
        LineBox[{{0.69, 0.7601544}, {0.69, 0.7195275999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.7601544}], 
          Offset[{-1.5, 0}, {0.69, 0.7601544}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.7195275999999999}], 
          Offset[{-1.5, 0}, {0.69, 0.7195275999999999}]}]}, {
        LineBox[{{0.79, 0.791187}, {0.79, 0.7536010000000001}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.791187}], 
          Offset[{-1.5, 0}, {0.79, 0.791187}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.7536010000000001}], 
          Offset[{-1.5, 0}, {0.79, 0.7536010000000001}]}]}, {
        LineBox[{{0.89, 0.8196815000000001}, {0.89, 0.7926725}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.8196815000000001}], 
          Offset[{-1.5, 0}, {0.89, 0.8196815000000001}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.7926725}], 
          Offset[{-1.5, 0}, {0.89, 0.7926725}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.09, 0.314579}, {0.19, 0.359514}, {0.29, 0.390063}, {0.39, 
       0.452843}, {0.49, 0.487888}, {0.59, 0.518019}, {0.69, 0.597039}, {0.79,
        0.644942}, {0.89, 
       0.688085}}], {{LineBox[{{0.09, 0.3932887}, {0.09, 0.2358693}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.3932887}], 
          Offset[{-1.5, 0}, {0.09, 0.3932887}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.2358693}], 
          Offset[{-1.5, 0}, {0.09, 0.2358693}]}]}, {
        LineBox[{{0.19, 0.4356595}, {0.19, 0.2833685}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.4356595}], 
          Offset[{-1.5, 0}, {0.19, 0.4356595}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.2833685}], 
          Offset[{-1.5, 0}, {0.19, 0.2833685}]}]}, {
        LineBox[{{0.29, 0.4681835}, {0.29, 0.3119425}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.4681835}], 
          Offset[{-1.5, 0}, {0.29, 0.4681835}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.3119425}], 
          Offset[{-1.5, 0}, {0.29, 0.3119425}]}]}, {
        LineBox[{{0.39, 0.5296905}, {0.39, 0.3759955}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.5296905}], 
          Offset[{-1.5, 0}, {0.39, 0.5296905}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.3759955}], 
          Offset[{-1.5, 0}, {0.39, 0.3759955}]}]}, {
        LineBox[{{0.49, 0.5629917}, {0.49, 0.4127843}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.5629917}], 
          Offset[{-1.5, 0}, {0.49, 0.5629917}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.4127843}], 
          Offset[{-1.5, 0}, {0.49, 0.4127843}]}]}, {
        LineBox[{{0.59, 0.5891472}, {0.59, 0.44689080000000003`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.5891472}], 
          Offset[{-1.5, 0}, {0.59, 0.5891472}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.44689080000000003`}], 
          Offset[{-1.5, 0}, {0.59, 0.44689080000000003`}]}]}, {
        LineBox[{{0.69, 0.6643266}, {0.69, 0.5297514}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.6643266}], 
          Offset[{-1.5, 0}, {0.69, 0.6643266}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.5297514}], 
          Offset[{-1.5, 0}, {0.69, 0.5297514}]}]}, {
        LineBox[{{0.79, 0.6994154}, {0.79, 0.5904686}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.6994154}], 
          Offset[{-1.5, 0}, {0.79, 0.6994154}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.5904686}], 
          Offset[{-1.5, 0}, {0.79, 0.5904686}]}]}, {
        LineBox[{{0.89, 0.7339684}, {0.89, 0.6422015999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.7339684}], 
          Offset[{-1.5, 0}, {0.89, 0.7339684}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.6422015999999999}], 
          Offset[{-1.5, 0}, {0.89, 
           0.6422015999999999}]}]}}}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.09, 0.0571124}, {0.19, 0.0734142}, {0.29, 0.0907734}, {
       0.39, 0.109875}, {0.49, 0.118939}, {0.59, 0.172753}, {0.69, 
       0.210194}, {0.79, 0.23927}, {0.89, 
       0.317342}}], {{LineBox[{{0.09, 0.0883318}, {0.09, 0.025893}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.0883318}], 
          Offset[{-1.5, 0}, {0.09, 0.0883318}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.09, 0.025893}], 
          Offset[{-1.5, 0}, {0.09, 0.025893}]}]}, {
        LineBox[{{0.19, 0.1104806}, {0.19, 0.0363478}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.1104806}], 
          Offset[{-1.5, 0}, {0.19, 0.1104806}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.19, 0.0363478}], 
          Offset[{-1.5, 0}, {0.19, 0.0363478}]}]}, {
        LineBox[{{0.29, 0.13734190000000002`}, {0.29, 
         0.044204900000000005`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.13734190000000002`}], 
          Offset[{-1.5, 0}, {0.29, 0.13734190000000002`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.29, 0.044204900000000005`}], 
          Offset[{-1.5, 0}, {0.29, 0.044204900000000005`}]}]}, {
        LineBox[{{0.39, 0.1612448}, {0.39, 0.0585052}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.1612448}], 
          Offset[{-1.5, 0}, {0.39, 0.1612448}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.39, 0.0585052}], 
          Offset[{-1.5, 0}, {0.39, 0.0585052}]}]}, {
        LineBox[{{0.49, 0.1745238}, {0.49, 0.0633542}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.1745238}], 
          Offset[{-1.5, 0}, {0.49, 0.1745238}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.49, 0.0633542}], 
          Offset[{-1.5, 0}, {0.49, 0.0633542}]}]}, {
        LineBox[{{0.59, 0.2490074}, {0.59, 0.09649859999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.2490074}], 
          Offset[{-1.5, 0}, {0.59, 0.2490074}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.59, 0.09649859999999999}], 
          Offset[{-1.5, 0}, {0.59, 0.09649859999999999}]}]}, {
        LineBox[{{0.69, 0.2958947}, {0.69, 0.12449329999999999`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.2958947}], 
          Offset[{-1.5, 0}, {0.69, 0.2958947}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.69, 0.12449329999999999`}], 
          Offset[{-1.5, 0}, {0.69, 0.12449329999999999`}]}]}, {
        LineBox[{{0.79, 0.3213913}, {0.79, 0.15714870000000003`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.3213913}], 
          Offset[{-1.5, 0}, {0.79, 0.3213913}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.79, 0.15714870000000003`}], 
          Offset[{-1.5, 0}, {0.79, 0.15714870000000003`}]}]}, {
        LineBox[{{0.89, 0.4110749}, {0.89, 0.2236091}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.4110749}], 
          Offset[{-1.5, 0}, {0.89, 0.4110749}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.89, 0.2236091}], 
          Offset[{-1.5, 0}, {0.89, 0.2236091}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(R\\)], \
SubscriptBox[\\(W\\), \\(I\\)]]\\)\"", 25, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"1-\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\)[20]\"", 25, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[FontSize -> 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->650,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{0, 1}]], "Output",
 CellChangeTimes->{
  3.6818213194083443`*^9, 3.681821456137844*^9, {3.6818215318185697`*^9, 
   3.6818215549617743`*^9}, 3.681821593668068*^9, {3.68182208536808*^9, 
   3.681822104901782*^9}, 3.6818222369947557`*^9, {3.681822310113203*^9, 
   3.681822364371378*^9}, {3.681822463085864*^9, 3.6818224835658593`*^9}, 
   3.681835151926756*^9, 3.685007932675351*^9, 3.685008114679497*^9, {
   3.685008405564474*^9, 3.685008426826298*^9}, 3.685008550234658*^9, 
   3.685008586522069*^9, 3.6850087352669888`*^9, 3.685008951714151*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"imagedir", "<>", "\"\<SimulationHaploidvsDiploid.eps\>\""}], ",",
     "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6818225606026554`*^9, 3.6818225663359127`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1016},
WindowMargins->{{0, Automatic}, {0, 37}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 309, 5, 84, "Title"],
Cell[892, 29, 172, 2, 46, "Subtitle"],
Cell[1067, 33, 121, 1, 28, "Subsubtitle"],
Cell[1191, 36, 117, 1, 28, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1333, 41, 151, 2, 59, "Section"],
Cell[1487, 45, 2233, 55, 308, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3757, 105, 163, 2, 59, "Section"],
Cell[3923, 109, 274, 5, 29, "Text"],
Cell[4200, 116, 2046, 33, 29, "Input"],
Cell[6249, 151, 557, 17, 50, "Input"],
Cell[6809, 170, 7497, 173, 383, "Input"],
Cell[CellGroupData[{
Cell[14331, 347, 5391, 124, 503, "Input"],
Cell[19725, 473, 15002, 308, 394, "Output"]
}, Open  ]],
Cell[34742, 784, 373, 9, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35152, 798, 106, 1, 59, "Section"],
Cell[CellGroupData[{
Cell[35283, 803, 188, 2, 40, "Subsection"],
Cell[35474, 807, 415, 12, 28, "Input"],
Cell[35892, 821, 243, 4, 17, "Text"],
Cell[36138, 827, 2410, 76, 51, "Input"],
Cell[38551, 905, 173, 4, 17, "Text"],
Cell[38727, 911, 895, 24, 28, "Input"],
Cell[39625, 937, 633, 16, 52, "Input"],
Cell[40261, 955, 128, 1, 17, "Text"],
Cell[40392, 958, 1871, 53, 64, "Input"],
Cell[CellGroupData[{
Cell[42288, 1015, 971, 26, 77, "Input"],
Cell[43262, 1043, 28946, 487, 137, "Output"]
}, Open  ]],
Cell[72223, 1533, 120, 1, 17, "Text"],
Cell[CellGroupData[{
Cell[72368, 1538, 542, 17, 36, "Input"],
Cell[72913, 1557, 288, 8, 18, "Output"]
}, Open  ]],
Cell[73216, 1568, 122, 1, 17, "Text"],
Cell[CellGroupData[{
Cell[73363, 1573, 1344, 39, 44, "Input"],
Cell[74710, 1614, 430, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75177, 1633, 854, 27, 45, "Input"],
Cell[76034, 1662, 923, 28, 30, "Output"]
}, Open  ]],
Cell[76972, 1693, 122, 1, 17, "Text"],
Cell[CellGroupData[{
Cell[77119, 1698, 1308, 38, 45, "Input"],
Cell[78430, 1738, 744, 22, 28, "Output"]
}, Open  ]],
Cell[79189, 1763, 124, 1, 17, "Text"],
Cell[CellGroupData[{
Cell[79338, 1768, 1692, 49, 72, "Input"],
Cell[81033, 1819, 1419, 43, 27, "Output"]
}, Open  ]],
Cell[82467, 1865, 189, 4, 15, "Text"],
Cell[CellGroupData[{
Cell[82681, 1873, 648, 19, 36, "Input"],
Cell[83332, 1894, 413, 13, 24, "Output"]
}, Open  ]],
Cell[83760, 1910, 499, 16, 19, "Text"],
Cell[CellGroupData[{
Cell[84284, 1930, 571, 18, 32, "Input"],
Cell[84858, 1950, 406, 12, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85301, 1967, 573, 17, 21, "Subsubsection"],
Cell[CellGroupData[{
Cell[85899, 1988, 721, 22, 33, "Input"],
Cell[86623, 2012, 935, 28, 40, "Output"]
}, Open  ]],
Cell[87573, 2043, 1107, 32, 49, "Input"],
Cell[88683, 2077, 2662, 78, 144, "Input"],
Cell[CellGroupData[{
Cell[91370, 2159, 531, 19, 34, "Input"],
Cell[91904, 2180, 392, 13, 19, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92333, 2198, 704, 23, 34, "Input"],
Cell[93040, 2223, 108533, 1776, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201610, 4004, 532, 15, 34, "Input"],
Cell[202145, 4021, 124944, 2045, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327126, 6071, 703, 20, 34, "Input"],
Cell[327832, 6093, 102701, 1684, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430570, 7782, 1998, 54, 105, "Input"],
Cell[432571, 7838, 2315, 47, 186, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434935, 7891, 178, 2, 18, "Subsubsection"],
Cell[435116, 7895, 3615, 100, 129, "Input"],
Cell[438734, 7997, 736, 17, 22, "Input"],
Cell[439473, 8016, 4755, 122, 173, "Input"],
Cell[444231, 8140, 18580, 318, 123, "Input"],
Cell[462814, 8460, 481, 13, 22, "Input"],
Cell[CellGroupData[{
Cell[463320, 8477, 4080, 114, 162, "Input"],
Cell[467403, 8593, 20276, 346, 101, "Output"]
}, Open  ]],
Cell[487694, 8942, 272, 5, 13, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[488015, 8953, 112, 1, 33, "Subsection"],
Cell[488130, 8956, 780, 23, 57, "Input"],
Cell[CellGroupData[{
Cell[488935, 8983, 2956, 90, 185, "Input"],
Cell[491894, 9075, 198, 4, 57, "Output"],
Cell[492095, 9081, 715, 20, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492847, 9106, 418, 13, 76, "Input"],
Cell[493268, 9121, 297, 8, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493602, 9134, 916, 26, 53, "Input"],
Cell[494521, 9162, 693, 21, 61, "Output"]
}, Open  ]],
Cell[495229, 9186, 167, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[495421, 9195, 292, 9, 29, "Input"],
Cell[495716, 9206, 506, 15, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496259, 9226, 1215, 35, 72, "Input"],
Cell[497477, 9263, 101, 1, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497615, 9269, 1443, 44, 63, "Input"],
Cell[499061, 9315, 158, 3, 25, "Output"]
}, Open  ]],
Cell[499234, 9321, 2643, 80, 111, "Text"],
Cell[CellGroupData[{
Cell[501902, 9405, 3715, 88, 370, "Input"],
Cell[505620, 9495, 6362, 118, 354, "Output"]
}, Open  ]],
Cell[511997, 9616, 287, 7, 32, "Input"],
Cell[512287, 9625, 204, 5, 33, "Text"],
Cell[512494, 9632, 406, 12, 43, "Input"],
Cell[CellGroupData[{
Cell[512925, 9648, 1254, 37, 63, "Input"],
Cell[514182, 9687, 3068, 60, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517287, 9752, 466, 14, 54, "Input"],
Cell[517756, 9768, 204, 6, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517997, 9779, 236, 6, 54, "Input"],
Cell[518236, 9787, 136, 3, 25, "Output"]
}, Open  ]],
Cell[518387, 9793, 94, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[518506, 9798, 850, 29, 77, "Input"],
Cell[519359, 9829, 1211, 38, 47, "Output"]
}, Open  ]],
Cell[520585, 9870, 153, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[520763, 9878, 586, 17, 58, "Input"],
Cell[521352, 9897, 5147, 95, 198, "Output"]
}, Open  ]],
Cell[526514, 9995, 351, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[526890, 10006, 1073, 36, 95, "Input"],
Cell[527966, 10044, 1417, 46, 63, "Output"]
}, Open  ]],
Cell[529398, 10093, 159, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[529582, 10100, 589, 17, 58, "Input"],
Cell[530174, 10119, 5180, 96, 198, "Output"]
}, Open  ]],
Cell[535369, 10218, 152, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[535546, 10225, 359, 12, 54, "Input"],
Cell[535908, 10239, 661, 20, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536606, 10264, 554, 19, 39, "Input"],
Cell[537163, 10285, 1372, 43, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538572, 10333, 616, 17, 40, "Input"],
Cell[539191, 10352, 4720, 88, 198, "Output"]
}, Open  ]],
Cell[543926, 10443, 147, 4, 25, "Text"],
Cell[544076, 10449, 342, 12, 54, "Input"],
Cell[CellGroupData[{
Cell[544443, 10465, 746, 25, 45, "Input"],
Cell[545192, 10492, 1614, 51, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546843, 10548, 547, 15, 40, "Input"],
Cell[547393, 10565, 5748, 105, 198, "Output"]
}, Open  ]],
Cell[553156, 10673, 2202, 64, 127, "Text"],
Cell[CellGroupData[{
Cell[555383, 10741, 674, 22, 65, "Input"],
Cell[556060, 10765, 345, 10, 37, "Output"]
}, Open  ]],
Cell[556420, 10778, 1279, 37, 60, "Text"],
Cell[CellGroupData[{
Cell[557724, 10819, 590, 20, 52, "Input"],
Cell[558317, 10841, 94, 1, 25, "Output"]
}, Open  ]],
Cell[558426, 10845, 768, 23, 46, "Text"],
Cell[CellGroupData[{
Cell[559219, 10872, 169, 3, 40, "Input"],
Cell[559391, 10877, 144, 3, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559572, 10885, 8132, 195, 1104, "Input"],
Cell[567707, 11082, 34324, 657, 354, "Output"]
}, Open  ]],
Cell[602046, 11742, 233, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[602304, 11752, 7088, 178, 1100, "Input"],
Cell[609395, 11932, 31584, 611, 354, "Output"]
}, Open  ]],
Cell[640994, 12546, 282, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[641301, 12557, 2733, 66, 269, "Input"],
Cell[644037, 12625, 98598, 1617, 382, "Output"]
}, Open  ]],
Cell[742650, 14245, 232, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[742907, 14255, 663, 21, 69, "Input"],
Cell[743573, 14278, 614, 20, 54, "Output"]
}, Open  ]],
Cell[744202, 14301, 152, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[744379, 14309, 977, 29, 69, "Input"],
Cell[745359, 14340, 674, 22, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746070, 14367, 423, 12, 40, "Input"],
Cell[746496, 14381, 13378, 233, 186, "Output"]
}, Open  ]],
Cell[759889, 14617, 223, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[760137, 14625, 1228, 35, 126, "Input"],
Cell[761368, 14662, 935, 30, 59, "Output"]
}, Open  ]],
Cell[762318, 14695, 145, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[762488, 14700, 875, 28, 74, "Input"],
Cell[763366, 14730, 755, 26, 60, "Output"]
}, Open  ]],
Cell[764136, 14759, 128, 1, 25, "Text"],
Cell[764267, 14762, 1049, 35, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765353, 14802, 163, 2, 40, "Subsection"],
Cell[765519, 14806, 2181, 63, 154, "Input"],
Cell[CellGroupData[{
Cell[767725, 14873, 362, 6, 114, "Input"],
Cell[768090, 14881, 50523, 845, 198, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[818662, 15732, 115, 1, 40, "Subsection"],
Cell[CellGroupData[{
Cell[818802, 15737, 180, 2, 18, "Subsubsection"],
Cell[818985, 15741, 192, 4, 26, "Text"],
Cell[819180, 15747, 1589, 37, 46, "Input"],
Cell[820772, 15786, 626, 10, 16, "Input"],
Cell[821401, 15798, 314, 6, 16, "Input"],
Cell[821718, 15806, 2437, 59, 116, "Input"],
Cell[824158, 15867, 353, 10, 38, "Input"],
Cell[824514, 15879, 1370, 20, 25, "Input"],
Cell[825887, 15901, 228, 6, 25, "Input"],
Cell[826118, 15909, 3131, 62, 105, "Input"],
Cell[CellGroupData[{
Cell[829274, 15975, 1485, 41, 90, "Input"],
Cell[830762, 16018, 21803, 497, 118, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[852626, 16522, 161, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[852812, 16528, 111, 1, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[852948, 16533, 527, 17, 41, "Input"],
Cell[853478, 16552, 337, 8, 27, "Output"]
}, Open  ]],
Cell[853830, 16563, 697, 12, 76, "Text"],
Cell[CellGroupData[{
Cell[854552, 16579, 179, 4, 26, "Input"],
Cell[854734, 16585, 305, 9, 27, "Output"]
}, Open  ]],
Cell[855054, 16597, 372, 6, 42, "Text"],
Cell[CellGroupData[{
Cell[855451, 16607, 694, 20, 41, "Input"],
Cell[856148, 16629, 420, 12, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856605, 16646, 278, 6, 40, "Input"],
Cell[856886, 16654, 356, 10, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857279, 16669, 346, 10, 41, "Input"],
Cell[857628, 16681, 520, 10, 17, "Message"],
Cell[858151, 16693, 487, 15, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[858675, 16713, 817, 24, 55, "Input"],
Cell[859495, 16739, 3263, 60, 197, "Output"]
}, Open  ]],
Cell[862773, 16802, 116, 1, 25, "Text"],
Cell[862892, 16805, 467, 14, 43, "Input"],
Cell[863362, 16821, 271, 5, 25, "Text"],
Cell[863636, 16828, 214, 6, 26, "Input"],
Cell[863853, 16836, 169, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[864047, 16844, 368, 10, 40, "Input"],
Cell[864418, 16856, 518, 16, 41, "Output"]
}, Open  ]],
Cell[864951, 16875, 194, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[865170, 16881, 665, 20, 41, "Input"],
Cell[865838, 16903, 334, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[866209, 16917, 179, 4, 26, "Input"],
Cell[866391, 16923, 431, 13, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[866859, 16941, 1233, 32, 41, "Input"],
Cell[868095, 16975, 516, 11, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[868648, 16991, 391, 8, 40, "Input"],
Cell[869042, 17001, 445, 10, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869524, 17016, 941, 28, 55, "Input"],
Cell[870468, 17046, 663, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871168, 17071, 740, 21, 47, "Input"],
Cell[871911, 17094, 668, 20, 30, "Output"]
}, Open  ]],
Cell[872594, 17117, 252, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[872871, 17126, 704, 21, 40, "Input"],
Cell[873578, 17149, 193, 3, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873808, 17157, 5548, 114, 758, "Input"],
Cell[879359, 17273, 18253, 370, 354, "Output"]
}, Open  ]],
Cell[897627, 17646, 238, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[897890, 17656, 4257, 101, 759, "Input"],
Cell[902150, 17759, 34370, 640, 354, "Output"]
}, Open  ]],
Cell[936535, 18402, 238, 6, 40, "Input"],
Cell[936776, 18410, 96, 1, 26, "Input"],
Cell[CellGroupData[{
Cell[936897, 18415, 327, 9, 26, "Input"],
Cell[937227, 18426, 114, 1, 25, "Output"]
}, Open  ]],
Cell[937356, 18430, 5807, 109, 193, "Input"],
Cell[943166, 18541, 560, 18, 50, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943775, 18565, 169, 2, 40, "Subsection"],
Cell[CellGroupData[{
Cell[943969, 18571, 329, 9, 26, "Input"],
Cell[944301, 18582, 242, 6, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944580, 18593, 960, 30, 60, "Input"],
Cell[945543, 18625, 933, 30, 59, "Output"]
}, Open  ]],
Cell[946491, 18658, 3903, 101, 268, "Input"],
Cell[CellGroupData[{
Cell[950419, 18763, 687, 11, 26, "Input"],
Cell[951109, 18776, 11517, 201, 198, "Output"]
}, Open  ]],
Cell[962641, 18980, 1470, 42, 83, "Input"],
Cell[CellGroupData[{
Cell[964136, 19026, 2132, 61, 72, "Input"],
Cell[966271, 19089, 415, 8, 17, "Message"],
Cell[966689, 19099, 2109, 61, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[968859, 19167, 163, 2, 54, "Section"],
Cell[969025, 19171, 98, 1, 25, "Text"],
Cell[969126, 19174, 907, 26, 70, "Input"],
Cell[CellGroupData[{
Cell[970058, 19204, 1609, 42, 83, "Input"],
Cell[971670, 19248, 4011, 76, 205, "Output"]
}, Open  ]],
Cell[975696, 19327, 103, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[975824, 19332, 644, 19, 61, "Input"],
Cell[976471, 19353, 2716, 55, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979224, 19413, 15877, 380, 1474, "Input"],
Cell[995104, 19795, 78915, 1405, 354, "Output"]
}, Open  ]],
Cell[1074034, 21203, 230, 6, 40, "Input"],
Cell[1074267, 21211, 1290, 37, 103, "Input"],
Cell[1075560, 21250, 117, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[1075702, 21255, 3516, 95, 248, "Input"],
Cell[1079221, 21352, 6278, 115, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085536, 21472, 3714, 98, 248, "Input"],
Cell[1089253, 21572, 210, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089500, 21581, 376, 11, 38, "Input"],
Cell[1089879, 21594, 114, 1, 25, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090030, 21600, 9266, 223, 1104, "Input"],
Cell[1099299, 21825, 35626, 681, 354, "Output"]
}, Open  ]],
Cell[1134940, 22509, 207, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[1135172, 22519, 1063, 34, 63, "Input"],
Cell[1136238, 22555, 864, 26, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137139, 22586, 1209, 36, 100, "Input"],
Cell[1138351, 22624, 1426, 43, 81, "Output"]
}, Open  ]],
Cell[1139792, 22670, 1974, 55, 141, "Input"],
Cell[CellGroupData[{
Cell[1141791, 22729, 140, 3, 24, "Input"],
Cell[1141934, 22734, 92, 1, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142063, 22740, 314, 8, 38, "Input"],
Cell[1142380, 22750, 7776, 140, 181, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150205, 22896, 204, 3, 56, "Section"],
Cell[CellGroupData[{
Cell[1150434, 22903, 15259, 392, 1212, "Input"],
Cell[1165696, 23297, 20358, 416, 354, "Output"]
}, Open  ]],
Cell[1186069, 23716, 227, 6, 38, "Input"],
Cell[CellGroupData[{
Cell[1186321, 23726, 14568, 393, 1166, "Input"],
Cell[1200892, 24121, 19256, 404, 386, "Output"]
}, Open  ]],
Cell[1220163, 24528, 226, 6, 38, "Input"],
Cell[CellGroupData[{
Cell[1220414, 24538, 4150, 100, 396, "Input"],
Cell[1224567, 24640, 13749, 299, 354, "Output"]
}, Open  ]],
Cell[1238331, 24942, 226, 6, 38, "Input"],
Cell[1238560, 24950, 485, 14, 38, "Input"],
Cell[CellGroupData[{
Cell[1239070, 24968, 2565, 74, 231, "Input"],
Cell[1241638, 25044, 4148, 94, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245823, 25143, 23984, 633, 1889, "Input"],
Cell[1269810, 25778, 26576, 588, 386, "Output"]
}, Open  ]],
Cell[1296401, 26369, 246, 6, 38, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

