(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    116277,       2590]
NotebookOptionsPosition[    114582,       2534]
NotebookOutlinePosition[    114917,       2549]
CellTagsIndexPosition[    114874,       2546]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Make absorbtion matrices", "Title",
 CellChangeTimes->{{3.743684918296712*^9, 3.743684921185926*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Make", " ", "a", " ", "list", " ", "of", " ", "initial", " ", "conditions",
    " ", "you", " ", "want"}], "*)"}]], "Input",
 CellChangeTimes->{{3.743620293231697*^9, 3.743620313885133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat2elem", "[", 
   RowBox[{"AB_", ",", "Ab_", ",", "aB_", ",", "ab_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", "ab", ")"}], "*", "n", "*", "n", "*", "n"}], "+", 
   RowBox[{
    RowBox[{"(", "aB", ")"}], "*", "n", "*", "n"}], "+", 
   RowBox[{
    RowBox[{"(", "Ab", ")"}], "*", "n"}], "+", "AB", "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.7435326470028887`*^9, 3.743532707429637*^9}, {
   3.7435327408307953`*^9, 3.74353276220684*^9}, {3.74353304332198*^9, 
   3.743533218522812*^9}, 3.743533256245479*^9, {3.7435359302632837`*^9, 
   3.743535932989943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"elem2mat", "[", 
   RowBox[{"elem_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"elem2mat", "[", 
    RowBox[{"elem", ",", "n"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"out", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"elem", "-", "1"}], ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"elem", "-", "1"}], ")"}], "/", "n"}], "]"}], ",", "n"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"elem", "-", "1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"n", "*", "n"}], ")"}]}], "]"}], ",", "n"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"elem", "-", "1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"n", "*", "n", "*", "n"}], ")"}]}], "]"}], ",", "n"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.74353629858526*^9, 3.74353630650299*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initlist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "i", ",", "j", ",", "0"}], "}"}], ",", 
         RowBox[{"mat2elem", "[", 
          RowBox[{"0", ",", "i", ",", "j", ",", "0", ",", "10"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743621962186899*^9, 3.7436219656146593`*^9}, {
  3.743684748653318*^9, 3.74368481375597*^9}, {3.743687301776951*^9, 
  3.743687306568407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"absorblist1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "9", ",", "j", ",", "k"}], "}"}], ",", 
         RowBox[{"mat2elem", "[", 
          RowBox[{"i", ",", "9", ",", "j", ",", "k", ",", "10"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"absorblist2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "i", ",", "j", ",", "k"}], "}"}], ",", 
         RowBox[{"mat2elem", "[", 
          RowBox[{"9", ",", "i", ",", "j", ",", "k", ",", "10"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"absorblist", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
       "}"}], "}"}], ",", "absorblist1", ",", "absorblist2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.743621929380185*^9, 3.7436219962254877`*^9}, {
   3.74364659314019*^9, 3.7436466593319387`*^9}, {3.7436538930626717`*^9, 
   3.743653922789815*^9}, 3.743654702014392*^9, {3.743654930210383*^9, 
   3.743654951502969*^9}, {3.743655016850176*^9, 3.743655023903759*^9}, {
   3.743655069274061*^9, 3.743655126540348*^9}, {3.743655194829405*^9, 
   3.743655280165965*^9}, {3.7436555410642853`*^9, 3.743655615409655*^9}, {
   3.7436559018866243`*^9, 3.743655902127904*^9}, {3.743656323674335*^9, 
   3.7436563533920383`*^9}, {3.743681734805682*^9, 3.7436818126700706`*^9}, {
   3.7436819488873577`*^9, 3.743681962317803*^9}, {3.7436820946652327`*^9, 
   3.7436821072985888`*^9}, {3.74368214240304*^9, 3.743682163419898*^9}, 
   3.743682244523645*^9, {3.743682420030527*^9, 3.743682525076436*^9}, {
   3.743682695073859*^9, 3.743682695245965*^9}, {3.743684202517004*^9, 
   3.7436842523584757`*^9}, {3.743684298375951*^9, 3.7436843059713373`*^9}, {
   3.7436843593138027`*^9, 3.743684418652347*^9}, {3.7436844745605307`*^9, 
   3.743684515571788*^9}, {3.7436846041329107`*^9, 3.743684607638791*^9}, {
   3.743686843831653*^9, 3.7436868585681143`*^9}, {3.7436870086238213`*^9, 
   3.7436870423773737`*^9}, {3.743687178681831*^9, 3.7436871830482388`*^9}, {
   3.7436894277160473`*^9, 3.743689436081847*^9}}],

Cell[CellGroupData[{

Cell["Get absorbtionmatrices", "Section",
 CellChangeTimes->{{3.743621326339265*^9, 3.7436213290067253`*^9}, {
  3.743621890490088*^9, 3.743621900291585*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar050", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r050.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar050Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar050", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "datar050", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.743620480979124*^9, 3.7436204811440287`*^9}, {
   3.743620839653039*^9, 3.7436208396900063`*^9}, {3.74362090165528*^9, 
   3.7436209053043423`*^9}, {3.743621196121406*^9, 3.743621196631092*^9}, {
   3.7436213400715437`*^9, 3.743621346110283*^9}, {3.743624893944894*^9, 
   3.74362489593084*^9}, 3.743654721219489*^9, {3.743684657869526*^9, 
   3.743684682872574*^9}, 3.743684722991727*^9, {3.743684852971095*^9, 
   3.743684882449819*^9}, {3.7436853129121933`*^9, 3.7436853143163357`*^9}, {
   3.743685363773755*^9, 3.743685394215905*^9}, 3.743687186585568*^9, {
   3.743687348933238*^9, 3.743687359761594*^9}, {3.74368740302316*^9, 
   3.7436874040378027`*^9}, {3.7436880262159653`*^9, 3.743688026618231*^9}, {
   3.7436890141257668`*^9, 3.74368901586553*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar040", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r040.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar040Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar040", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar040", "]"}]}], "Input",
 CellChangeTimes->{{3.743621368989071*^9, 3.743621392833006*^9}, {
   3.743621550485856*^9, 3.743621552096622*^9}, {3.743624905910036*^9, 
   3.743624906910605*^9}, 3.743625077419878*^9, {3.743625128786949*^9, 
   3.743625129483245*^9}, 3.7436848951406593`*^9, {3.743685317329459*^9, 
   3.743685318487177*^9}, 3.743685417406734*^9, 3.74368736138708*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar030", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r030.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar030Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar030", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar030", "]"}]}], "Input",
 CellChangeTimes->{{3.743621373063945*^9, 3.7436214159976892`*^9}, {
   3.7436215551137543`*^9, 3.743621558092945*^9}, {3.743624909070483*^9, 
   3.7436249098651876`*^9}, {3.743625131511458*^9, 3.743625131938343*^9}, 
   3.743684896470853*^9, {3.74368532102083*^9, 3.743685321945971*^9}, 
   3.743685420752927*^9, 3.743687362989492*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar020", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r020.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar020Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar020", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar020", "]"}]}], "Input",
 CellChangeTimes->{{3.7436213772127666`*^9, 3.743621399802278*^9}, {
   3.743621560508998*^9, 3.743621562209231*^9}, {3.743624911958313*^9, 
   3.7436249164483747`*^9}, {3.743625134844088*^9, 3.743625135306345*^9}, 
   3.7436848977453833`*^9, {3.743685324476516*^9, 3.743685325458893*^9}, 
   3.743685423715481*^9, 3.7436873644697933`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar010", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r010.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar010Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar010", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar010", "]"}]}], "Input",
 CellChangeTimes->{{3.743621428127791*^9, 3.7436214354397383`*^9}, 
   3.743621512456812*^9, {3.743624921787673*^9, 3.743624923806884*^9}, {
   3.743625137078079*^9, 3.7436251375628147`*^9}, 3.743684899024624*^9, {
   3.743685327476411*^9, 3.743685328348736*^9}, 3.7436854271710463`*^9, 
   3.743687366024888*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar005", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r005.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar005Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar005", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar005", "]"}]}], "Input",
 CellChangeTimes->{{3.74362144020966*^9, 3.743621453695957*^9}, 
   3.743621514372066*^9, {3.743624925411787*^9, 3.743624925986004*^9}, {
   3.743625141871269*^9, 3.743625142310492*^9}, 3.743684900321056*^9, {
   3.743685331443543*^9, 3.743685332829341*^9}, 3.7436854303342323`*^9, 
   3.743687368281971*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datar000", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</home/freek/Documents/temp/Introgression/Matlab/data/\
Absorbptionmatrices/r000.mat\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datar000Normal", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"datar000", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"initlist", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], "//",
     "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "datar000", "]"}]}], "Input",
 CellChangeTimes->{{3.743621458993288*^9, 3.743621471633054*^9}, 
   3.743621516065228*^9, {3.743624927574041*^9, 3.743624928147056*^9}, {
   3.743625144289578*^9, 3.74362514476348*^9}, 3.743684901500495*^9, {
   3.74368533532521*^9, 3.743685336213829*^9}, 3.7436854329236717`*^9, 
   3.7436902359445753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ProjectF for absorbstates", "Section",
 CellChangeTimes->{{3.743622048719474*^9, 3.7436220551565027`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "projectF", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projectF", "[", 
   RowBox[{"state_", ",", "s_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"projectF", "[", 
    RowBox[{"state", ",", "s", ",", "r"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "out", ",", "sum", ",", "fAB", ",", "fAb", ",", "faB", ",", "fab", ",", 
       "fABn", ",", "fAbn", ",", "faBn", ",", "fabn", ",", "Wbar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"out", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sum", " ", "=", " ", 
       RowBox[{"Total", "[", "state", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fAB", "=", 
       RowBox[{
        RowBox[{"state", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", "sum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fAb", "=", 
       RowBox[{
        RowBox[{"state", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "sum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"faB", "=", 
       RowBox[{
        RowBox[{"state", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/", "sum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fab", "=", 
       RowBox[{
        RowBox[{"state", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/", "sum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "10"}], ",", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Wbar", "=", 
          RowBox[{
           RowBox[{"fAB", "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", "s"}], ")"}]}], "+", 
           RowBox[{"fAb", "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", "s"}], ")"}]}], "+", "faB", "+", "fab"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"fABn", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fAB", " ", "fAB", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "faB", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "fab", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}], "+", 
             RowBox[{"faB", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], "r"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"Wbar", " ", "Wbar"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fAbn", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fAb", " ", "fAb", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAb", " ", "fab", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAb", " ", "fAB", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "fab", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], "r"}], "+", 
             RowBox[{"faB", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"Wbar", " ", "Wbar"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"faBn", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"faB", " ", "faB"}], " ", "+", 
             RowBox[{"faB", " ", "fab"}], "+", 
             RowBox[{"faB", " ", "fAB", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "fab", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], "r"}], "+", 
             RowBox[{"faB", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"Wbar", " ", "Wbar"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fabn", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fab", " ", "fab"}], " ", "+", 
             RowBox[{"fab", " ", "faB"}], "+", 
             RowBox[{"fab", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}]}], "+", 
             RowBox[{"fAB", " ", "fab", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}], "+", 
             RowBox[{"faB", " ", "fAb", 
              RowBox[{"(", 
               RowBox[{"1", "+", "s"}], ")"}], "r"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"Wbar", " ", "Wbar"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fAB", "=", "fABn"}], ";", "\[IndentingNewLine]", 
         RowBox[{"fAb", "=", "fAbn"}], ";", "\[IndentingNewLine]", 
         RowBox[{"faB", "=", "faBn"}], ";", "\[IndentingNewLine]", 
         RowBox[{"fab", "=", "fabn"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", "fAB"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", "fAb"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", "faB"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "=", "fab"}], ";", 
      "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7435361494030724`*^9, {3.743536250477003*^9, 3.74353626314005*^9}, {
   3.743536647094993*^9, 3.743536647261747*^9}, {3.743536768508087*^9, 
   3.743536768793845*^9}, 3.743655691031095*^9, {3.743697139859022*^9, 
   3.7436971896382227`*^9}, {3.743697231742302*^9, 3.743697232128325*^9}, {
   3.743697355554027*^9, 3.74369735573466*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MakeProjectionTable", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeProjectionTable", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"MakeProjectionTable", "[", "r", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"projectF", "[", 
       RowBox[{
        RowBox[{"absorblist", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0.22", ",", "r"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "absorblist", "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.743602336964971*^9, 3.743602337487117*^9}, {
   3.743602432827633*^9, 3.743602438099522*^9}, {3.7436243811991262`*^9, 
   3.743624408937189*^9}, {3.743684977487936*^9, 3.743685027170652*^9}, {
   3.7436894787349243`*^9, 3.743689478869376*^9}, {3.743697333966258*^9, 
   3.743697334330305*^9}, {3.743697367552885*^9, 3.7436974961362123`*^9}, 
   3.743697528284338*^9, {3.743697701890119*^9, 3.74369773821222*^9}, {
   3.7436978841353827`*^9, 3.7436978849812813`*^9}, {3.7436979284727583`*^9, 
   3.7436979592155523`*^9}, {3.7436979912339077`*^9, 
   3.7436980006501904`*^9}, {3.743698674636352*^9, 3.743698883092805*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate expected F", "Section",
 CellChangeTimes->{{3.743624466179233*^9, 3.743624477123004*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fun", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fun", "[", 
   RowBox[{"absorbvec_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "state", ",", "i", ",", "tableproject"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tableproject", "=", 
      RowBox[{"MakeProjectionTable", "[", "r", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "absorbvec", "]"}]}], ",", 
       RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"absorbvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"out", "+=", 
           RowBox[{
            FractionBox[
             RowBox[{"absorbvec", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"1", "-", 
              RowBox[{"absorbvec", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{
              RowBox[{"tableproject", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"tableproject", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"tableproject", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz2kow3EAxvG/Od844gX2wlxbOVt5QUiklbIwYVljwhI1Yo7IhJkMeWF7
gdSyMAphFJucNRRKUStHieZ64Yo5avN/fi+ePm+/T1h5Xb6UQVFUOD24aPCT
Jd89Z+jzgoisDbsBpi9FLsPXi4I12H/ksQ5Lmxtu4MJBxBN82vK3Qx9N4Dc0
M1kOYlKkE6bpXN1TaLUmL0+Yy03shtzCECXk7KnVsEyjGIRnr79aGCt3jsM+
6+okHClhTcFz/e4cLNlhLkLbpXgDssXVxDrzxzYcvPg5hJU2VXQqOj7ZMdAh
NcpEtKY/fSMU9NgU8D74qwMy9nUWKf46cw6J8T6nMF/IJ9ZKGtyaaC0tcm/4
IGz1h+/HSqIudLZRSeu1xW+GXVfjNT20JxJKBofUO3Ionuc1wbNS91v4Ymon
Xk+82Inn30RRb5Svipa5+UjMqm9LgAOjw8TKldAqmPlGVUNOd4BATeti7CqA
An62BBbNKInWj+dpKJvrNEBWXMU8ZBeLjJDLuEvvR+8Ygwf/AX5UMfI=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr050", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar050Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.5"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr050", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr050", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743540101398018*^9, 3.743540106151882*^9}, {
   3.7436027372627296`*^9, 3.743602781374729*^9}, {3.743602812128927*^9, 
   3.743602812825427*^9}, {3.743602846378755*^9, 3.7436028615268993`*^9}, {
   3.7436033588551598`*^9, 3.743603439550597*^9}, {3.743603471293803*^9, 
   3.743603515490631*^9}, {3.743603595696384*^9, 3.7436035972657137`*^9}, {
   3.74360364855466*^9, 3.743603650034402*^9}, {3.743603806846184*^9, 
   3.743603893001321*^9}, {3.743603931294281*^9, 3.7436039315098553`*^9}, {
   3.743604011145154*^9, 3.7436040113614283`*^9}, {3.743686321242393*^9, 
   3.743686323882721*^9}, {3.743689742362814*^9, 3.743689778669117*^9}, {
   3.743697583511661*^9, 3.743697586654489*^9}, {3.7436981466449347`*^9, 
   3.743698190484397*^9}, {3.743698907680386*^9, 3.74369891882236*^9}, {
   3.7437001456327953`*^9, 3.7437001467577972`*^9}, 3.743700190077476*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr040", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar040Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.4"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr040", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr040", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743689803685511*^9, 3.743689816375721*^9}, {
   3.743698959410759*^9, 3.743698961141967*^9}, {3.743700148365219*^9, 
   3.743700148897438*^9}, 3.743700187672614*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr030", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar030Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.3"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr030", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr030", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743689823506927*^9, 3.74368983249885*^9}, {
   3.743698964565743*^9, 3.743698965891488*^9}, {3.743700150671818*^9, 
   3.7437001523008842`*^9}, 3.743700185399664*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr020", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar020Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.2"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr020", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr020", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743689825372058*^9, 3.743689835869738*^9}, {
  3.743698968790449*^9, 3.743698969476288*^9}, {3.743700153602644*^9, 
  3.7437001826763277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr010", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar010Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.1"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr010", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr010", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743689828450459*^9, 3.743689849655427*^9}, {
  3.7436989728877687`*^9, 3.743698973599731*^9}, {3.7437001561096487`*^9, 
  3.743700178781145*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr005", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar005Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.05"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr005", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr005", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7436898533256283`*^9, 3.743689858678122*^9}, {
  3.743698977921752*^9, 3.743698980240548*^9}, {3.743699758544231*^9, 
  3.743699759134853*^9}, {3.7437001608529243`*^9, 3.743700176692185*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsr000", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"initlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"fun", "[", 
        RowBox[{
         RowBox[{"datar000Normal", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", "0.0"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "initlist", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"plotr000", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"resultsr000", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<BoldColor\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}],
      ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743689864054673*^9, 3.743689870112453*^9}, {
  3.74369898405713*^9, 3.743698985615328*^9}, {3.743700163335594*^9, 
  3.743700174464517*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"final", "=", 
  RowBox[{"ListPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"resultsr050", ",", "resultsr010", ",", "resultsr000"}], "}"}], 
    ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", 
     RowBox[{"{", "\"\<Detailed\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<#Ab\>\"", ",", "\"\<#aB\>\"", ",", "\"\<F\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r=0.5\>\"", ",", "\"\<r=0.1\>\"", ",", "\"\<r=0\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.743700204224381*^9, 3.7437002261176853`*^9}, {
   3.7437002889515343`*^9, 3.743700293981125*^9}, {3.7437003555968857`*^9, 
   3.743700368545079*^9}, {3.743700491435561*^9, 3.7437005759171257`*^9}, {
   3.7437006871233253`*^9, 3.743700687309057*^9}, {3.743700754220793*^9, 
   3.743700794466936*^9}, {3.743700841629389*^9, 3.743700885691922*^9}, 
   3.743702964657258*^9, 3.743703140536783*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJyN1nlQFGcaBnCEjczGUsfNBDpJL4wdjILiioIKmsxrUKLBg0MMCGQBF1KS
FCZGgV00QdDSlV0xygqrEkBkTSDBFWRQruIaThNOuQUEUVTiTlAiV5H1D5qu
erqnJvPP1Pertz7m6W76exYG7HMLNDQwMJg3y8DAyID/aFUGkh/etapNnvfC
HU5WqmCeds3fvSNrRxO4jIIj7t63/7YNXE7Hrfz9AtK6wBX0977LCbbf9YAz
dOWm/ZOS8V5wlr5IL2Hq6u6CKyn5tO3dfJ8+cI4C15sM3U3tm/nd0nl516qG
DA9ddPhHKc7Tv26/fOBBdx24jBJPfqieM94MLqdYdW5d9kAbuIJiLP7gPDza
Cc6Q+Ypz0Ve8u8FZumFSPnBoQS+4kuzYJyvOZKBztNV8XYvNRO/M/ZCOy7tW
NdwY1p5fXoTzVMcuunFwVS24jNpTy5hHTo3gckpyOR3i9vsWcAU1lkY3nZK3
gzPk+Gjig66wTnCWBozVWqetd8CV5MwZjmTFdoNz9HKBSay1Q8/Mcyadl3et
Kq6rdmfqX/NwnlIzFh03aasEl9Gwqq5/1oZ6cDnVX26eCmhqAleQ4fqd4Vbl
LeAMFdRHJcUvagdnye+rfuutUx3gSup4MBh36f0u8Bd5DTxO/TTJu0JHXt61
qsy0a56fh+biPPl05Prc36MBl1HDP50Knh74AVxOFRETqmizRnAFXVWXDK77
pRmcofdODhXN3t4KzlLYXDuLqsXt4EpKef/ZkrG/dYBzdOZDZ1+lLf+cMDry
8q5VRZ+7J8vamYPz1LAk5RPF+TJwGe2Nc6uPWV4LLqcTxkV+a5vqwRXk7OL1
69a4JnCGzFatOVLWfxucpboPEhpPF7eCK6knyOXttj+2g3MUefjBlsFe3lkd
eXnXqmz37R0/0paN82RjPrVK5VEKLqOC469qomOqweU09cT4+0uaOnAFfZTz
qqH72UZwhpL8e10ne5rBWTpm46b+rLIFXEnyKMfFKxzawDk68GmoxuUVPq9S
R17etaqFyzIzbLuycJ5eSn1rv9/hEnAZPfzd/cDgg1Xgctp1v8j/9okfwRUU
6qTIc/upAZyhOxtqMl+hZnCWXssYvemgagFXUviJFo1nTys4R6bp8UFGz/jr
wOnIy/uL83d3V8QOpyycpwTnMUt3wxJwGZXeTfTvv1MJLiej1cPsrwM/gCuo
8J3CWblJDeAMOUeaPgo0agZnKdRk7oiXZQu4kqai7MpTXsdcHJ3Ke93+XDd/
f/X3jU9/tuq0SMsU9Y0U08G89e/mgctoWehH1wJ2lYDLqXz+Aq/L6eWivhH/
feP1wW3YZxjaca99022vanCWzq29kL2xq0bUN+ZcHHq6vKsWnKOrj78JWudz
6zf3jXftgkdtBr4V9Q0D79jCq1q1qG84rtgwmT1cBC6nnsylli43sbcoSLEk
9EidpwacobHCtpCwvZXgLJkfsgqyfFYFrqSDHQs3bp+sBufo4XU7D/WRmpn7
IR1X6BtnzL8u3FD9H1HfWGbn/XX2heuivlGXNL5y7ZoCUd/Y0zlIbzmWgCuo
s7t1YmlHGThD81tmn816rAFnycK/MX4wohJcSRd8922OOlkFzpFdiPU8V0X1
zHMmnVfoG49+XBl1OPGyqG9YuE7Fpg1mgcvo41HDa3OWYT+R07aalx7uWVws
6huatxuzWtWl4AztnP3M5b2acnCWHLcsz4vyrxD1jaH8kAaLcOw/HCVuPLbb
3Zi/Dvr7RoBvWnzYnFRR3/hL+peelmnXRH1j7eIRzUjyDVHfyD4ZzvkmF4Er
iHXvTLrYWQLOUI6RabBspAycJbejEx87JWDPUdL48ECicUEFOEcXIve98dyd
vw76+8aX1ysKNvWniPrGvvT9/b5Z/xX1jXd6/Kj/YC64nOwUXfPKvAtFfaPe
Ndm11r4EnKFHS026zf6MfYalJHVIUJaJBlxJ22WrvwhzrQDnyPFQmUfbGO/6
+0Zw39o9ScYpOE+fZYc7tD2/KuobDYbrb9nGqcHl9Kf5Dzfb7C0AV1DaWNVX
NppicIZywxf3Dkxin2FJ3eEUadVcDq6k8wHO/RvWYC6OTo/H38qbxd9f/X3D
au6b8zYHJov6RsauGLOAB5ngMgr75ufizY9zwOXkcenfjo05+aK+cSUueXx0
fzE4Q1ZLV556rbQUnKUj8ave+FxTDq6kHat/qYn4pAKcIzNbQ9P8Y9gH8MP7
i/M32Kj65p0kUd+wdvT6rtssE1xGi0yfWieE5IDLyefom1vOr8wHV5DLgv9V
+NsXgzNkOuRt3JpcCs5STn3OUbvWcnAlbeOen83oqwDnKCYybfXuKv59pb9v
SDue20LfkHY8B4S+Ie34XtHCc4qOz6lW1/3ENbjoehB8g4vO8+m16NybXovO
h+m16D06vRa9b6bXov/L6TUHrr9v6JjXsQ/uJ/QNace8Qt+Qdswr9A1p58D1
9w0d8zr2wbxC35B2zCv0DWnHvELfkHYOXH/f0DGvYx/MK/QNace/L/QNace8
Qt+Qdg5cf9/QMa9jH8wr9A1px7xC35B2zCv0DWnnwPX3DR3zOvbBvELfkHbM
K/QNacffK/QNaefA9fcNHfM69sG8Qt+Qdswr9A1px7xC35B2DhzX6Jh3Zl7H
PpiXd8zLO+blHfPyjnl5x7y8czP+f64sbLI=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.5]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwNw1d2ogAAAEDXEjVSbRRRAcECiKB0G8UCimDs5jMX2KvskTfz3jA/fy8/
2Uwm8+937jeBwLokApVGJfsHyFZyWSAHgMUPJAfmoUL+owAjHzDZQoEmCDSa
IJSHCxCCFj/LtRJahSEch7BStVwrV9udOgaBTQys1T/p7ohEiCaNNbs0ipAw
TsgTvtnooqUiizODYadK1do1qkVyHN+i+u1WFSXYHkf2aIGhRwJJ9KotisBZ
BsdEltFmS4rv91hJYsVBu89zMk+1Ou3BdKj2pLHMjQVNFGYazWBcbyyITOSu
NV0M/Lg/UcaSYUh6XxmoA0Uem5Y9WRv6YjpfLfeWbGorXVuuJrI1NszhQF2t
9e1uodiOabiusVYcda46puv5gW0rE88yw/2Xb3mrcL3ah7blT9V5GK0Dx3aC
zWK+9dzDwY2czXw736TnnXc4Hn3vco3CSxR+XeJTMOnz10MU+8fTJtickuPh
tkm26TY53u67bfr+Pt/j4+1wfcT3x/N0ih/P5CSMZsnz9U5f5/SdvNJ6rf0f
fQxPBA==
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.5]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwNw+uWoQAAAGBn90nmlfbvjvsoSXQVlVxDolJCpaKLyrjbB9z5zvk+Ss0/
pV+ZTEb9+fvnyrKBSrPy+Rf4rGQ/gSwAZsFcsVCrwUUoXy3kIbTZqRUgAAWB
JgpWc9V8DquCEE7ApWIJrkNVHK9ipXoZKdfhGoli4FcZQRpfTGdE1giUwdAO
Q7cbM7FHUjDDYgLH1qkWgXMcztZbCI20+B41GLYbCD0eLSmSZ8YsMxoTXJeq
w0QNGtD9Nj1o9fpdbjLhhFafZnFsMZTGAttrUXx3Ki+3M346loXxUu7xs+5k
qkwEWRGc/Wk2XQWWOZ2o6kTpzwdTdSUN5sOBpOnibnvUZit5u9uZijjTNgtD
3immquhzcb6WVqq1kAxLNQ1p7R02fXG+1+y5vra11c43d0df1/Z7R/eP335g
ntP32nE3hmdbYWgFa9fwDDc9H+wwivb25Rr4l8D/vpxix1nr1zA47aPYddw4
icKbm3ipl0S3+8FL3//O91N0C6+P0/3xjOPT45nEJNFNnq93+hL7veSV8mT3
P0zK5uQ=
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.5]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNlGt2EkEUhKcnUdSoe3BLLsEF6FbcjIkSH5GniRJEeWSCggGNQAIoCSGJ
QKx75uvD/KjT3dV169YdmHn05Nnjp2EQBM+FNeFcGAhnwpawI7wXSkJOyMK9
E3ZZN4UX8Jtw20Kami34Hfbm95LzHmdDBt56vOKcZp9Faz2/4puGz6Cx2jx3
+/jvUrdHXVV4LRSEN/Af6Z/nbps1j873+IQ2gz6HxvRF/Ap4VtFWhC/CB+Et
miLwXJVs38md43ln6VlizeBpmjK9PwuH9ClwNu8HTr+ncN/F2kJinjI671un
vghfh68JTeEbM1TJ2CJ7kbp9vBrCAWfbd4SuEFHbwrNEjwZn/1zL1JpHG43P
UGHOiIx+hgi+gf4HqOPRYq3hG1F7zFy/0PwWevhY/RH6Bvsemr/MdQDf4q7N
M6qQN0LTYfYaM/bxb3NnHifksLqfwlA4FS6YrQt/RO2A/YDaAXyfmZr49cg7
wa+D/g/zj7kzzT/0E3zO8O3Tv5PINCPjIbmaaPzvM6b/KDGP34+4G3LuJmaw
b8+UPiesQzTH1PnMczJOWPvUeI8r4ZpZ58x3y8X5T9FM4O0+pbul1gXnBb7X
eNm7ZDWmuYGzLJc8j1Fizhn8lDxLcoypW8Iv8F13cZ8ZzzdwcYbbLtbcwE+5
u4CbM5PXnZPZNM6tcl3S23QptHbvs9u34iE57vAcUtyHbjX/FWfrbbq77JeJ
cwDn2N9z8f/Kfp82Wewu5C6gzt4j+7bYO2b8hlvpNviOhaxrcCGadTib4z92
pEkV
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{60, 70, 80, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 71, 61,
          51, 41, 31, 21, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 
         60}]}, {
        GrayLevel[0], 
        Line3DBox[{150, 160, 170, 180, 179, 178, 177, 176, 175, 174, 173, 172,
          171, 161, 151, 141, 131, 121, 111, 101, 91, 92, 93, 94, 95, 96, 97, 
         98, 99, 100, 110, 120, 130, 140, 150}]}, {
        GrayLevel[0], 
        Line3DBox[{240, 250, 260, 270, 269, 268, 267, 266, 265, 264, 263, 262,
          261, 251, 241, 231, 221, 211, 201, 191, 181, 182, 183, 184, 185, 
         186, 187, 188, 189, 190, 200, 210, 220, 230, 240}]}}}, 
     VertexNormals -> CompressedData["
1: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
v/x/xv8PdNlM9g==
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, AxesLabel -> {
       FormBox["\"#Ab\"", TraditionalForm], 
       FormBox["\"#aB\"", TraditionalForm], 
       FormBox["\"F\"", TraditionalForm]}, Boxed -> {Left, Bottom, Back}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, 
     FaceGrids -> {{0, 0, -1}, {0, 1, 0}, {-1, 0, 0}}, FaceGridsStyle -> 
     Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.2]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{1., 9.}, {0., 9.}, {0., 0.5825051890441385}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {{{0, 
         FormBox["0", TraditionalForm]}, {1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}}, {{0, 
         FormBox["0", TraditionalForm]}, {1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}}, {{0., 
         FormBox["0.`", TraditionalForm]}, {0.1, 
         FormBox["0.1`", TraditionalForm]}, {0.2, 
         FormBox["0.2`", TraditionalForm]}, {0.30000000000000004`, 
         FormBox["0.30000000000000004`", TraditionalForm]}, {0.4, 
         FormBox["0.4`", TraditionalForm]}, {0.5, 
         FormBox["0.5`", TraditionalForm]}, {0.6000000000000001, 
         FormBox["0.6000000000000001`", TraditionalForm]}, {
        0.7000000000000001, 
         FormBox["0.7000000000000001`", TraditionalForm]}, {0.8, 
         FormBox["0.8`", TraditionalForm]}, {0.9, 
         FormBox["0.9`", TraditionalForm]}, {1., 
         FormBox["1.`", TraditionalForm]}}}}],FormBox[
    FormBox[
     TemplateBox[{"\"r=0.5\"", "\"r=0.1\"", "\"r=0\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7437031412767363`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.743703151609831*^9, 3.743703154766119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</home/freek/Documents/temp2/Introgression/Matlab/data/FAr000.csv\>\"",
     ",", "resultsr000"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.743703161065634*^9, 3.743703162509818*^9}, {
  3.74370322854877*^9, 3.743703285394128*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/freek/Documents/temp2/Introgression/Matlab/Figures/\
Projection3DPlot.eps\>\"", ",", "final"}], "]"}]], "Input",
 CellChangeTimes->{{3.743603599326437*^9, 3.743603619592785*^9}, {
  3.743603716832738*^9, 3.743603723893731*^9}, {3.743604042174514*^9, 
  3.7436040430078917`*^9}, {3.743702322948656*^9, 3.743702367676382*^9}, {
  3.743702982202549*^9, 3.7437029825903797`*^9}}],

Cell[BoxData["\<\"/home/freek/Documents/temp2/Introgression/Matlab/Figures/\
Projection3DPlot.eps\"\>"], "Output",
 CellChangeTimes->{
  3.743603622397361*^9, 3.7436037263069763`*^9, 3.743603904173661*^9, 
   3.7436040451472063`*^9, 3.743700070629146*^9, 3.743702229121477*^9, {
   3.7437023236774683`*^9, 3.743702372701929*^9}, {3.7437031167194853`*^9, 
   3.743703137688965*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1016},
WindowMargins->{{1, Automatic}, {Automatic, 11}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 93, "Title"],
Cell[690, 25, 234, 5, 32, "Input"],
Cell[927, 32, 624, 14, 33, "Input"],
Cell[1554, 48, 1997, 59, 173, "Input"],
Cell[3554, 109, 761, 21, 32, "Input"],
Cell[4318, 132, 3033, 69, 91, "Input"],
Cell[CellGroupData[{
Cell[7376, 205, 158, 2, 65, "Section"],
Cell[7537, 209, 1584, 35, 72, "Input"],
Cell[9124, 246, 1137, 28, 72, "Input"],
Cell[10264, 276, 1119, 28, 72, "Input"],
Cell[11386, 306, 1122, 28, 72, "Input"],
Cell[12511, 336, 1096, 28, 72, "Input"],
Cell[13610, 366, 1091, 28, 72, "Input"],
Cell[14704, 396, 1092, 28, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15833, 429, 112, 1, 65, "Section"],
Cell[15948, 432, 7065, 182, 510, "Input"],
Cell[23016, 616, 1278, 27, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24331, 648, 105, 1, 65, "Section"],
Cell[24439, 651, 2611, 64, 361, "Input"],
Cell[27053, 717, 2645, 63, 52, "Input"],
Cell[29701, 782, 1949, 54, 52, "Input"],
Cell[31653, 838, 1950, 54, 52, "Input"],
Cell[33606, 894, 1927, 54, 52, "Input"],
Cell[35536, 950, 1929, 54, 52, "Input"],
Cell[37468, 1006, 1976, 54, 52, "Input"],
Cell[39447, 1062, 1924, 54, 52, "Input"],
Cell[CellGroupData[{
Cell[41396, 1120, 1913, 48, 52, "Input"],
Cell[43312, 1170, 69968, 1326, 308, "Output"]
}, Open  ]],
Cell[113295, 2499, 92, 1, 30, "Input"],
Cell[113390, 2502, 305, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[113720, 2513, 438, 8, 32, "Input"],
Cell[114161, 2523, 381, 6, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

